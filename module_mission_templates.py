from compiler import *  # should be after all imports

####################################################################################################################
#   Each mission-template is a tuple that contains the following fields:
#  1) Mission-template id (string): used for referencing mission-templates in other files.
#     The prefix mt_ / mt. is automatically added before each mission-template id
#
#  2) Mission-template flags (int): See header_mission-templates.py for a list of available flags
#  3) Mission-type(int): Which mission types this mission template matches.
#     For mission-types to be used with the default party-meeting system,
#     this should be 'charge' or 'charge_with_ally' otherwise must be -1.
#
#  4) Mission description text (string).
#  5) List of spawn records (list): Each spawn record is a tuple that contains the following fields:
#    5.1) entry-no: Troops spawned from this spawn record will use this entry
#    5.2) spawn flags.
#    5.3) alter flags. which equipment will be overriden
#    5.4) ai flags.
#    5.5) Number of troops to spawn.
#    5.6) list of equipment to add to troops spawned from here (maximum 8).
#  6) List of triggers (list).
#     See module_triggers.py for infomation about triggers.
#
#  Please note that mission templates is work in progress and can be changed in the future versions.
#
####################################################################################################################

pilgrim_disguise = [
    itm.pilgrim_hood,
    itm.pilgrim_disguise,
    itm.practice_staff,
    itm.throwing_daggers,
]
af_castle_lord = af_override_horse | af_override_weapons | af_require_civilian
af_town_walker = af_override_horse | af_override_weapons

common_battle_mission_start = (
    ti_before_mission_start,
    0,
    0,
    [],
    [
        (team_set_relation, 0, 2, 1),
        (team_set_relation, 1, 3, 1),
        (call_script, "script_change_banners_and_chest"),
    ],
)

common_battle_tab_press = (
    ti_tab_pressed,
    0,
    0,
    [],
    [
        (try_begin),
          (eq, "$g_battle_won", 1),
          (call_script, "script_count_mission_casualties_from_agents"),
          (finish_mission, 0),
        (else_try),
          (call_script, "script_cf_check_enemies_nearby"),
          (question_box, "str_do_you_want_to_retreat"),
        (else_try),
          (display_message, "str_can_not_retreat"),
        (try_end),
    ],
)

common_battle_init_banner = (
    ti_on_agent_spawn,
    0,
    0,
    [],
    [
        (store_trigger_param_1, ":agent_no"),
        (agent_get_troop_id, ":troop_no", ":agent_no"),
        (
            call_script,
            "script_troop_agent_set_banner",
            "tableau_game_troop_label_banner",
            ":agent_no",
            ":troop_no",
        ),
    ],
)


common_arena_fight_tab_press = (
    ti_tab_pressed,
    0,
    0,
    [],
    [
        (question_box, "str_give_up_fight"),
    ],
)

common_custom_battle_tab_press = (
    ti_tab_pressed,
    0,
    0,
    [],
    [
        (try_begin),
          (neq, "$g_battle_result", 0),
          (call_script, "script_custom_battle_end"),
          (finish_mission),
        (else_try),
          (question_box, "str_give_up_fight"),
        (try_end),
    ],
)

custom_battle_check_victory_condition = (
    1,
    60,
    ti_once,
    [
        (store_mission_timer_a, reg(1)),
        (ge, reg(1), 10),
        (call_script, "script_battle_count_fighting_enemies"),
        (eq, reg0, 0),
        (neg | main_hero_fallen, 0),
        (set_mission_result, 1),
        (display_message, "str_msg_battle_won"),
        (assign, "$g_battle_won", 1),
        (assign, "$g_battle_result", 1),
    ],
    [
        (call_script, "script_custom_battle_end"),
        (finish_mission, 1),
    ],
)

custom_battle_check_defeat_condition = (
    1,
    4,
    ti_once,
    [
        (main_hero_fallen),
        (assign, "$g_battle_result", -1),
    ],
    [
        (call_script, "script_custom_battle_end"),
        (finish_mission),
    ],
)

common_battle_victory_display = (
    10,
    0,
    0,
    [],
    [
        (eq, "$g_battle_won", 1),
        (display_message, "str_msg_battle_won"),
    ],
)

common_siege_question_answered = (
    ti_question_answered,
    0,
    0,
    [],
    [
        (store_trigger_param_1, ":answer"),
        (eq, ":answer", 0),
        (assign, "$pin_player_fallen", 0),
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":agent_team", ":player_agent"),
        (try_begin),
          (neq, "$attacker_team", ":agent_team"),
          (neq, "$attacker_team_2", ":agent_team"),
          (str_store_string, s5, "str_siege_continues"),
          (call_script, "script_simulate_retreat", 8, 15, 0),
        (else_try),
          (str_store_string, s5, "str_retreat"),
          (call_script, "script_simulate_retreat", 5, 20, 0),
        (try_end),
        (call_script, "script_count_mission_casualties_from_agents"),
        (finish_mission, 0),
    ],
)

common_custom_battle_question_answered = (
    ti_question_answered,
    0,
    0,
    [],
    [
        (store_trigger_param_1, ":answer"),
        (eq, ":answer", 0),
        (assign, "$g_battle_result", -1),
        (call_script, "script_custom_battle_end"),
        (finish_mission),
    ],
)

common_custom_siege_init = (
    0,
    0,
    ti_once,
    [],
    [
        (assign, "$g_battle_result", 0),
        (call_script, "script_music_set_situation_with_culture", mtf_sit_siege),
    ],
)

common_siege_init = (
    0,
    0,
    ti_once,
    [],
    [
        (assign, "$g_battle_won", 0),
        (assign, "$defender_reinforcement_stage", 0),
        (assign, "$attacker_reinforcement_stage", 0),
        (call_script, "script_music_set_situation_with_culture", mtf_sit_siege),
    ],
)

common_music_situation_update = (
    30,
    0,
    0,
    [],
    [
        (call_script, "script_combat_music_set_situation_with_culture"),
    ],
)

common_siege_ai_trigger_init = (
    0,
    0,
    ti_once,
    [
        (assign, "$defender_team", 0),
        (assign, "$attacker_team", 1),
        (assign, "$defender_team_2", 2),
        (assign, "$attacker_team_2", 3),
    ],
    [],
)

common_siege_ai_trigger_init_2 = (
    0,
    0,
    ti_once,
    [
        (set_show_messages, 0),
        (entry_point_get_position, pos10, 10),
        (try_for_range, ":cur_group", 0, grc_everyone),
          (neq, ":cur_group", grc_archers),
          (team_give_order, "$defender_team", ":cur_group", mordr_hold),
          (team_give_order, "$defender_team", ":cur_group", mordr_stand_closer),
          (team_give_order, "$defender_team", ":cur_group", mordr_stand_closer),
          (team_give_order, "$defender_team_2", ":cur_group", mordr_hold),
          (team_give_order, "$defender_team_2", ":cur_group", mordr_stand_closer),
          (team_give_order, "$defender_team_2", ":cur_group", mordr_stand_closer),
        (try_end),
        (team_give_order, "$defender_team", grc_archers, mordr_stand_ground),
        (team_set_order_position, "$defender_team", grc_everyone, pos10),
        (team_give_order, "$defender_team_2", grc_archers, mordr_stand_ground),
        (team_set_order_position, "$defender_team_2", grc_everyone, pos10),
        (set_show_messages, 1),
    ],
    [],
)

common_siege_ai_trigger_init_after_2_secs = (
    0,
    2,
    ti_once,
    [],
    [
        (try_for_agents, ":agent_no"),
          (agent_set_slot, ":agent_no", slot_agent_is_not_reinforcement, 1),
        (try_end),
    ],
)

common_siege_defender_reinforcement_check = (
    3,
    0,
    5,
    [],
    [
        (lt, "$defender_reinforcement_stage", 7),
        (store_mission_timer_a, ":mission_time"),
        (ge, ":mission_time", 10),
        (store_normalized_team_count, ":num_defenders", 0),
        (lt, ":num_defenders", 8),
        (add_reinforcements_to_entry, 4, 7),
        (val_add, "$defender_reinforcement_stage", 1),
        (try_begin),
          (gt, ":mission_time", 300),  # 5 minutes, don't let small armies charge
          (get_player_agent_no, ":player_agent"),
          (agent_get_team, ":player_team", ":player_agent"),
          (neq, ":player_team", "$defender_team"),  # player should be the attacker
          (neq, ":player_team", "$defender_team_2"),  # player should be the attacker
          (ge, "$defender_reinforcement_stage", 2),
          (set_show_messages, 0),
          (
              team_give_order,
              "$defender_team",
              grc_infantry,
              mordr_charge,
          ),  # AI desperate charge:infantry!!!
          (
              team_give_order,
              "$defender_team_2",
              grc_infantry,
              mordr_charge,
          ),  # AI desperate charge:infantry!!!
          (
              team_give_order,
              "$defender_team",
              grc_cavalry,
              mordr_charge,
          ),  # AI desperate charge:cavalry!!!
          (
              team_give_order,
              "$defender_team_2",
              grc_cavalry,
              mordr_charge,
          ),  # AI desperate charge:cavalry!!!
          (set_show_messages, 1),
          (ge, "$defender_reinforcement_stage", 4),
          (set_show_messages, 0),
          (
              team_give_order,
              "$defender_team",
              grc_everyone,
              mordr_charge,
          ),  # AI desperate charge: everyone!!!
          (
              team_give_order,
              "$defender_team_2",
              grc_everyone,
              mordr_charge,
          ),  # AI desperate charge: everyone!!!
          (set_show_messages, 1),
        (try_end),
    ],
)

common_siege_defender_reinforcement_archer_reposition = (
    2,
    0,
    0,
    [
        (gt, "$defender_reinforcement_stage", 0),
    ],
    [
        (call_script, "script_siege_move_archers_to_archer_positions"),
    ],
)

common_siege_attacker_reinforcement_check = (
    1,
    0,
    5,
    [
        (lt, "$attacker_reinforcement_stage", 5),
        (store_mission_timer_a, ":mission_time"),
        (ge, ":mission_time", 10),
        (store_normalized_team_count, ":num_attackers", 1),
        (lt, ":num_attackers", 6),
    ],
    [
        (add_reinforcements_to_entry, 1, 8),
        (val_add, "$attacker_reinforcement_stage", 1),
    ],
)

common_siege_attacker_do_not_stall = (
    5,
    0,
    0,
    [],
    [  # Make sure attackers do not stall on the ladders...
        (try_for_agents, ":agent_no"),
          (agent_is_human, ":agent_no"),
          (agent_is_alive, ":agent_no"),
          (agent_get_team, ":agent_team", ":agent_no"),
          (this_or_next | eq, ":agent_team", "$attacker_team"),
          (eq, ":agent_team", "$attacker_team_2"),
          (agent_ai_set_always_attack_in_melee, ":agent_no", 1),
        (try_end),
    ],
)

common_battle_check_friendly_kills = (
    2,
    0,
    0,
    [],
    [
        (call_script, "script_check_friendly_kills"),
    ],
)

common_battle_check_victory_condition = (
    1,
    60,
    ti_once,
    [
        (store_mission_timer_a, reg(1)),
        (ge, reg(1), 10),
        (call_script, "script_battle_count_fighting_enemies"),
        (eq, reg0, 0),
        (neg | main_hero_fallen, 0),
        (set_mission_result, 1),
        (display_message, "str_msg_battle_won"),
        (assign, "$g_battle_won", 1),
        (assign, "$g_battle_result", 1),
        (call_script, "script_play_victorious_sound"),
    ],
    [
        (call_script, "script_count_mission_casualties_from_agents"),
        (finish_mission, 1),
    ],
)

common_battle_victory_display = (
    10,
    0,
    0,
    [],
    [
        (eq, "$g_battle_won", 1),
        (display_message, "str_msg_battle_won"),
    ],
)

common_siege_refill_ammo = (
    120,
    0,
    0,
    [],
    [  # refill ammo of defenders every two minutes.
        (get_player_agent_no, ":player_agent"),
        (try_for_agents, ":cur_agent"),
          (neq, ":cur_agent", ":player_agent"),
          (agent_is_alive, ":cur_agent"),
          (agent_is_human, ":cur_agent"),
          (agent_get_team, ":agent_team", ":cur_agent"),
          (this_or_next | eq, ":agent_team", "$defender_team"),
          (eq, ":agent_team", "$defender_team_2"),
          (agent_refill_ammo, ":cur_agent"),
        (try_end),
    ],
)

common_siege_check_defeat_condition = (
    1,
    4,
    ti_once,
    [(main_hero_fallen)],
    [
        (assign, "$pin_player_fallen", 1),
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":agent_team", ":player_agent"),
        (try_begin),
          (neq, "$attacker_team", ":agent_team"),
          (neq, "$attacker_team_2", ":agent_team"),
          (str_store_string, s5, "str_siege_continues"),
          (call_script, "script_simulate_retreat", 8, 15, 0),
        (else_try),
          (str_store_string, s5, "str_retreat"),
          (call_script, "script_simulate_retreat", 5, 20, 0),
        (try_end),
        (assign, "$g_battle_result", -1),
        (set_mission_result, -1),
        (call_script, "script_count_mission_casualties_from_agents"),
        (finish_mission, 0),
    ],
)

simple_battle_morale_check = (
    3,
    0,
    0,
    [
        (store_mission_timer_a, ":mission_time_s"),
        (ge, ":mission_time_s", 30),
        (call_script, "script_decide_team_rout"),
    ],
    [],
)

common_battle_morale_check = (
    0.1,
    0,
    0,
    [
        (store_mission_timer_a_msec, ":mission_time_ms"),
        (ge, ":mission_time_ms", 10000),
        (store_div, ":mission_time_s", ":mission_time_ms", 1000),
        (store_div, ":mission_time_ticks", ":mission_time_ms", 100),
        (try_for_agents, ":agent_no"),
          (agent_is_active, ":agent_no"),
          (agent_is_human, ":agent_no"),
          (agent_is_alive, ":agent_no"),
          # Only check every 50th agent each tick to reduce stutter
          (store_mod, ":ticks_mod", ":mission_time_ticks", 50),
          (store_mod, ":agent_mod", ":agent_no", 50),
          (eq, ":agent_mod", ":ticks_mod"),
          (call_script, "script_decide_run_away_or_not", ":agent_no", ":mission_time_s"),
        (try_end),
    ],
    [],
)

common_battle_order_panel = (
    0,
    0,
    0,
    [],
    [
        (game_key_clicked, gk_view_orders),
        (neg | is_presentation_active, "prsnt_battle"),
        (start_presentation, "prsnt_battle"),
    ],
)

common_battle_order_panel_tick = (
    0.1,
    0,
    0,
    [],
    [
        (is_presentation_active, "prsnt_battle"),
        (call_script, "script_update_order_panel_statistics_and_map"),
    ],
)

common_battle_inventory = (
    ti_inventory_key_pressed,
    0,
    0,
    [],
    [
        (display_message, "str_use_baggage_for_inventory"),
    ],
)

common_inventory_not_available = (
    ti_inventory_key_pressed,
    0,
    0,
    [
        (display_message, "str_cant_use_inventory_now"),
    ],
    [],
)

common_siege_init_ai_and_belfry = (
    0,
    0,
    ti_once,
    [
        (call_script, "script_siege_init_ai_and_belfry"),
    ],
    [],
)

common_siege_move_belfry = (
    0,
    0,
    ti_once,
    [
        (call_script, "script_cf_siege_move_belfry"),
    ],
    [],
)

common_siege_rotate_belfry = (
    0,
    2,
    ti_once,
    [
        (call_script, "script_cf_siege_rotate_belfry_platform"),
    ],
    [
        (assign, "$belfry_positioned", 3),
    ],
)

common_siege_assign_men_to_belfry = (
    0,
    0,
    ti_once,
    [
        (call_script, "script_cf_siege_assign_men_to_belfry"),
    ],
    [],
)


tournament_triggers = [
    (
        ti_before_mission_start,
        0,
        0,
        [],
        [
            (call_script, "script_change_banners_and_chest"),
            (assign, "$g_arena_training_num_agents_spawned", 0),
        ],
    ),
    (
        ti_inventory_key_pressed,
        0,
        0,
        [(display_message, "str_cant_use_inventory_arena")],
        [],
    ),
    (
        ti_tab_pressed,
        0,
        0,
        [],
        [
            (try_begin),
              (eq, "$g_mt_mode", abm_visit),
              (set_trigger_result, 1),
            (else_try),
              (question_box, "str_give_up_fight"),
            (try_end),
        ],
    ),
    (
        ti_question_answered,
        0,
        0,
        [],
        [
            (store_trigger_param_1, ":answer"),
            (eq, ":answer", 0),
            (try_begin),
              (eq, "$g_mt_mode", abm_tournament),
              (call_script, "script_remove_losers_after_tournament_fight", 0),
            (else_try),
              (eq, "$g_mt_mode", abm_training),
              (get_player_agent_no, ":player_agent"),
              (
                  agent_get_kill_count,
                  "$g_arena_training_kills",
                  ":player_agent",
                  1,
              ),  # use this for conversation
            (try_end),
            (finish_mission, 0),
        ],
    ),
    (
        1,
        0,
        ti_once,
        [],
        [
            (eq, "$g_mt_mode", abm_visit),
            (call_script, "script_music_set_situation_with_culture", mtf_sit_travel),
            (store_current_scene, reg(1)),
            (scene_set_slot, reg(1), slot_scene_visited, 1),
            (mission_enable_talk),
            (get_player_agent_no, ":player_agent"),
            (assign, ":team_set", 0),
            (try_for_agents, ":agent_no"),
              (neq, ":agent_no", ":player_agent"),
              (agent_get_troop_id, ":troop_id", ":agent_no"),
              (is_between, ":troop_id", regular_troops_begin, regular_troops_end),
              (eq, ":team_set", 0),
              (agent_set_team, ":agent_no", 1),
              (assign, ":team_set", 1),
            (try_end),
        ],
    ),
    (
        0,
        0,
        ti_once,
        [],
        [
            (eq, "$g_mt_mode", abm_tournament),
            (play_sound, "snd_arena_ambiance", sf_looping),
            (call_script, "script_music_set_situation_with_culture", mtf_sit_arena),
        ],
    ),
    (
        1,
        4,
        ti_once,
        [
            (eq, "$g_mt_mode", abm_tournament),
            (this_or_next | main_hero_fallen),
            (num_active_teams_le, 1),
        ],
        [
            (try_begin),
              (neg | main_hero_fallen),
              (call_script, "script_remove_losers_after_tournament_fight", 1),
              (call_script, "script_play_victorious_sound"),
              (finish_mission),
            (else_try),
              (call_script, "script_remove_losers_after_tournament_fight", 0),
              (finish_mission),
            (try_end),
        ],
    ),
    (
        ti_battle_window_opened,
        0,
        0,
        [],
        [
            (eq, "$g_mt_mode", abm_training),
            (start_presentation, "prsnt_arena_training"),
        ],
    ),
    (
        0,
        0,
        ti_once,
        [],
        [
            (eq, "$g_mt_mode", abm_training),
            (assign, "$g_arena_training_max_opponents", 40),
            (assign, "$g_arena_training_num_agents_spawned", 0),
            (assign, "$g_arena_training_kills", 0),
            (assign, "$g_arena_training_won", 0),
            (call_script, "script_music_set_situation_with_culture", mtf_sit_arena),
        ],
    ),
    (
        1,
        4,
        ti_once,
        [
            (eq, "$g_mt_mode", abm_training),
            (store_mission_timer_a, ":cur_time"),
            (gt, ":cur_time", 3),
            (assign, ":win_cond", 0),
            (try_begin),
              (
                  ge,
                  "$g_arena_training_num_agents_spawned",
                  "$g_arena_training_max_opponents",
              ),  # spawn at most 40 agents
              (num_active_teams_le, 1),
              (assign, ":win_cond", 1),
            (try_end),
            (this_or_next | eq, ":win_cond", 1),
            (main_hero_fallen),
        ],
        [
            (get_player_agent_no, ":player_agent"),
            (
                agent_get_kill_count,
                "$g_arena_training_kills",
                ":player_agent",
                1,
            ),  # use this for conversation
            (assign, "$g_arena_training_won", 0),
            (try_begin),
              (neg | main_hero_fallen),
              (assign, "$g_arena_training_won", 1),  # use this for conversation
            (try_end),
            (assign, "$g_mt_mode", abm_visit),
            (set_jump_mission, "mt_arena_melee_fight"),
            (party_get_slot, ":arena_scene", "$current_town", slot_town_arena),
            (modify_visitors_at_site, ":arena_scene"),
            (reset_visitors),
            (set_visitor, 35, "trp_veteran_fighter"),
            (set_visitor, 36, "trp_hired_blade"),
            (set_jump_entry, 50),
            (jump_to_scene, ":arena_scene"),
        ],
    ),
    (
        0.2,
        0,
        0,
        [
            (eq, "$g_mt_mode", abm_training),
            (assign, ":num_active_fighters", 0),
            (try_for_agents, ":agent_no"),
              (agent_is_human, ":agent_no"),
              (agent_is_alive, ":agent_no"),
              (agent_get_team, ":team_no", ":agent_no"),
              (is_between, ":team_no", 0, 7),
              (val_add, ":num_active_fighters", 1),
            (try_end),
            (lt, ":num_active_fighters", 7),
            (neg | main_hero_fallen),
            (store_mission_timer_a, ":cur_time"),
            (this_or_next | ge, ":cur_time", "$g_arena_training_next_spawn_time"),
            (this_or_next | lt, "$g_arena_training_num_agents_spawned", 6),
            (num_active_teams_le, 1),
            (
                lt,
                "$g_arena_training_num_agents_spawned",
                "$g_arena_training_max_opponents",
            ),
        ],
        [
            (assign, ":added_troop", "$g_arena_training_num_agents_spawned"),
            (store_div, ":added_troop", "$g_arena_training_num_agents_spawned", 6),
            (assign, ":added_troop_sequence", "$g_arena_training_num_agents_spawned"),
            (val_mod, ":added_troop_sequence", 6),
            (val_add, ":added_troop", ":added_troop_sequence"),
            (val_min, ":added_troop", 9),
            (val_add, ":added_troop", "trp_arena_training_fighter_1"),
            (assign, ":end_cond", 10000),
            (get_player_agent_no, ":player_agent"),
            (agent_get_position, pos5, ":player_agent"),
            (try_for_range, ":unused", 0, ":end_cond"),
              (store_random_in_range, ":random_entry_point", 32, 40),
              (
                  neq,
                  ":random_entry_point",
                  "$g_player_entry_point",
              ),  # make sure we don't overwrite player
              (entry_point_get_position, pos1, ":random_entry_point"),
              (get_distance_between_positions, ":dist", pos5, pos1),
              (gt, ":dist", 1200),  # must be at least 12 meters away from the player
              (assign, ":end_cond", 0),
            (try_end),
            (add_visitors_to_current_scene, ":random_entry_point", ":added_troop", 1),
            (
                store_add,
                ":new_spawned_count",
                "$g_arena_training_num_agents_spawned",
                1,
            ),
            (store_mission_timer_a, ":cur_time"),
            (store_add, "$g_arena_training_next_spawn_time", ":cur_time", 14),
            (store_div, ":time_reduction", ":new_spawned_count", 3),
            (val_sub, "$g_arena_training_next_spawn_time", ":time_reduction"),
        ],
    ),
    (
        0,
        0,
        0,
        [(eq, "$g_mt_mode", abm_training)],
        [
            (assign, ":max_teams", 6),
            (val_max, ":max_teams", 1),
            (get_player_agent_no, ":player_agent"),
            # find strongest team
            (try_for_range, ":t", 0, 6),
              (troop_set_slot, "trp_temp_array_a", ":t", 0),
            (try_end),
            (try_for_agents, ":agent_no"),
              (agent_is_human, ":agent_no"),
              (agent_is_alive, ":agent_no"),
              (neq, ":agent_no", ":player_agent"),
              (agent_slot_eq, ":agent_no", slot_agent_arena_team_set, 1),
              (agent_get_team, ":agent_team", ":agent_no"),
              (troop_get_slot, ":count", "trp_temp_array_a", ":agent_team"),
              (val_add, ":count", 1),
              (troop_set_slot, "trp_temp_array_a", ":agent_team", ":count"),
            (try_end),
            (assign, ":strongest_team", 0),
            (troop_get_slot, ":strongest_team_count", "trp_temp_array_a", 0),
            (try_for_range, ":t", 1, 6),
              (troop_slot_ge, "trp_temp_array_a", ":t", ":strongest_team_count"),
              (troop_get_slot, ":strongest_team_count", "trp_temp_array_a", ":t"),
              (assign, ":strongest_team", ":t"),
            (try_end),
            (assign, ":weakest_team", 0),
            (troop_get_slot, ":weakest_team_count", "trp_temp_array_a", 0),
            (try_for_range, ":t", 1, 6),
              (neg | troop_slot_ge, "trp_temp_array_a", ":t", ":weakest_team_count"),
              (troop_get_slot, ":weakest_team_count", "trp_temp_array_a", ":t"),
              (assign, ":weakest_team", ":t"),
            (try_end),
            (agent_get_kill_count, ":player_kills", ":player_agent", 1),
            (
                store_sub,
                ":player_passivity",
                "$g_arena_training_num_agents_spawned",
                ":player_kills",
            ),
            (options_get_combat_ai, ":ai_penalty"),
            (val_mul, ":ai_penalty", 10),
            (val_sub, ":player_passivity", ":ai_penalty"),
            (try_for_agents, ":agent_no"),
              (agent_is_human, ":agent_no"),
              (agent_is_alive, ":agent_no"),
              (agent_slot_eq, ":agent_no", slot_agent_arena_team_set, 0),
              (agent_get_team, ":team_no", ":agent_no"),
              (is_between, ":team_no", 0, 7),
              (try_begin),
                (eq, ":agent_no", ":player_agent"),
                (agent_set_team, ":agent_no", 6),  # player is always team 6.
              (else_try),
                (store_random_in_range, ":rand", 0, 100),
                (try_begin),
                  (lt, ":rand", ":player_passivity"),
                  (agent_set_team, ":agent_no", ":strongest_team"),
                (else_try),
                  (agent_set_team, ":agent_no", ":weakest_team"),
                (try_end),
              (try_end),
              (agent_set_slot, ":agent_no", slot_agent_arena_team_set, 1),
              (try_begin),
                (neq, ":agent_no", ":player_agent"),
                (val_add, "$g_arena_training_num_agents_spawned", 1),
              (try_end),
            (try_end),
        ],
    ),
]

mission_templates = [
    (
        "town_default",
        0,
        -1,
        "Default town visit",
        [
            (
                0,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (1, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (2, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (3, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (4, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (5, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (6, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (7, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (8, mtef_scene_source, af_override_horse, 0, 1, []),
            (9, mtef_scene_source, af_override_horse, 0, 1, []),
            (10, mtef_scene_source, af_override_horse, 0, 1, []),
            (11, mtef_scene_source, af_override_horse, 0, 1, []),
            (12, mtef_scene_source, af_override_horse, 0, 1, []),
            (13, mtef_scene_source, 0, 0, 1, []),
            (14, mtef_scene_source, 0, 0, 1, []),
            (15, mtef_scene_source, 0, 0, 1, []),
            (16, mtef_visitor_source, af_override_horse, 0, 1, []),
            (17, mtef_visitor_source, af_override_horse, 0, 1, []),
            (18, mtef_visitor_source, af_override_horse, 0, 1, []),
            (19, mtef_visitor_source, af_override_horse, 0, 1, []),
            (20, mtef_visitor_source, af_override_horse, 0, 1, []),
            (21, mtef_visitor_source, af_override_horse, 0, 1, []),
            (22, mtef_visitor_source, af_override_horse, 0, 1, []),
            (23, mtef_visitor_source, af_override_horse, 0, 1, []),
            (24, mtef_visitor_source, af_override_horse, 0, 1, []),
            (25, mtef_visitor_source, af_override_horse, 0, 1, []),
            (26, mtef_visitor_source, af_override_horse, 0, 1, []),
            (27, mtef_visitor_source, af_override_horse, 0, 1, []),
            (28, mtef_visitor_source, af_override_horse, 0, 1, []),
            (29, mtef_visitor_source, af_override_horse, 0, 1, []),
            (30, mtef_visitor_source, af_override_horse, 0, 1, []),
            (31, mtef_visitor_source, af_override_horse, 0, 1, []),
        ],
        [
            (
                1,
                0,
                ti_once,
                [],
                [
                    (store_current_scene, ":cur_scene"),
                    (scene_set_slot, ":cur_scene", slot_scene_visited, 1),
                    (try_begin),
                      (eq, "$sneaked_into_town", 1),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          mtf_sit_town_infiltrate,
                      ),
                    (else_try),
                      (eq, "$talk_context", tc_tavern_talk),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          mtf_sit_tavern,
                      ),
                    (else_try),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          mtf_sit_town,
                      ),
                    (try_end),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (call_script, "script_change_banners_and_chest"),
                    (call_script, "script_initialize_tavern_variables"),
                ],
            ),
            (ti_inventory_key_pressed, 0, 0, [(set_trigger_result, 1)], []),
            # tavern - belligerent drunk leaving/fading out
            (
                1,
                0,
                0,
                [
                    (gt, "$g_belligerent_drunk_leaving", 0),
                    (entry_point_get_position, pos0, 0),
                    (agent_get_position, pos1, "$g_belligerent_drunk_leaving"),
                    (get_distance_between_positions, ":dist", pos0, pos1),
                    (le, ":dist", 150),
                ],
                [
                    (agent_fade_out, "$g_belligerent_drunk_leaving"),
                    (assign, "$g_belligerent_drunk_leaving", 0),
                ],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (try_begin),
                      (eq, "$g_main_attacker_agent", 0),
                      (set_trigger_result, 1),
                    (try_end),
                ],
                [],
            ),
            # tavern brawl triggers - drunk
            (
                2,
                0,
                0,
                [
                    (neg | conversation_screen_is_active),
                    (eq, "$talk_context", tc_tavern_talk),
                    (
                        neg | troop_slot_eq,
                        "trp_hired_assassin",
                        slot_troop_cur_center,
                        "$g_encountered_party",
                    ),
                    (
                        troop_slot_eq,
                        "trp_belligerent_drunk",
                        slot_troop_cur_center,
                        "$g_encountered_party",
                    ),
                    (eq, "$drunks_dont_pick_fights", 0),
                ],
                [
                    (try_begin),
                      (eq, "$g_start_belligerent_drunk_fight", 0),
                      (assign, "$g_start_belligerent_drunk_fight", 1),
                      (try_for_agents, ":cur_agent"),
                        (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                        (eq, ":cur_agent_troop", "trp_belligerent_drunk"),
                        (assign, "$g_belligerent_drunk", ":cur_agent"),
                      (try_end),
                    (else_try),
                      (eq, "$g_start_belligerent_drunk_fight", 1),
                      (agent_is_active, "$g_belligerent_drunk"),
                      (agent_is_alive, "$g_belligerent_drunk"),
                      (get_player_agent_no, ":player_agent"),
                      (agent_get_position, pos0, ":player_agent"),
                      (agent_get_position, pos1, "$g_belligerent_drunk"),
                      (get_distance_between_positions, ":dist", pos0, pos1),
                      (position_get_z, ":pos0_z", pos0),
                      (position_get_z, ":pos1_z", pos1),
                      (store_sub, ":z_difference", ":pos1_z", ":pos0_z"),
                      (try_begin),
                        (le, ":z_difference", 0),
                        (val_mul, ":z_difference", -1),
                      (try_end),
                      (store_mul, ":z_difference_mul_3", ":z_difference", 3),
                      (val_add, ":dist", ":z_difference_mul_3"),
                      (store_random_in_range, ":random_value", 0, 200),
                      (store_add, ":400_plus_random_200", 400, ":random_value"),
                      (le, ":dist", ":400_plus_random_200"),
                      (call_script, "script_activate_tavern_attackers"),
                      (start_mission_conversation, "trp_belligerent_drunk"),
                      (assign, "$g_start_belligerent_drunk_fight", 2),
                    (try_end),
                ],
            ),
            # tavern brawl triggers - assassin
            (
                2,
                0,
                0,
                [
                    (neg | conversation_screen_is_active),
                    (eq, "$talk_context", tc_tavern_talk),
                    (
                        troop_slot_eq,
                        "trp_hired_assassin",
                        slot_troop_cur_center,
                        "$g_encountered_party",
                    ),
                ],
                [
                    (try_begin),
                      (eq, "$g_start_hired_assassin_fight", 0),
                      (assign, "$g_start_hired_assassin_fight", 1),
                      (try_for_agents, ":cur_agent"),
                        (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                        (eq, ":cur_agent_troop", "trp_hired_assassin"),
                        (assign, "$g_hired_assassin", ":cur_agent"),
                      (try_end),
                    (else_try),
                      (eq, "$g_start_hired_assassin_fight", 1),
                      (agent_is_active, "$g_hired_assassin"),
                      (agent_is_alive, "$g_hired_assassin"),
                      (get_player_agent_no, ":player_agent"),
                      (agent_get_position, pos0, ":player_agent"),
                      (agent_get_position, pos1, "$g_hired_assassin"),
                      (get_distance_between_positions, ":dist", pos0, pos1),
                      (position_get_z, ":pos0_z", pos0),
                      (position_get_z, ":pos1_z", pos1),
                      (store_sub, ":z_difference", ":pos1_z", ":pos0_z"),
                      (try_begin),
                        (le, ":z_difference", 0),
                        (val_mul, ":z_difference", -1),
                      (try_end),
                      (store_mul, ":z_difference_mul_3", ":z_difference", 3),
                      (val_add, ":dist", ":z_difference_mul_3"),
                      (store_random_in_range, ":random_value", 0, 200),
                      (store_add, ":400_plus_random_200", 400, ":random_value"),
                      (le, ":dist", ":400_plus_random_200"),
                      (call_script, "script_activate_tavern_attackers"),
                      (assign, "$g_start_hired_assassin_fight", 2),
                    (try_end),
                ],
            ),
            # Aftermath talks
            (
                3,
                0,
                ti_once,
                [
                    (neg | conversation_screen_is_active),
                    (eq, "$talk_context", tc_tavern_talk),
                    (gt, "$g_main_attacker_agent", 0),
                    (this_or_next | neg | agent_is_alive, "$g_main_attacker_agent"),
                    (agent_is_wounded, "$g_main_attacker_agent"),
                ],
                [
                    (mission_enable_talk),
                    (try_for_agents, ":agent"),
                      (agent_is_alive, ":agent"),
                      (agent_get_position, pos4, ":agent"),
                      (agent_set_scripted_destination, ":agent", pos4),
                    (try_end),
                    (
                        party_get_slot,
                        ":tavernkeeper",
                        "$g_encountered_party",
                        slot_town_tavernkeeper,
                    ),
                    (start_mission_conversation, ":tavernkeeper"),
                ],
            ),
            # Aftermath talks
            (
                3,
                0,
                ti_once,
                [
                    (neg | conversation_screen_is_active),
                    (eq, "$talk_context", tc_tavern_talk),
                    (gt, "$g_main_attacker_agent", 0),
                    (main_hero_fallen),
                ],
                [(jump_to_menu, "mnu_lost_tavern_duel"), (finish_mission, 0)],
            ),
            # No shooting in the tavern
            (
                1,
                0,
                0,
                [
                    (neg | conversation_screen_is_active),
                    (eq, "$talk_context", tc_tavern_talk),
                    (gt, "$g_main_attacker_agent", 0),
                    (
                        is_between,
                        "$g_encountered_party",
                        towns_begin,
                        towns_end,
                    ),  # In less lawful places, they don't care.
                    (get_player_agent_no, ":player_agent"),
                    (agent_is_alive, ":player_agent"),
                    (agent_get_wielded_item, ":wielded_item", ":player_agent", 0),
                    (is_between, ":wielded_item", "itm_darts", "itm_torch"),
                    (neq, ":wielded_item", "itm_javelin_melee"),
                    (neq, ":wielded_item", "itm_throwing_spear_melee"),
                    (neq, ":wielded_item", "itm_jarid_melee"),
                    (neq, ":wielded_item", "itm_light_throwing_axes_melee"),
                    (neq, ":wielded_item", "itm_throwing_axes_melee"),
                    (neq, ":wielded_item", "itm_heavy_throwing_axes_melee"),
                ],
                [
                    (
                        party_get_slot,
                        ":tavernkeeper",
                        "$g_encountered_party",
                        slot_town_tavernkeeper,
                    ),
                    (start_mission_conversation, ":tavernkeeper"),
                ],
            ),
            # Check for weapon in hand of attacker, also, everyone gets out of the way
            (
                1,
                0,
                0,
                [
                    (gt, "$g_main_attacker_agent", 0),
                ],
                [
                    (
                        agent_get_wielded_item,
                        ":wielded_item",
                        "$g_main_attacker_agent",
                        0,
                    ),
                    (val_max, "$g_attacker_drawn_weapon", ":wielded_item"),
                    (call_script, "script_neutral_behavior_in_fight"),
                ],
            ),
            # Debriefing after fight
            (
                0,
                0,
                ti_once,
                [
                    (neq, "$fistfight_result", 0),
                ],
                [
                    (start_mission_conversation, "trp_fight_promoter"),
                ],
            ),
        ],
    ),
    # This template is used in party encounters and such.
    #
    (
        "conversation_encounter",
        0,
        -1,
        "Conversation_encounter",
        [
            (0, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (1, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (2, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (3, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (4, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (5, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (6, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (7, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (8, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (9, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (10, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (11, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            # prisoners now...
            (12, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (13, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (14, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (15, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (16, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            # Other party
            (17, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (18, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (19, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (20, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (21, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (22, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (23, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (24, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (25, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (26, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (27, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (28, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (29, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (30, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
            (31, mtef_visitor_source, af_override_fullhelm, 0, 1, []),
        ],
        [],
    ),
    # ----------------------------------------------------------------
    # mission templates before this point are hardwired into the game.
    # -----------------------------------------------------------------
    (
        "town_center",
        0,
        -1,
        "Default town visit",
        [
            (
                0,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (1, mtef_scene_source | mtef_team_0, 0, 0, 1, []),
            (
                2,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                3,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                4,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                5,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                6,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                7,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (8, mtef_visitor_source, af_override_horse, 0, 1, []),
            (9, mtef_visitor_source, af_override_horse, 0, 1, []),
            (10, mtef_visitor_source, af_override_horse, 0, 1, []),
            (11, mtef_visitor_source, af_override_horse, 0, 1, []),
            (12, mtef_visitor_source, af_override_horse, 0, 1, []),
            (13, mtef_visitor_source, 0, 0, 1, []),
            (14, mtef_scene_source, 0, 0, 1, []),
            (15, mtef_scene_source, 0, 0, 1, []),
            (16, mtef_visitor_source, af_override_horse, 0, 1, []),
            (17, mtef_visitor_source, af_override_horse, 0, 1, []),
            (18, mtef_visitor_source, af_override_horse, 0, 1, []),
            (19, mtef_visitor_source, af_override_horse, 0, 1, []),
            (20, mtef_visitor_source, af_override_horse, 0, 1, []),
            (21, mtef_visitor_source, af_override_horse, 0, 1, []),
            (22, mtef_visitor_source, af_override_horse, 0, 1, []),
            (23, mtef_visitor_source, af_override_horse, 0, 1, []),  # guard
            (24, mtef_visitor_source, af_override_horse, 0, 1, []),  # guard
            (25, mtef_visitor_source, af_override_horse, 0, 1, []),  # guard
            (26, mtef_visitor_source, af_override_horse, 0, 1, []),  # guard
            (27, mtef_visitor_source, af_override_horse, 0, 1, []),  # guard
            (28, mtef_visitor_source, af_override_horse, 0, 1, []),  # guard
            (29, mtef_visitor_source, af_override_horse, 0, 1, []),
            (30, mtef_visitor_source, af_override_horse, 0, 1, []),
            (31, mtef_visitor_source, af_override_horse, 0, 1, []),
            (32, mtef_visitor_source, af_town_walker, 0, 1, []),  # town walker begin
            (33, mtef_visitor_source, af_town_walker, 0, 1, []),
            (34, mtef_visitor_source, af_town_walker, 0, 1, []),
            (35, mtef_visitor_source, af_town_walker, 0, 1, []),
            (36, mtef_visitor_source, af_town_walker, 0, 1, []),
            (37, mtef_visitor_source, af_town_walker, 0, 1, []),
            (38, mtef_visitor_source, af_town_walker, 0, 1, []),
            (39, mtef_visitor_source, af_town_walker, 0, 1, []),  # town walker end
            (
                40,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),  # in towns, can be used for guard reinforcements
            (
                41,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),  # in towns, can be used for guard reinforcements
            (
                42,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),  # in towns, can be used for guard reinforcements
            (
                43,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),  # in towns, can be used for guard reinforcements
            (
                44,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                45,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                46,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                47,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (call_script, "script_init_town_agent", ":agent_no"),
                    (try_begin),
                      (this_or_next | eq, "$talk_context", tc_escape),
                      (eq, "$talk_context", tc_prison_break),
                      (agent_get_troop_id, ":troop_no", ":agent_no"),
                      (troop_slot_eq, ":troop_no", slot_troop_will_join_prison_break, 1),
                      (agent_set_team, ":agent_no", 0),
                      (agent_ai_set_aggressiveness, ":agent_no", 5),
                      (troop_set_slot, ":troop_no", slot_troop_will_join_prison_break, 0),
                      (try_begin),
                        (
                            troop_slot_eq,
                            ":troop_no",
                            slot_troop_mission_participation,
                            mp_prison_break_stand_back,
                        ),
                        (agent_get_position, pos1, ":agent_no"),
                        (agent_set_scripted_destination, ":agent_no", pos1),
                      (try_end),
                    (try_end),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (assign, "$g_main_attacker_agent", 0),
                ],
            ),
            (
                1,
                0,
                ti_once,
                [],
                [
                    (try_begin),
                      (eq, "$g_mt_mode", tcm_default),
                      (store_current_scene, ":cur_scene"),
                      (scene_set_slot, ":cur_scene", slot_scene_visited, 1),
                    (try_end),
                    (call_script, "script_init_town_walker_agents"),
                    (try_begin),
                      (eq, "$sneaked_into_town", 1),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          mtf_sit_town_infiltrate,
                      ),
                    (else_try),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          mtf_sit_town,
                      ),
                    (try_end),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            (
                ti_inventory_key_pressed,
                0,
                0,
                [
                    (try_begin),
                      (eq, "$g_mt_mode", tcm_default),
                      (set_trigger_result, 1),
                    (else_try),
                      (eq, "$g_mt_mode", tcm_disguised),
                      (display_message, "str_cant_use_inventory_disguised"),
                    (else_try),
                      (display_message, "str_cant_use_inventory_now"),
                    (try_end),
                ],
                [],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (try_begin),
                      (this_or_next | eq, "$talk_context", tc_escape),
                      (eq, "$talk_context", tc_prison_break),
                      (display_message, "str_cannot_leave_now"),
                    (else_try),
                      (this_or_next | eq, "$g_mt_mode", tcm_default),
                      (eq, "$g_mt_mode", tcm_disguised),
                      (mission_enable_talk),
                      (set_trigger_result, 1),
                    (else_try),
                      (display_message, "str_cannot_leave_now"),
                    (try_end),
                ],
                [],
            ),
            (
                ti_on_leave_area,
                0,
                0,
                [
                    (try_begin),
                      (eq, "$g_defending_against_siege", 0),
                      (assign, "$g_leave_town", 1),
                    (try_end),
                ],
                [
                    (try_begin),
                      (eq, "$talk_context", tc_escape),
                      (call_script, "script_deduct_casualties_from_garrison"),
                      (jump_to_menu, "mnu_sneak_into_town_caught_dispersed_guards"),
                    (try_end),
                    (mission_enable_talk),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (party_slot_eq, "$current_town", slot_party_type, spt_town),
                    (call_script, "script_town_init_doors", 0),
                    (try_begin),
                      (eq, "$town_nighttime", 0),
                      (play_sound, "snd_town_ambiance", sf_looping),
                    (try_end),
                ],
            ),
            (3, 0, 0, [(call_script, "script_tick_town_walkers")], []),
            (2, 0, 0, [(call_script, "script_center_ambiance_sounds")], []),
            # JAILBREAK TRIGGERS
            # Civilians get out of the way
            (
                1,
                0,
                0,
                [
                    (this_or_next | eq, "$talk_context", tc_prison_break),
                    (eq, "$talk_context", tc_escape),
                ],
                [
                    # (agent_get_team, ":prisoner_agent", 0),
                    (call_script, "script_neutral_behavior_in_fight"),
                    (mission_disable_talk),
                ],
            ),
            # The game begins with the town alerted
            (
                1,
                0,
                ti_once,
                [
                    # If I set this to 1, 0, ti_once, then the prisoner spawns twice
                    (eq, "$talk_context", tc_escape),
                ],
                [
                    (get_player_agent_no, ":player_agent"),
                    (assign, reg6, ":player_agent"),
                    (call_script, "script_activate_town_guard"),
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_position, pos4, ":player_agent"),
                    (try_for_range, ":prisoner", active_npcs_begin, kingdom_ladies_end),
                      (
                          troop_slot_ge,
                          ":prisoner",
                          slot_troop_mission_participation,
                          mp_prison_break_fight,
                      ),
                      (str_store_troop_name, s4, ":prisoner"),
                      (display_message, "str_s4_joins_prison_break"),
                      (
                          store_current_scene,
                          ":cur_scene",
                      ),  # this might be a better option?
                      (modify_visitors_at_site, ":cur_scene"),
                      # <entry_no>,<troop_id>,<number_of_troops>, <team_no>, <group_no>),
                      # team no and group no are used in multiplayer mode only. default team in entry is used in single player mode
                      (store_current_scene, ":cur_scene"),
                      (modify_visitors_at_site, ":cur_scene"),
                      (add_visitors_to_current_scene, 24, ":prisoner", 1, 0, 0),
                      (troop_set_slot, ":prisoner", slot_troop_will_join_prison_break, 1),
                    (try_end),
                ],
            ),
            (
                3,
                0,
                0,
                [
                    (main_hero_fallen, 0),
                ],
                [
                    (try_begin),
                      (this_or_next | eq, "$talk_context", tc_prison_break),
                      (eq, "$talk_context", tc_escape),
                      (call_script, "script_deduct_casualties_from_garrison"),
                      (jump_to_menu, "mnu_captivity_start_castle_defeat"),
                      (assign, ":end_cond", kingdom_ladies_end),
                      (try_for_range, ":prisoner", active_npcs_begin, ":end_cond"),
                        (
                            troop_set_slot,
                            ":prisoner",
                            slot_troop_mission_participation,
                            0,
                        ),  # new
                      (try_end),
                      (mission_enable_talk),
                      (finish_mission, 0),
                    (else_try),
                      (set_trigger_result, 1),
                    (try_end),
                ],
            ),
            (
                3,
                0,
                0,
                [
                    (eq, "$talk_context", tc_escape),
                    (neg | main_hero_fallen, 0),
                    (store_mission_timer_a, ":time"),
                    (ge, ":time", 10),
                    (
                        all_enemies_defeated
                    ),  # 1 is default enemy team for in-town battles
                ],
                [
                    (call_script, "script_deduct_casualties_from_garrison"),
                    (try_for_agents, ":agent"),
                      (agent_get_troop_id, ":troop", ":agent"),
                      (
                          troop_slot_ge,
                          ":troop",
                          slot_troop_mission_participation,
                          mp_prison_break_fight,
                      ),
                      (try_begin),
                        (agent_is_alive, ":agent"),
                        (
                            troop_set_slot,
                            ":troop",
                            slot_troop_mission_participation,
                            mp_prison_break_escaped,
                        ),
                      (else_try),
                        (
                            troop_set_slot,
                            ":troop",
                            slot_troop_mission_participation,
                            mp_prison_break_caught,
                        ),
                      (try_end),
                    (try_end),
                    (jump_to_menu, "mnu_sneak_into_town_caught_ran_away"),
                    (mission_enable_talk),
                    (finish_mission, 0),
                ],
            ),
            (
                ti_on_agent_killed_or_wounded,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":dead_agent_no"),
                    (store_trigger_param_2, ":killer_agent_no"),
                    # (store_trigger_param_3, ":is_wounded"),
                    (agent_get_troop_id, ":dead_agent_troop_no", ":dead_agent_no"),
                    (agent_get_troop_id, ":killer_agent_troop_no", ":killer_agent_no"),
                    (try_begin),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_swadian_prison_guard",
                      ),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_vaegir_prison_guard",
                      ),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_khergit_prison_guard",
                      ),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_nord_prison_guard",
                      ),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_rhodok_prison_guard",
                      ),
                      (eq, ":dead_agent_troop_no", "trp_sarranid_prison_guard"),
                      (eq, ":killer_agent_troop_no", "trp_player"),
                      (display_message, "@You got keys of dungeon."),
                    (try_end),
                ],
            ),
        ],
    ),
    (
        "village_center",
        0,
        -1,
        "village center",
        [
            (0, mtef_scene_source | mtef_team_0, 0, 0, 1, []),
            (1, mtef_scene_source | mtef_team_0, 0, 0, 1, []),
            (2, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (3, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (4, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (5, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (6, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (7, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (8, mtef_visitor_source, af_override_horse, 0, 1, []),
            (9, mtef_visitor_source, af_override_horse, 0, 1, []),
            (10, mtef_visitor_source, af_override_horse, 0, 1, []),
            (11, mtef_visitor_source, af_override_horse, 0, 1, []),
            (12, mtef_visitor_source, af_override_horse, 0, 1, []),
            (13, mtef_visitor_source, 0, 0, 1, []),
            (14, mtef_visitor_source, 0, 0, 1, []),
            (15, mtef_visitor_source, 0, 0, 1, []),
            (16, mtef_visitor_source, af_override_horse, 0, 1, []),
            (17, mtef_visitor_source, af_override_horse, 0, 1, []),
            (18, mtef_visitor_source, af_override_horse, 0, 1, []),
            (19, mtef_visitor_source, af_override_horse, 0, 1, []),
            (20, mtef_visitor_source, af_override_horse, 0, 1, []),
            (21, mtef_visitor_source, af_override_horse, 0, 1, []),
            (22, mtef_visitor_source, af_override_horse, 0, 1, []),
            (23, mtef_visitor_source, af_override_horse, 0, 1, []),
            (24, mtef_visitor_source, af_override_horse, 0, 1, []),
            (25, mtef_visitor_source, af_override_horse, 0, 1, []),
            (26, mtef_visitor_source, af_override_horse, 0, 1, []),
            (27, mtef_visitor_source, af_override_horse, 0, 1, []),
            (28, mtef_visitor_source, af_override_horse, 0, 1, []),
            (29, mtef_visitor_source, af_override_horse, 0, 1, []),
            (30, mtef_visitor_source, af_override_horse, 0, 1, []),
            (31, mtef_visitor_source, af_override_horse, 0, 1, []),
            (32, mtef_visitor_source, af_town_walker, 0, 1, []),
            (33, mtef_visitor_source, af_town_walker, 0, 1, []),
            (34, mtef_visitor_source, af_town_walker, 0, 1, []),
            (35, mtef_visitor_source, af_town_walker, 0, 1, []),
            (36, mtef_visitor_source, af_town_walker, 0, 1, []),
            (37, mtef_visitor_source, af_town_walker, 0, 1, []),
            (38, mtef_visitor_source, af_town_walker, 0, 1, []),
            (39, mtef_visitor_source, af_town_walker, 0, 1, []),
            (40, mtef_visitor_source, af_override_horse, 0, 1, []),
            (41, mtef_visitor_source, af_override_horse, 0, 1, []),
            (42, mtef_visitor_source, af_override_horse, 0, 1, []),
            (43, mtef_visitor_source, af_override_horse, 0, 1, []),
            (44, mtef_visitor_source, af_override_horse, 0, 1, []),
            (45, mtef_visitor_source, af_override_horse, 0, 1, []),
            (46, mtef_visitor_source, af_override_horse, 0, 1, []),
            (47, mtef_visitor_source, af_override_horse, 0, 1, []),
        ],
        [
            (
                1,
                0,
                ti_once,
                [],
                [
                    (store_current_scene, ":cur_scene"),
                    (scene_set_slot, ":cur_scene", slot_scene_visited, 1),
                    (call_script, "script_init_town_walker_agents"),
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_travel,
                    ),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            (ti_inventory_key_pressed, 0, 0, [(set_trigger_result, 1)], []),
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (try_begin),
                      (check_quest_active, "qst_hunt_down_fugitive"),
                      (neg | check_quest_succeeded, "qst_hunt_down_fugitive"),
                      (neg | check_quest_failed, "qst_hunt_down_fugitive"),
                      (
                          quest_slot_eq,
                          "qst_hunt_down_fugitive",
                          slot_quest_current_state,
                          1,
                      ),
                      (try_begin),
                        (call_script, "script_cf_troop_agent_is_alive", "trp_fugitive"),
                        (call_script, "script_fail_quest", "qst_hunt_down_fugitive"),
                      (else_try),
                        (call_script, "script_succeed_quest", "qst_hunt_down_fugitive"),
                      (try_end),
                    (try_end),
                    (set_trigger_result, 1),
                ],
                [],
            ),
            (
                ti_on_leave_area,
                0,
                0,
                [
                    (try_begin),
                      (assign, "$g_leave_town", 1),
                    (try_end),
                ],
                [],
            ),
            (3, 0, 0, [(call_script, "script_tick_town_walkers")], []),
            (2, 0, 0, [(call_script, "script_center_ambiance_sounds")], []),
            (
                1,
                0,
                ti_once,
                [
                    (check_quest_active, "qst_hunt_down_fugitive"),
                    (neg | check_quest_succeeded, "qst_hunt_down_fugitive"),
                    (neg | check_quest_failed, "qst_hunt_down_fugitive"),
                    (
                        quest_slot_eq,
                        "qst_hunt_down_fugitive",
                        slot_quest_current_state,
                        1,
                    ),
                    (assign, ":not_alive", 0),
                    (try_begin),
                      (call_script, "script_cf_troop_agent_is_alive", "trp_fugitive"),
                    (else_try),
                      (assign, ":not_alive", 1),
                    (try_end),
                    (this_or_next | main_hero_fallen),
                    (eq, ":not_alive", 1),
                ],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (jump_to_menu, "mnu_village_hunt_down_fugitive_defeated"),
                      (call_script, "script_fail_quest", "qst_hunt_down_fugitive"),
                      (finish_mission, 4),
                    (else_try),
                      (
                          call_script,
                          "script_change_player_relation_with_center",
                          "$current_town",
                          -2,
                      ),
                      (call_script, "script_succeed_quest", "qst_hunt_down_fugitive"),
                    (try_end),
                ],
            ),
        ],
    ),
    (
        "bandits_at_night",
        0,
        -1,
        "Default town visit",
        [
            (
                0,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                pilgrim_disguise,
            ),
            (1, mtef_scene_source | mtef_team_0, 0, 0, 1, []),
            (2, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (3, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (
                4,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (5, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (6, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (7, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (8, mtef_scene_source, af_override_horse, 0, 1, []),
            (9, mtef_visitor_source, af_override_horse, 0, 1, []),
            (10, mtef_visitor_source, af_override_horse, 0, 1, []),
            (11, mtef_visitor_source, af_override_horse, aif_start_alarmed, 1, []),
            (12, mtef_visitor_source, af_override_horse, 0, 1, []),
            (13, mtef_scene_source, 0, 0, 1, []),
            (14, mtef_scene_source, 0, 0, 1, []),
            (15, mtef_scene_source, 0, 0, 1, []),
            (16, mtef_visitor_source, af_override_horse, 0, 1, []),
            (17, mtef_visitor_source, af_override_horse, 0, 1, []),
            (18, mtef_visitor_source, af_override_horse, 0, 1, []),
            (19, mtef_visitor_source, af_override_horse, 0, 1, []),
            (20, mtef_visitor_source, af_override_horse, 0, 1, []),
            (21, mtef_visitor_source, af_override_horse, 0, 1, []),
            (22, mtef_visitor_source, af_override_horse, 0, 1, []),
            (23, mtef_visitor_source, af_override_horse, 0, 1, []),
            (24, mtef_visitor_source, af_override_horse, 0, 1, []),
            (25, mtef_visitor_source, af_override_horse, 0, 1, []),
            (26, mtef_visitor_source, af_override_horse, 0, 1, []),
            (27, mtef_visitor_source, af_override_horse, aif_start_alarmed, 1, []),
            (28, mtef_visitor_source, af_override_horse, aif_start_alarmed, 1, []),
            (29, mtef_visitor_source, af_override_horse, 0, 1, []),
            (30, mtef_visitor_source, af_override_horse, 0, 1, []),
            (31, mtef_visitor_source, af_override_horse, 0, 1, []),
            (32, mtef_visitor_source, af_override_horse, 0, 1, []),
            (33, mtef_visitor_source, af_override_horse, 0, 1, []),
            (34, mtef_visitor_source, af_override_horse, 0, 1, []),
            (35, mtef_visitor_source, af_override_horse, 0, 1, []),
            (36, mtef_visitor_source, af_override_horse, 0, 1, []),
            (37, mtef_visitor_source, af_override_horse, 0, 1, []),
            (38, mtef_visitor_source, af_override_horse, 0, 1, []),
            (39, mtef_visitor_source, af_override_horse, 0, 1, []),
            (
                40,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                41,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                42,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                43,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                44,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                45,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                46,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                47,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (agent_get_troop_id, ":troop_no", ":agent_no"),
                    (neq, ":troop_no", "trp_player"),
                    (agent_set_team, ":agent_no", 1),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            common_inventory_not_available,
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (display_message, "str_cannot_leave_now"),
                ],
                [],
            ),
            (
                ti_on_leave_area,
                0,
                0,
                [
                    (try_begin),
                      (eq, "$g_defending_against_siege", 0),
                      (assign, "$g_leave_town", 1),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_ambushed,
                    ),
                    (set_party_battle_mode),
                    (party_slot_eq, "$current_town", slot_party_type, spt_town),
                    (call_script, "script_town_init_doors", 0),
                ],
            ),
            (
                1,
                4,
                ti_once,
                [
                    (store_mission_timer_a, ":cur_time"),
                    (ge, ":cur_time", 5),
                    (this_or_next | main_hero_fallen),
                    (num_active_teams_le, 1),
                ],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (jump_to_menu, "mnu_town_bandits_failed"),
                    (else_try),
                      (jump_to_menu, "mnu_town_bandits_succeeded"),
                    (try_end),
                    (finish_mission),
                ],
            ),
        ],
    ),
    (
        "village_training",
        mtf_arena_fight,
        -1,
        "village_training",
        [
            (
                2,
                mtef_visitor_source | mtef_team_0,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff, itm.practice_boots],
            ),
            (
                4,
                mtef_visitor_source | mtef_team_1,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff, itm.practice_boots],
            ),
        ],
        [
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (assign, "$g_train_peasants_against_bandits_training_succeeded", 0),
                    (call_script, "script_change_banners_and_chest"),
                ],
            ),
            common_arena_fight_tab_press,
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (finish_mission),
                ],
            ),
            common_inventory_not_available,
            (
                1,
                4,
                ti_once,
                [(this_or_next | main_hero_fallen), (num_active_teams_le, 1)],
                [
                    (try_begin),
                      (neg | main_hero_fallen),
                      (assign, "$g_train_peasants_against_bandits_training_succeeded", 1),
                    (try_end),
                    (finish_mission),
                ],
            ),
        ],
    ),
    (
        "visit_town_castle",
        0,
        -1,
        "You enter the halls of the lord.",
        [
            (
                0,
                mtef_scene_source | mtef_team_0,
                af_override_horse | af_override_weapons | af_override_head,
                0,
                1,
                [],
            ),
            (1, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (2, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (3, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (
                4,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # for doors
            (5, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (6, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (7, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (8, mtef_visitor_source, af_override_horse, 0, 1, []),
            (9, mtef_visitor_source, af_override_horse, 0, 1, []),
            (10, mtef_scene_source, af_override_horse, 0, 1, []),
            (11, mtef_scene_source, af_override_horse, 0, 1, []),
            (12, mtef_visitor_source, af_override_horse, 0, 1, []),
            (13, mtef_visitor_source, 0, 0, 1, []),
            (14, mtef_visitor_source, 0, 0, 1, []),
            (15, mtef_visitor_source, 0, 0, 1, []),
            (16, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (17, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (18, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (19, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (20, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (21, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (22, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (23, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (24, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (25, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (26, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (27, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (28, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (29, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (30, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (31, mtef_visitor_source, af_castle_lord, 0, 1, []),
        ],
        [
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (call_script, "script_init_town_agent", ":agent_no"),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (call_script, "script_change_banners_and_chest"),
                ],
            ),
            (ti_inventory_key_pressed, 0, 0, [(set_trigger_result, 1)], []),
            # adjust for prison break
            (
                ti_tab_pressed,
                0,
                0,
                [(neq, "$talk_context", tc_prison_break), (set_trigger_result, 1)],
                [],
            ),
            (
                ti_on_leave_area,
                0,
                0,
                [
                    (eq, "$talk_context", tc_prison_break),
                ],
                [
                    (display_message, "str_leaving_area_during_prison_break"),
                    (set_jump_mission, "mt_sneak_caught_fight"),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (try_begin),
                      (eq, "$talk_context", tc_court_talk),
                      (try_begin),
                        (store_faction_of_party, ":center_faction", "$current_town"),
                        (
                            faction_slot_eq,
                            ":center_faction",
                            slot_faction_ai_state,
                            sfai_feast,
                        ),
                        (
                            faction_slot_eq,
                            ":center_faction",
                            slot_faction_ai_object,
                            "$current_town",
                        ),
                        (
                            call_script,
                            "script_music_set_situation_with_culture",
                            mtf_sit_feast,
                        ),
                      (try_end),
                    (else_try),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          0,
                      ),  # prison
                    (try_end),
                ],
            ),
        ],
    ),
    (
        "back_alley_kill_local_merchant",
        mtf_battle_mode,
        -1,
        "You enter the back alley",
        [
            (
                0,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                3,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            common_inventory_not_available,
            (ti_tab_pressed, 0, 0, [(display_message, "str_cannot_leave_now")], []),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_ambushed,
                    ),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [
                    (store_mission_timer_a, ":cur_time"),
                    (ge, ":cur_time", 1),
                    (assign, ":merchant_hp", 0),
                    (assign, ":player_hp", 0),
                    (assign, ":merchant_hp", 0),
                    (assign, ":merchant_agent", -1),
                    (assign, ":player_agent", -1),
                    (try_for_agents, ":agent_no"),
                      (agent_get_troop_id, ":troop_id", ":agent_no"),
                      (try_begin),
                        (eq, ":troop_id", "trp_local_merchant"),
                        (store_agent_hit_points, ":merchant_hp", ":agent_no"),
                        (assign, ":merchant_agent", ":agent_no"),
                      (else_try),
                        (eq, ":troop_id", "trp_player"),
                        (store_agent_hit_points, ":player_hp", ":agent_no"),
                        (assign, ":player_agent", ":agent_no"),
                      (try_end),
                    (try_end),
                    (ge, ":player_agent", 0),
                    (ge, ":merchant_agent", 0),
                    (agent_is_alive, ":player_agent"),
                    (agent_is_alive, ":merchant_agent"),
                    (is_between, ":merchant_hp", 1, 30),
                    (gt, ":player_hp", 50),
                    (start_mission_conversation, "trp_local_merchant"),
                ],
                [],
            ),
            (
                1,
                4,
                ti_once,
                [
                    (assign, ":not_alive", 0),
                    (try_begin),
                      (
                          call_script,
                          "script_cf_troop_agent_is_alive",
                          "trp_local_merchant",
                      ),
                    (else_try),
                      (assign, ":not_alive", 1),
                    (try_end),
                    (this_or_next | main_hero_fallen),
                    (eq, ":not_alive", 1),
                ],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (call_script, "script_fail_quest", "qst_kill_local_merchant"),
                    (else_try),
                      (
                          call_script,
                          "script_change_player_relation_with_center",
                          "$current_town",
                          -4,
                      ),
                      (call_script, "script_succeed_quest", "qst_kill_local_merchant"),
                    (try_end),
                    (finish_mission),
                ],
            ),
        ],
    ),
    (
        "back_alley_revolt",
        mtf_battle_mode,
        charge,
        "You lead your men to battle.",
        [
            (
                0,
                mtef_team_0 | mtef_use_exact_number,
                af_override_horse | af_override_weapons | af_override_head,
                aif_start_alarmed,
                4,
                [itm.quarter_staff],
            ),
            (
                3,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            common_inventory_not_available,
            common_battle_init_banner,
            (
                ti_tab_pressed,
                0,
                0,
                [],
                [
                    (question_box, "str_do_you_want_to_retreat"),
                ],
            ),
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (jump_to_menu, "mnu_collect_taxes_failed"),
                    (finish_mission),
                ],
            ),
            (ti_tab_pressed, 0, 0, [(display_message, "str_cannot_leave_now")], []),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_fight,
                    ),
                ],
            ),
            (
                1,
                4,
                ti_once,
                [(this_or_next | main_hero_fallen), (num_active_teams_le, 1)],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (jump_to_menu, "mnu_collect_taxes_failed"),
                    (else_try),
                      (jump_to_menu, "mnu_collect_taxes_rebels_killed"),
                    (try_end),
                    (finish_mission),
                ],
            ),
        ],
    ),
    (
        "lead_charge",
        mtf_battle_mode | mtf_synch_inventory,
        charge,
        "You lead your men to battle.",
        [
            (1, mtef_defenders | mtef_team_0, 0, aif_start_alarmed, 12, []),
            (0, mtef_defenders | mtef_team_0, 0, aif_start_alarmed, 0, []),
            (4, mtef_attackers | mtef_team_1, 0, aif_start_alarmed, 12, []),
            (4, mtef_attackers | mtef_team_1, 0, aif_start_alarmed, 0, []),
        ],
        [
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (call_script, "script_agent_reassign_team", ":agent_no"),
                ],
            ),
            common_battle_init_banner,
            (
                ti_on_agent_killed_or_wounded,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":dead_agent_no"),
                    # (store_trigger_param_2, ":killer_agent_no"), # unused
                    (store_trigger_param_3, ":is_wounded"),
                    (try_begin),
                      (ge, ":dead_agent_no", 0),
                      (neg | agent_is_ally, ":dead_agent_no"),
                      (agent_is_human, ":dead_agent_no"),
                      (agent_get_troop_id, ":dead_agent_troop_id", ":dead_agent_no"),
                      (
                          party_add_members,
                          "p_total_enemy_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),  # addition_to_p_total_enemy_casualties
                      (eq, ":is_wounded", 1),
                      (
                          party_wound_members,
                          "p_total_enemy_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),
                    (try_end),
                ],
            ),
            common_battle_tab_press,
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (assign, "$pin_player_fallen", 0),
                    (try_begin),
                      (store_mission_timer_a, ":elapsed_time"),
                      (gt, ":elapsed_time", 20),
                      (str_store_string, s5, "str_retreat"),
                      (call_script, "script_simulate_retreat", 10, 20, 1),
                    (try_end),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (team_set_relation, 0, 2, 1),
                    (team_set_relation, 1, 3, 1),
                    (call_script, "script_place_player_banner_near_inventory_bms"),
                    (party_clear, "p_routed_enemies"),
                    (assign, "$g_latest_order_1", 1),
                    (assign, "$g_latest_order_2", 1),
                    (assign, "$g_latest_order_3", 1),
                    (assign, "$g_latest_order_4", 1),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (assign, "$g_battle_won", 0),
                    (assign, "$defender_reinforcement_stage", 0),
                    (assign, "$attacker_reinforcement_stage", 0),
                    (call_script, "script_place_player_banner_near_inventory"),
                    (call_script, "script_combat_music_set_situation_with_culture"),
                    (assign, "$g_defender_reinforcement_limit", 2),
                ],
            ),
            common_music_situation_update,
            common_battle_check_friendly_kills,
            (
                1,
                0,
                5,
                [
                    # new (25.11.09) starts (sdsd = TODO : make a similar code to also helping ally encounters)
                    # count all total (not dead) enemy soldiers (in battle area + not currently placed in battle area)
                    (
                        call_script,
                        "script_party_count_members_with_full_health",
                        "p_collective_enemy",
                    ),
                    (assign, ":total_enemy_soldiers", reg0),
                    # decrease number of agents already in battle area to find all number of reinforcement enemies
                    (assign, ":enemy_soldiers_in_battle_area", 0),
                    (try_for_agents, ":cur_agent"),
                      (agent_is_human, ":cur_agent"),
                      (agent_get_party_id, ":agent_party", ":cur_agent"),
                      (try_begin),
                        (neq, ":agent_party", "p_main_party"),
                        (neg | agent_is_ally, ":cur_agent"),
                        (val_add, ":enemy_soldiers_in_battle_area", 1),
                      (try_end),
                    (try_end),
                    (
                        store_sub,
                        ":total_enemy_reinforcements",
                        ":total_enemy_soldiers",
                        ":enemy_soldiers_in_battle_area",
                    ),
                    (try_begin),
                      (lt, ":total_enemy_reinforcements", 15),
                      (ge, "$defender_reinforcement_stage", 2),
                      (eq, "$defender_reinforcement_limit_increased", 0),
                      (val_add, "$g_defender_reinforcement_limit", 1),
                      (assign, "$defender_reinforcement_limit_increased", 1),
                    (try_end),
                    # new (25.11.09) ends
                    (
                        lt,
                        "$defender_reinforcement_stage",
                        "$g_defender_reinforcement_limit",
                    ),
                    (store_mission_timer_a, ":mission_time"),
                    (ge, ":mission_time", 10),
                    (store_normalized_team_count, ":num_defenders", 0),
                    (lt, ":num_defenders", 6),
                ],
                [
                    (add_reinforcements_to_entry, 0, 7),
                    (assign, "$defender_reinforcement_limit_increased", 0),
                    (val_add, "$defender_reinforcement_stage", 1),
                ],
            ),
            (
                1,
                0,
                5,
                [
                    (lt, "$attacker_reinforcement_stage", 2),
                    (store_mission_timer_a, ":mission_time"),
                    (ge, ":mission_time", 10),
                    (store_normalized_team_count, ":num_attackers", 1),
                    (lt, ":num_attackers", 6),
                ],
                [
                    (add_reinforcements_to_entry, 3, 7),
                    (val_add, "$attacker_reinforcement_stage", 1),
                ],
            ),
            common_battle_check_victory_condition,
            common_battle_victory_display,
            (
                1,
                4,
                ti_once,
                [(main_hero_fallen)],
                [
                    (assign, "$pin_player_fallen", 1),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 10, 20, 1),
                    (assign, "$g_battle_result", -1),
                    (set_mission_result, -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            common_battle_inventory,
            # AI Triggers
            (
                0,
                0,
                ti_once,
                [
                    (store_mission_timer_a, ":mission_time"),
                    (ge, ":mission_time", 2),
                ],
                [
                    (call_script, "script_select_battle_tactic"),
                    (call_script, "script_battle_tactic_init"),
                ],
            ),
            (
                5,
                0,
                0,
                [
                    (store_mission_timer_a, ":mission_time"),
                    (ge, ":mission_time", 3),
                    (call_script, "script_battle_tactic_apply"),
                ],
                [],
            ),  # applying battle tactic
            # simple_battle_morale_check,
            common_battle_morale_check,
            common_battle_order_panel,
            common_battle_order_panel_tick,
        ],
    ),
    (
        "village_attack_bandits",
        mtf_battle_mode | mtf_synch_inventory,
        charge,
        "You lead your men to battle.",
        [
            (3, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (1, mtef_team_0 | mtef_use_exact_number, 0, aif_start_alarmed, 7, []),
            (1, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
        ],
        [
            common_battle_tab_press,
            common_battle_init_banner,
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (assign, "$pin_player_fallen", 0),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 10, 20, 1),
                    (assign, "$g_battle_result", -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (assign, "$g_battle_won", 0),
                    (assign, "$defender_reinforcement_stage", 0),
                    (assign, "$attacker_reinforcement_stage", 0),
                    (try_begin),
                      (eq, "$g_mt_mode", vba_after_training),
                      (add_reinforcements_to_entry, 1, 6),
                    (else_try),
                      (add_reinforcements_to_entry, 1, 29),
                    (try_end),
                    (call_script, "script_combat_music_set_situation_with_culture"),
                ],
            ),
            common_music_situation_update,
            common_battle_check_friendly_kills,
            common_battle_check_victory_condition,
            common_battle_victory_display,
            (
                1,
                4,
                ti_once,
                [(main_hero_fallen)],
                [
                    (assign, "$pin_player_fallen", 1),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 10, 20, 1),
                    (assign, "$g_battle_result", -1),
                    (set_mission_result, -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            # simple_battle_morale_check,
            common_battle_morale_check,
            common_battle_inventory,
            common_battle_order_panel,
            common_battle_order_panel_tick,
        ],
    ),
    (
        "village_raid",
        mtf_battle_mode | mtf_synch_inventory,
        charge,
        "You lead your men to battle.",
        [
            (
                3,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                12,
                [],
            ),
            (3, mtef_defenders | mtef_team_0, 0, aif_start_alarmed, 0, []),
            (1, mtef_attackers | mtef_team_1, 0, aif_start_alarmed, 12, []),
            (1, mtef_attackers | mtef_team_1, 0, aif_start_alarmed, 0, []),
        ],
        [
            common_battle_tab_press,
            common_battle_init_banner,
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (assign, "$pin_player_fallen", 0),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 10, 20, 1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (assign, "$g_battle_won", 0),
                    (assign, "$defender_reinforcement_stage", 0),
                    (assign, "$attacker_reinforcement_stage", 0),
                    (call_script, "script_combat_music_set_situation_with_culture"),
                ],
            ),
            common_music_situation_update,
            common_battle_check_friendly_kills,
            (
                1,
                0,
                5,
                [
                    (lt, "$defender_reinforcement_stage", 2),
                    (store_mission_timer_a, ":mission_time"),
                    (ge, ":mission_time", 10),
                    (store_normalized_team_count, ":num_defenders", 0),
                    (lt, ":num_defenders", 6),
                ],
                [
                    (add_reinforcements_to_entry, 0, 6),
                    (val_add, "$defender_reinforcement_stage", 1),
                ],
            ),
            (
                1,
                0,
                5,
                [
                    (lt, "$attacker_reinforcement_stage", 2),
                    (store_mission_timer_a, ":mission_time"),
                    (ge, ":mission_time", 10),
                    (store_normalized_team_count, ":num_attackers", 1),
                    (lt, ":num_attackers", 6),
                ],
                [
                    (add_reinforcements_to_entry, 3, 6),
                    (val_add, "$attacker_reinforcement_stage", 1),
                ],
            ),
            (
                1,
                60,
                ti_once,
                [
                    (store_mission_timer_a, reg(1)),
                    (ge, reg(1), 10),
                    (all_enemies_defeated, 5),
                    (neg | main_hero_fallen, 0),
                    (set_mission_result, 1),
                    (display_message, "str_msg_battle_won"),
                    (assign, "$g_battle_won", 1),
                    (assign, "$g_battle_result", 1),
                    (try_begin),
                      (eq, "$g_village_raid_evil", 0),
                      (call_script, "script_play_victorious_sound"),
                    (else_try),
                      (play_track, "track_victorious_evil", 1),
                    (try_end),
                ],
                [
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 1),
                ],
            ),
            common_battle_victory_display,
            (
                1,
                4,
                ti_once,
                [(main_hero_fallen)],
                [
                    (assign, "$pin_player_fallen", 1),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 10, 20, 1),
                    (assign, "$g_battle_result", -1),
                    (set_mission_result, -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            # simple_battle_morale_check,
            common_battle_morale_check,
            common_battle_inventory,
            common_battle_order_panel,
            common_battle_order_panel_tick,
        ],
    ),
    (
        "besiege_inner_battle_castle",
        mtf_battle_mode,
        -1,
        "You attack the walls of the castle...",
        [
            (
                0,
                mtef_attackers | mtef_use_exact_number | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                6,
                mtef_attackers | mtef_use_exact_number | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                7,
                mtef_attackers | mtef_use_exact_number | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                16,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                17,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                18,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                19,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                20,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            common_battle_tab_press,
            common_battle_init_banner,
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (assign, "$pin_player_fallen", 0),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 5, 20, 0),
                    (assign, "$g_battle_result", -1),
                    (set_mission_result, -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (assign, "$g_battle_won", 0),
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_ambushed,
                    ),
                ],
            ),
            # AI Tiggers
            (
                0,
                0,
                ti_once,
                [
                    (assign, "$defender_team", 0),
                    (assign, "$attacker_team", 1),
                    (assign, "$defender_team_2", 2),
                    (assign, "$attacker_team_2", 3),
                ],
                [],
            ),
            common_battle_check_friendly_kills,
            common_battle_check_victory_condition,
            common_battle_victory_display,
            (
                1,
                4,
                ti_once,
                [(main_hero_fallen)],
                [
                    (assign, "$pin_player_fallen", 1),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 5, 20, 0),
                    (assign, "$g_battle_result", -1),
                    (set_mission_result, -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            common_battle_order_panel,
            common_battle_order_panel_tick,
            common_battle_inventory,
        ],
    ),
    (
        "besiege_inner_battle_town_center",
        mtf_battle_mode,
        -1,
        "You attack the walls of the castle...",
        [
            (
                0,
                mtef_attackers | mtef_use_exact_number | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                4,
                [],
            ),
            (
                2,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                23,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                24,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                25,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                26,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                27,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                28,
                mtef_defenders | mtef_use_exact_number | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            common_battle_tab_press,
            common_battle_init_banner,
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (assign, "$pin_player_fallen", 0),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 5, 20, 0),
                    (assign, "$g_battle_result", -1),
                    (set_mission_result, -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (assign, "$g_battle_won", 0),
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_ambushed,
                    ),
                ],
            ),
            # AI Tiggers
            (
                0,
                0,
                ti_once,
                [
                    (assign, "$defender_team", 0),
                    (assign, "$attacker_team", 1),
                    (assign, "$defender_team_2", 2),
                    (assign, "$attacker_team_2", 3),
                ],
                [],
            ),
            common_battle_check_friendly_kills,
            common_battle_check_victory_condition,
            common_battle_victory_display,
            (
                1,
                4,
                ti_once,
                [(main_hero_fallen)],
                [
                    (assign, "$pin_player_fallen", 1),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 5, 20, 0),
                    (assign, "$g_battle_result", -1),
                    (set_mission_result, -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            common_battle_order_panel,
            common_battle_order_panel_tick,
            common_battle_inventory,
        ],
    ),
    (
        "castle_attack_walls_defenders_sally",
        mtf_battle_mode | mtf_synch_inventory,
        -1,
        "You attack the walls of the castle...",
        [
            (
                0,
                mtef_attackers | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                12,
                [],
            ),
            (
                0,
                mtef_attackers | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                0,
                [],
            ),
            (
                3,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                12,
                [],
            ),
            (
                3,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                0,
                [],
            ),
        ],
        [
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (call_script, "script_agent_reassign_team", ":agent_no"),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (team_set_relation, 0, 2, 1),
                    (team_set_relation, 1, 3, 1),
                    (call_script, "script_change_banners_and_chest"),
                ],
            ),
            common_battle_tab_press,
            common_battle_init_banner,
            (
                ti_on_agent_killed_or_wounded,
                0,
                0,
                [],  # new
                [
                    (store_trigger_param_1, ":dead_agent_no"),
                    (store_trigger_param_2, ":killer_agent_no"),
                    (store_trigger_param_3, ":is_wounded"),
                    (try_begin),
                      (ge, ":dead_agent_no", 0),
                      (neg | agent_is_ally, ":dead_agent_no"),
                      (agent_is_human, ":dead_agent_no"),
                      (agent_get_troop_id, ":dead_agent_troop_id", ":dead_agent_no"),
                      (str_store_troop_name, s6, ":dead_agent_troop_id"),
                      (assign, reg0, ":dead_agent_no"),
                      (assign, reg1, ":killer_agent_no"),
                      (assign, reg2, ":is_wounded"),
                      (agent_get_team, reg3, ":dead_agent_no"),
                      (
                          party_add_members,
                          "p_total_enemy_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),  # addition_to_p_total_enemy_casualties
                      (eq, ":is_wounded", 1),
                      (
                          party_wound_members,
                          "p_total_enemy_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),
                    (try_end),
                ],
            ),
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (assign, "$pin_player_fallen", 0),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 5, 20, 0),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (assign, "$g_battle_won", 0),
                    (call_script, "script_combat_music_set_situation_with_culture"),
                ],
            ),
            common_music_situation_update,
            common_battle_check_friendly_kills,
            (
                1,
                60,
                ti_once,
                [
                    (store_mission_timer_a, reg(1)),
                    (ge, reg(1), 10),
                    (all_enemies_defeated, 2),
                    (neg | main_hero_fallen, 0),
                    (set_mission_result, 1),
                    (display_message, "str_msg_battle_won"),
                    (assign, "$g_battle_won", 1),
                    (assign, "$g_battle_result", 1),
                    (assign, "$g_siege_sallied_out_once", 1),
                    (assign, "$g_siege_method", 1),  # reset siege timer
                    (call_script, "script_play_victorious_sound"),
                ],
                [
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 1),
                ],
            ),
            common_battle_victory_display,
            (
                1,
                4,
                ti_once,
                [(main_hero_fallen)],
                [
                    (assign, "$pin_player_fallen", 1),
                    (str_store_string, s5, "str_retreat"),
                    (call_script, "script_simulate_retreat", 5, 20, 0),
                    (assign, "$g_battle_result", -1),
                    (set_mission_result, -1),
                    (call_script, "script_count_mission_casualties_from_agents"),
                    (finish_mission, 0),
                ],
            ),
            common_battle_order_panel,
            common_battle_order_panel_tick,
            common_battle_inventory,
        ],
    ),
    (
        "castle_attack_walls_belfry",
        mtf_battle_mode | mtf_synch_inventory,
        -1,
        "You attack the walls of the castle...",
        [
            (
                0,
                mtef_attackers | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                12,
                [],
            ),
            (
                0,
                mtef_attackers | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                0,
                [],
            ),
            (
                10,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                0,
                [],
            ),
            (
                11,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                7,
                [],
            ),
            (
                15,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                0,
                [],
            ),
            (
                40,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                41,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                42,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                43,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                44,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                45,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                46,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                47,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            common_battle_mission_start,
            common_battle_tab_press,
            common_battle_init_banner,
            common_siege_question_answered,
            common_siege_init,
            common_music_situation_update,
            common_siege_ai_trigger_init,
            common_siege_ai_trigger_init_2,
            (
                0,
                0,
                ti_once,
                [
                    (set_show_messages, 0),
                    (team_give_order, "$attacker_team", grc_everyone, mordr_spread_out),
                    (team_give_order, "$attacker_team", grc_everyone, mordr_spread_out),
                    (team_give_order, "$attacker_team", grc_everyone, mordr_spread_out),
                    (set_show_messages, 1),
                ],
                [],
            ),
            (
                ti_on_agent_killed_or_wounded,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":dead_agent_no"),
                    (store_trigger_param_2, ":killer_agent_no"),
                    (store_trigger_param_3, ":is_wounded"),
                    (try_begin),
                      (ge, ":dead_agent_no", 0),
                      (neg | agent_is_ally, ":dead_agent_no"),
                      (agent_is_human, ":dead_agent_no"),
                      (agent_get_troop_id, ":dead_agent_troop_id", ":dead_agent_no"),
                      (str_store_troop_name, s6, ":dead_agent_troop_id"),
                      (assign, reg0, ":dead_agent_no"),
                      (assign, reg1, ":killer_agent_no"),
                      (assign, reg2, ":is_wounded"),
                      (agent_get_team, reg3, ":dead_agent_no"),
                      (
                          party_add_members,
                          "p_total_enemy_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),  # addition_to_p_total_enemy_casualties
                      (eq, ":is_wounded", 1),
                      (
                          party_wound_members,
                          "p_total_enemy_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),
                    (try_end),
                ],
            ),
            common_siege_ai_trigger_init_after_2_secs,
            common_siege_defender_reinforcement_check,
            common_siege_defender_reinforcement_archer_reposition,
            common_siege_attacker_reinforcement_check,
            common_siege_attacker_do_not_stall,
            common_battle_check_friendly_kills,
            common_battle_check_victory_condition,
            common_battle_victory_display,
            common_siege_refill_ammo,
            common_siege_check_defeat_condition,
            common_battle_order_panel,
            common_battle_order_panel_tick,
            common_inventory_not_available,
            common_siege_init_ai_and_belfry,
            common_siege_move_belfry,
            common_siege_rotate_belfry,
            common_siege_assign_men_to_belfry,
        ],
    ),
    (
        "castle_attack_walls_ladder",
        mtf_battle_mode | mtf_synch_inventory,
        -1,
        "You attack the walls of the castle...",
        [
            (
                0,
                mtef_attackers | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                12,
                [],
            ),
            (
                0,
                mtef_attackers | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                0,
                [],
            ),
            (
                10,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                0,
                [],
            ),
            (
                11,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                7,
                [],
            ),
            (
                15,
                mtef_defenders | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                0,
                [],
            ),
            (
                40,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                41,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                42,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                43,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                44,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                45,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                46,
                mtef_defenders | mtef_team_0 | mtef_archers_first,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            common_battle_mission_start,
            common_battle_tab_press,
            common_battle_init_banner,
            common_siege_question_answered,
            common_siege_init,
            common_music_situation_update,
            common_siege_ai_trigger_init,
            common_siege_ai_trigger_init_2,
            common_siege_ai_trigger_init_after_2_secs,
            common_siege_defender_reinforcement_check,
            common_siege_defender_reinforcement_archer_reposition,
            common_siege_attacker_reinforcement_check,
            common_siege_attacker_do_not_stall,
            common_battle_check_friendly_kills,
            common_battle_check_victory_condition,
            common_battle_victory_display,
            common_siege_refill_ammo,
            common_siege_check_defeat_condition,
            common_battle_order_panel,
            common_battle_order_panel_tick,
            common_inventory_not_available,
            (
                ti_on_agent_killed_or_wounded,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":dead_agent_no"),
                    (store_trigger_param_2, ":killer_agent_no"),
                    (store_trigger_param_3, ":is_wounded"),
                    (try_begin),
                      (ge, ":dead_agent_no", 0),
                      (neg | agent_is_ally, ":dead_agent_no"),
                      (agent_is_human, ":dead_agent_no"),
                      (agent_get_troop_id, ":dead_agent_troop_id", ":dead_agent_no"),
                      (str_store_troop_name, s6, ":dead_agent_troop_id"),
                      (assign, reg0, ":dead_agent_no"),
                      (assign, reg1, ":killer_agent_no"),
                      (assign, reg2, ":is_wounded"),
                      (agent_get_team, reg3, ":dead_agent_no"),
                      (
                          party_add_members,
                          "p_total_enemy_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),  # addition_to_p_total_enemy_casualties
                      (eq, ":is_wounded", 1),
                      (
                          party_wound_members,
                          "p_total_enemy_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),
                    (try_end),
                ],
            ),
        ],
    ),
    (
        "castle_visit",
        0,
        -1,
        "Castle visit",
        [
            (
                0,
                mtef_scene_source | mtef_team_0,
                af_override_horse | af_override_weapons | af_override_head,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                1,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                2,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                3,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                4,
                mtef_scene_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),  # for doors
            (
                5,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                6,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (
                7,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                pilgrim_disguise,
            ),
            (8, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (9, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (10, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (11, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (12, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (13, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (14, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (15, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (16, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (17, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (18, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (19, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (20, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (21, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (22, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (23, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (24, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (25, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (26, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (27, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (28, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (29, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (30, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (31, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (32, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (33, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (34, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (35, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (36, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (37, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (38, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (39, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            # Party members
            (40, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (41, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (42, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (43, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (44, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (45, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (46, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
        ],
        [
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (call_script, "script_init_town_agent", ":agent_no"),
                    (get_player_agent_no, ":player_agent"),
                    (try_begin),
                      (neq, ":player_agent", ":agent_no"),
                      (agent_set_team, ":agent_no", 7),
                    (try_end),
                    (try_begin),
                      (this_or_next | eq, "$talk_context", tc_escape),
                      (eq, "$talk_context", tc_prison_break),
                      (agent_get_troop_id, ":troop_no", ":agent_no"),
                      (
                          troop_get_slot,
                          ":will_join_prison_break",
                          ":troop_no",
                          slot_troop_will_join_prison_break,
                      ),
                      (eq, ":will_join_prison_break", 1),
                      (agent_set_team, ":agent_no", 0),
                      (agent_ai_set_aggressiveness, ":agent_no", 5),
                      (troop_set_slot, ":troop_no", slot_troop_will_join_prison_break, 0),
                      (try_begin),
                        (
                            troop_slot_eq,
                            ":troop_no",
                            slot_troop_mission_participation,
                            mp_prison_break_stand_back,
                        ),
                        (agent_get_position, pos1, ":agent_no"),
                        (agent_set_scripted_destination, ":agent_no", pos1),
                      (try_end),
                    (try_end),
                ],
            ),
            (
                ti_on_agent_killed_or_wounded,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":dead_agent_no"),
                    (store_trigger_param_2, ":killer_agent_no"),
                    # (store_trigger_param_3, ":is_wounded"),
                    (agent_get_troop_id, ":dead_agent_troop_no", ":dead_agent_no"),
                    (agent_get_troop_id, ":killer_agent_troop_no", ":killer_agent_no"),
                    (try_begin),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_swadian_prison_guard",
                      ),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_vaegir_prison_guard",
                      ),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_khergit_prison_guard",
                      ),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_nord_prison_guard",
                      ),
                      (
                          this_or_next | eq,
                          ":dead_agent_troop_no",
                          "trp_rhodok_prison_guard",
                      ),
                      (eq, ":dead_agent_troop_no", "trp_sarranid_prison_guard"),
                      (eq, ":killer_agent_troop_no", "trp_player"),
                      (display_message, "@You got keys of dungeon."),
                    (try_end),
                ],
            ),
            # JAILBREAK TRIGGERS
            # Civilians get out of the way
            (
                1,
                0,
                0,
                [
                    (this_or_next | eq, "$talk_context", tc_prison_break),
                    (eq, "$talk_context", tc_escape),
                ],
                [
                    # (agent_get_team, ":prisoner_agent", 0),
                    (call_script, "script_neutral_behavior_in_fight"),
                    (mission_disable_talk),
                ],
            ),
            # The game begins with the town alerted
            (
                1,
                0,
                ti_once,
                [
                    # If I set this to 1, 0, ti_once, then the prisoner spawns twice
                    (eq, "$talk_context", tc_escape),
                ],
                [
                    (get_player_agent_no, ":player_agent"),
                    (assign, reg6, ":player_agent"),
                    (call_script, "script_activate_town_guard"),
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_position, pos4, ":player_agent"),
                    (try_for_range, ":prisoner", active_npcs_begin, kingdom_ladies_end),
                      (troop_slot_ge, ":prisoner", slot_troop_mission_participation, 1),
                      (str_store_troop_name, s4, ":prisoner"),
                      (display_message, "str_s4_joins_prison_break"),
                      (
                          store_current_scene,
                          ":cur_scene",
                      ),  # this might be a better option?
                      (modify_visitors_at_site, ":cur_scene"),
                      # <entry_no>,<troop_id>,<number_of_troops>, <team_no>, <group_no>),
                      # team no and group no are used in multiplayer mode only. default team in entry is used in single player mode
                      (store_current_scene, ":cur_scene"),
                      (modify_visitors_at_site, ":cur_scene"),
                      (assign, ":nearest_entry_no", 24),
                      (
                          add_visitors_to_current_scene,
                          ":nearest_entry_no",
                          ":prisoner",
                          1,
                          0,
                          0,
                      ),
                      (troop_set_slot, ":prisoner", slot_troop_will_join_prison_break, 1),
                    (try_end),
                ],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (try_begin),
                      (this_or_next | eq, "$talk_context", tc_escape),
                      (eq, "$talk_context", tc_prison_break),
                      (display_message, "str_cannot_leave_now"),
                    (else_try),
                      (this_or_next | eq, "$g_mt_mode", tcm_default),
                      (eq, "$g_mt_mode", tcm_disguised),
                      (set_trigger_result, 1),
                      (mission_enable_talk),
                    (else_try),
                      (display_message, "str_cannot_leave_now"),
                    (try_end),
                ],
                [],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (call_script, "script_change_banners_and_chest"),
                ],
            ),
            (
                3,
                0,
                0,
                [
                    (main_hero_fallen, 0),
                ],
                [
                    (try_begin),
                      (this_or_next | eq, "$talk_context", tc_prison_break),
                      (eq, "$talk_context", tc_escape),
                      (call_script, "script_deduct_casualties_from_garrison"),
                      (jump_to_menu, "mnu_captivity_start_castle_defeat"),
                      (assign, ":end_cond", kingdom_ladies_end),
                      (try_for_range, ":prisoner", active_npcs_begin, ":end_cond"),
                        (
                            troop_set_slot,
                            ":prisoner",
                            slot_troop_mission_participation,
                            0,
                        ),  # new
                      (try_end),
                      (mission_enable_talk),
                      (finish_mission, 0),
                    (else_try),
                      (mission_enable_talk),
                      (finish_mission, 0),
                      (set_trigger_result, 1),
                    (try_end),
                ],
            ),
            (
                3,
                0,
                0,
                [
                    (eq, "$talk_context", tc_escape),
                    (neg | main_hero_fallen, 0),
                    (store_mission_timer_a, ":time"),
                    (ge, ":time", 10),
                    (
                        all_enemies_defeated
                    ),  # 1 is default enemy team for in-town battles
                ],
                [
                    (call_script, "script_deduct_casualties_from_garrison"),
                    (try_for_agents, ":agent"),
                      (agent_get_troop_id, ":troop", ":agent"),
                      (
                          troop_slot_ge,
                          ":troop",
                          slot_troop_mission_participation,
                          mp_prison_break_fight,
                      ),
                      (try_begin),
                        (agent_is_alive, ":agent"),
                        (
                            troop_set_slot,
                            ":troop",
                            slot_troop_mission_participation,
                            mp_prison_break_escaped,
                        ),
                      (else_try),
                        (
                            troop_set_slot,
                            ":troop",
                            slot_troop_mission_participation,
                            mp_prison_break_caught,
                        ),
                      (try_end),
                    (try_end),
                    (jump_to_menu, "mnu_sneak_into_town_caught_ran_away"),
                    (mission_enable_talk),
                    (finish_mission, 0),
                ],
            ),
        ],
    ),
    (
        "training_ground_trainer_talk",
        0,
        -1,
        "Training.",
        [
            (
                0,
                mtef_scene_source | mtef_team_0,
                af_override_horse | af_override_weapons,
                0,
                1,
                [],
            ),
            (
                1,
                mtef_scene_source | mtef_team_0,
                af_override_horse | af_override_weapons,
                0,
                1,
                [],
            ),
            (
                2,
                mtef_scene_source | mtef_team_0,
                af_override_horse | af_override_weapons,
                0,
                1,
                [],
            ),
            (
                3,
                mtef_scene_source | mtef_team_0,
                af_override_horse | af_override_weapons,
                0,
                1,
                [],
            ),
            (
                4,
                mtef_scene_source | mtef_team_0,
                af_override_horse | af_override_weapons,
                0,
                1,
                [],
            ),
            (
                5,
                mtef_scene_source | mtef_team_0,
                af_override_horse | af_override_weapons,
                0,
                1,
                [],
            ),
            (6, mtef_scene_source | mtef_team_0, 0, 0, 1, []),
        ],
        [
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (call_script, "script_change_banners_and_chest"),
                ],
            ),
            (
                ti_inventory_key_pressed,
                0,
                0,
                [
                    (set_trigger_result, 1),
                ],
                [],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (set_trigger_result, 1),
                ],
                [],
            ),
            (
                0.0,
                1.0,
                2.0,
                [
                    (lt, "$trainer_help_message", 2),
                ],
                [
                    (val_add, "$trainer_help_message", 1),
                ],
            ),
        ],
    ),
    (
        "training_ground_trainer_training",
        mtf_arena_fight,
        -1,
        "You will fight a match in the arena.",
        [
            (
                16,
                mtef_visitor_source | mtef_team_0,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_shield, itm.practice_sword, itm.practice_boots],
            ),
            (
                17,
                mtef_visitor_source | mtef_team_1,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff, itm.practice_boots],
            ),
            (
                18,
                mtef_visitor_source | mtef_team_2,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff, itm.practice_boots],
            ),
            (
                19,
                mtef_visitor_source | mtef_team_3,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword, itm.practice_boots],
            ),
            (20, mtef_visitor_source, 0, 0, 1, []),
        ],
        [
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            common_arena_fight_tab_press,
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (set_jump_mission, "mt_training_ground_trainer_talk"),
                    (
                        modify_visitors_at_site,
                        "$g_training_ground_melee_training_scene",
                    ),
                    (reset_visitors),
                    (set_jump_entry, 5),
                    (jump_to_scene, "$g_training_ground_melee_training_scene"),
                ],
            ),
            (
                1,
                3,
                ti_once,
                [(main_hero_fallen, 0)],
                [
                    (set_jump_mission, "mt_training_ground_trainer_talk"),
                    (
                        modify_visitors_at_site,
                        "$g_training_ground_melee_training_scene",
                    ),
                    (reset_visitors),
                    (set_jump_entry, 5),
                    (jump_to_scene, "$g_training_ground_melee_training_scene"),
                ],
            ),
            (
                1,
                3,
                ti_once,
                [
                    (store_mission_timer_a, reg1),
                    (ge, reg1, 1),
                    (num_active_teams_le, 1),
                    (neg | main_hero_fallen),
                    (assign, "$training_fight_won", 1),
                ],
                [
                    (set_jump_mission, "mt_training_ground_trainer_talk"),
                    (
                        modify_visitors_at_site,
                        "$g_training_ground_melee_training_scene",
                    ),
                    (reset_visitors),
                    (set_jump_entry, 5),
                    (jump_to_scene, "$g_training_ground_melee_training_scene"),
                ],
            ),
            (
                ti_inventory_key_pressed,
                0,
                0,
                [(display_message, "str_cant_use_inventory_arena")],
                [],
            ),
        ],
    ),
    (
        "training_ground_training",
        mtf_arena_fight,
        -1,
        "Training.",
        [
            (
                0,
                mtef_visitor_source | mtef_team_0,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff],
            ),
            (
                1,
                mtef_visitor_source | mtef_team_1,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff],
            ),
            (
                2,
                mtef_visitor_source | mtef_team_1,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff],
            ),
            (
                3,
                mtef_visitor_source | mtef_team_1,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff],
            ),
            (
                4,
                mtef_visitor_source | mtef_team_1,
                af_override_everything,
                aif_start_alarmed,
                1,
                [itm.practice_staff],
            ),
            (
                8,
                mtef_visitor_source,
                af_override_weapons | af_override_horse | af_override_head,
                0,
                1,
                [],
            ),
            (
                9,
                mtef_visitor_source,
                af_override_weapons | af_override_horse | af_override_head,
                0,
                1,
                [],
            ),
            (
                10,
                mtef_visitor_source,
                af_override_weapons | af_override_horse | af_override_head,
                0,
                1,
                [],
            ),
            (
                11,
                mtef_visitor_source,
                af_override_weapons | af_override_horse | af_override_head,
                0,
                1,
                [],
            ),
            (
                12,
                mtef_visitor_source,
                af_override_weapons | af_override_horse | af_override_head,
                0,
                1,
                [],
            ),
            (
                13,
                mtef_visitor_source,
                af_override_weapons | af_override_horse | af_override_head,
                0,
                1,
                [],
            ),
            (
                14,
                mtef_visitor_source,
                af_override_weapons | af_override_horse | af_override_head,
                0,
                1,
                [],
            ),
            (
                15,
                mtef_visitor_source,
                af_override_weapons | af_override_horse | af_override_head,
                0,
                1,
                [],
            ),
        ],
        [
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (assign, "$g_last_destroyed_gourds", 0),
                    (call_script, "script_change_banners_and_chest"),
                ],
            ),
            common_arena_fight_tab_press,
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (assign, "$g_training_ground_training_success_ratio", 0),
                    (jump_to_menu, "mnu_training_ground_training_result"),
                    (finish_mission),
                ],
            ),
            common_inventory_not_available,
            (
                0,
                0,
                ti_once,
                [
                    (try_begin),
                      (eq, "$g_mt_mode", ctm_ranged),
                      (set_fixed_point_multiplier, 100),
                      (entry_point_get_position, pos1, 0),
                      (init_position, pos2),
                      (position_set_y, pos2, "$g_training_ground_ranged_distance"),
                      (position_transform_position_to_parent, pos3, pos1, pos2),
                      (copy_position, pos1, pos3),
                      (assign, ":end_cond", 10),
                      (assign, ":shift_value", 0),
                      (try_for_range, ":cur_i", 0, ":end_cond"),
                        (store_sub, ":cur_instance", ":cur_i", ":shift_value"),
                        (
                            scene_prop_get_instance,
                            ":target_object",
                            "spr_gourd",
                            ":cur_instance",
                        ),
                        (copy_position, pos2, pos1),
                        (init_position, pos0),
                        (store_random_in_range, ":random_no", 0, 360),
                        (position_rotate_z, pos2, ":random_no"),
                        (store_random_in_range, ":random_no", 50, 600),
                        (position_move_x, pos2, ":random_no"),
                        (store_random_in_range, ":random_no", 0, 360),
                        (position_transform_position_to_local, pos3, pos1, pos2),
                        (position_rotate_z, pos0, ":random_no"),
                        (position_transform_position_to_parent, pos4, pos0, pos3),
                        (position_transform_position_to_parent, pos2, pos1, pos4),
                        (position_set_z_to_ground_level, pos2),
                        (position_move_z, pos2, 150),
                        (assign, ":valid", 1),
                        (try_for_range, ":cur_instance_2", 0, 10),
                          (eq, ":valid", 1),
                          (neq, ":cur_instance", ":cur_instance_2"),
                          (
                              scene_prop_get_instance,
                              ":target_object_2",
                              "spr_gourd",
                              ":cur_instance_2",
                          ),
                          (prop_instance_get_position, pos3, ":target_object_2"),
                          (get_distance_between_positions, ":dist", pos2, pos3),
                          (lt, ":dist", 100),
                          (assign, ":valid", 0),
                        (try_end),
                        (try_begin),
                          (eq, ":valid", 0),
                          (val_add, ":end_cond", 1),
                          (val_add, ":shift_value", 1),
                        (else_try),
                          (prop_instance_set_position, ":target_object", pos2),
                          (prop_instance_animate_to_position, ":target_object", pos2, 1),
                          (
                              scene_prop_get_instance,
                              ":target_object_2",
                              "spr_gourd_spike",
                              ":cur_instance",
                          ),
                          (position_move_z, pos2, -150),  # moving back to ground level
                          (prop_instance_set_position, ":target_object_2", pos2),
                          (prop_instance_animate_to_position, ":target_object_2", pos2, 1),
                        (try_end),
                      (try_end),
                    (else_try),
                      (eq, "$g_mt_mode", ctm_mounted),
                      (assign, ":num_gourds", 0),
                      # First, placing gourds on the spikes
                      (try_for_range, ":cur_i", 0, 100),
                        (scene_prop_get_instance, ":target_object", "spr_gourd", ":cur_i"),
                        (
                            scene_prop_get_instance,
                            ":target_object_2",
                            "spr_gourd_spike",
                            ":cur_i",
                        ),
                        (ge, ":target_object", 0),
                        (ge, ":target_object_2", 0),
                        (val_add, ":num_gourds", 1),
                        (prop_instance_get_position, pos0, ":target_object_2"),
                        (position_move_z, pos0, 150),
                        (prop_instance_set_position, ":target_object", pos0),
                        (prop_instance_animate_to_position, ":target_object", pos0, 1),
                      (try_end),
                      (
                          store_sub,
                          ":end_cond",
                          ":num_gourds",
                          "$g_training_ground_training_num_gourds_to_destroy",
                      ),
                      # Second, removing gourds and their spikes randomly
                      (try_for_range, ":cur_i", 0, ":end_cond"),
                        (store_random_in_range, ":random_instance", 0, ":num_gourds"),
                        (
                            scene_prop_get_instance,
                            ":target_object",
                            "spr_gourd",
                            ":random_instance",
                        ),
                        (prop_instance_get_position, pos0, ":target_object"),
                        (position_get_z, ":pos_z", pos0),
                        (try_begin),
                          (lt, ":pos_z", -50000),
                          #               (val_add, ":end_cond", 1), #removed already, try again
                        (else_try),
                          (position_set_z, pos0, -100000),
                          (prop_instance_set_position, ":target_object", pos0),
                          (prop_instance_animate_to_position, ":target_object", pos0, 1),
                          (
                              scene_prop_get_instance,
                              ":target_object_2",
                              "spr_gourd_spike",
                              ":random_instance",
                          ),
                          (prop_instance_set_position, ":target_object_2", pos0),
                          (prop_instance_animate_to_position, ":target_object_2", pos0, 1),
                        (try_end),
                      (try_end),
                    (try_end),
                ],
                [],
            ),
            (
                1,
                3,
                ti_once,
                [
                    (eq, "$g_mt_mode", ctm_melee),
                    (this_or_next | main_hero_fallen),
                    (num_active_teams_le, 1),
                ],
                [
                    (try_begin),
                      (neg | main_hero_fallen),
                      (assign, "$g_training_ground_training_success_ratio", 100),
                    (else_try),
                      (assign, ":alive_enemies", 0),
                      (try_for_agents, ":agent_no"),
                        (agent_is_alive, ":agent_no"),
                        (agent_is_human, ":agent_no"),
                        (agent_get_team, ":team_no", ":agent_no"),
                        (eq, ":team_no", 1),
                        (val_add, ":alive_enemies", 1),
                      (try_end),
                      (
                          store_sub,
                          ":dead_enemies",
                          "$g_training_ground_training_num_enemies",
                          ":alive_enemies",
                      ),
                      (
                          store_mul,
                          "$g_training_ground_training_success_ratio",
                          ":dead_enemies",
                          100,
                      ),
                      (
                          val_div,
                          "$g_training_ground_training_success_ratio",
                          "$g_training_ground_training_num_enemies",
                      ),
                    (try_end),
                    (jump_to_menu, "mnu_training_ground_training_result"),
                    (finish_mission),
                ],
            ),
            (
                1,
                3,
                ti_once,
                [
                    (eq, "$g_mt_mode", ctm_ranged),
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_ammo, ":ammo", ":player_agent"),
                    (store_mission_timer_a, ":cur_seconds"),
                    (this_or_next | main_hero_fallen),
                    (this_or_next | eq, ":ammo", 0),
                    (gt, ":cur_seconds", 116),
                ],
                [
                    (
                        store_mul,
                        "$g_training_ground_training_success_ratio",
                        "$scene_num_total_gourds_destroyed",
                        10,
                    ),
                    (jump_to_menu, "mnu_training_ground_training_result"),
                    (finish_mission),
                ],
            ),
            (
                1,
                3,
                ti_once,
                [
                    (eq, "$g_mt_mode", ctm_mounted),
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_horse, ":player_horse", ":player_agent"),
                    (store_mission_timer_a, ":cur_seconds"),
                    (this_or_next | lt, ":player_horse", 0),
                    (this_or_next | main_hero_fallen),
                    (
                        this_or_next | ge,
                        "$scene_num_total_gourds_destroyed",
                        "$g_training_ground_training_num_gourds_to_destroy",
                    ),
                    (gt, ":cur_seconds", 120),
                ],
                [
                    (
                        store_mul,
                        "$g_training_ground_training_success_ratio",
                        "$scene_num_total_gourds_destroyed",
                        100,
                    ),
                    (
                        val_div,
                        "$g_training_ground_training_success_ratio",
                        "$g_training_ground_training_num_gourds_to_destroy",
                    ),
                    (jump_to_menu, "mnu_training_ground_training_result"),
                    (finish_mission),
                ],
            ),
            (
                0,
                0,
                0,
                [
                    (gt, "$g_last_destroyed_gourds", 0),
                    (try_begin),
                      (eq, "$g_mt_mode", ctm_ranged),
                      (entry_point_get_position, pos1, 0),
                      (position_move_y, pos1, 100, 0),
                      (get_player_agent_no, ":player_agent"),
                      (agent_get_position, pos2, ":player_agent"),
                      (try_begin),
                        (position_is_behind_position, pos2, pos1),
                        (
                            val_add,
                            "$scene_num_total_gourds_destroyed",
                            "$g_last_destroyed_gourds",
                        ),
                      (else_try),
                        (
                            display_message,
                            "@You must stay behind the line on the ground! Point is not counted.",
                        ),
                      (try_end),
                    (else_try),
                      (
                          val_add,
                          "$scene_num_total_gourds_destroyed",
                          "$g_last_destroyed_gourds",
                      ),
                    (try_end),
                    (assign, "$g_last_destroyed_gourds", 0),
                ],
                [],
            ),
        ],
    ),
    (
        "sneak_caught_fight",
        mtf_battle_mode,
        -1,
        "You must fight your way out!",
        [
            (
                0,
                mtef_scene_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                pilgrim_disguise,
            ),
            (
                1,
                mtef_scene_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                pilgrim_disguise,
            ),
            (
                2,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                3,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                4,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                5,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                6,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                7,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                8,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                9,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                10,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                11,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                12,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                13,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                14,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                15,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                16,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                17,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                18,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                19,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                20,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                21,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                22,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                23,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                25,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                26,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                27,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                28,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                29,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                30,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                31,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                32,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                33,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                34,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                35,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                36,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                37,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                38,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                39,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                40,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                41,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                42,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                43,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                44,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                45,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                46,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                47,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                48,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                49,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                50,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                51,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                52,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                53,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                54,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                55,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                56,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                57,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                58,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                59,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                60,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                61,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                62,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                63,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                64,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (call_script, "script_change_banners_and_chest"),
                ],
            ),
            (
                ti_after_mission_start,
                0,
                0,
                [],
                [
                    (assign, ":num_guards", 5),
                    (try_begin),
                      (
                          party_get_slot,
                          ":last_nearby_fire_time",
                          "$current_town",
                          slot_town_last_nearby_fire_time,
                      ),
                      (store_current_hours, ":cur_time"),
                      (store_add, ":fire_finish_time", ":last_nearby_fire_time", 4),
                      (
                          is_between,
                          ":cur_time",
                          ":fire_finish_time",
                          ":last_nearby_fire_time",
                      ),
                      (assign, ":num_guards", 2),
                    (else_try),
                      (this_or_next | eq, "$talk_context", tc_escape),
                      (eq, "$talk_context", tc_prison_break),
                      (assign, ":num_guards", 4),
                    (try_end),
                    (try_begin),
                      (this_or_next | eq, "$talk_context", tc_escape),
                      (eq, "$talk_context", tc_prison_break),
                      (entry_point_get_position, pos0, 7),
                    (else_try),
                      (party_slot_eq, "$current_town", slot_party_type, spt_town),
                      (entry_point_get_position, pos0, 0),
                    (else_try),
                      (entry_point_get_position, pos0, 1),
                    (try_end),
                    (assign, ":last_nearest_entry_distance", -1),
                    (assign, ":last_nearest_entry_point", -1),
                    (try_for_range, ":guard_no", 0, ":num_guards"),
                      (assign, ":smallest_dist", 100000),
                      (try_for_range, ":guard_entry_point", 2, 64),
                        (neq, ":last_nearest_entry_point", ":guard_entry_point"),
                        (entry_point_get_position, pos1, ":guard_entry_point"),
                        (get_distance_between_positions, ":dist", pos0, pos1),
                        (lt, ":dist", ":smallest_dist"),
                        (gt, ":dist", ":last_nearest_entry_distance"),
                        (assign, ":smallest_dist", ":dist"),
                        (assign, ":nearest_entry_point", ":guard_entry_point"),
                      (try_end),
                      (store_faction_of_party, ":town_faction", "$current_town"),
                      (try_begin),
                        (this_or_next | eq, ":guard_no", 0),
                        (eq, ":guard_no", 2),
                        (
                            faction_get_slot,
                            ":troop_of_guard",
                            ":town_faction",
                            slot_faction_tier_2_troop,
                        ),
                      (else_try),
                        (
                            faction_get_slot,
                            ":troop_of_guard",
                            ":town_faction",
                            slot_faction_tier_2_troop,
                        ),
                      (try_end),
                      (assign, ":last_nearest_entry_point", ":nearest_entry_point"),
                      (assign, ":last_nearest_entry_distance", ":smallest_dist"),
                      (
                          add_visitors_to_current_scene,
                          ":nearest_entry_point",
                          ":troop_of_guard",
                          1,
                          0,
                      ),
                    (try_end),
                ],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [],
                [(question_box, "str_do_you_wish_to_surrender")],
            ),
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (jump_to_menu, "mnu_captivity_start_castle_defeat"),
                    (finish_mission, 0),
                ],
            ),
            (
                1,
                0,
                ti_once,
                [],
                [
                    (play_sound, "snd_sneak_town_halt"),
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_fight,
                    ),
                ],
            ),
            (
                0,
                3,
                0,
                [
                    (main_hero_fallen, 0),
                ],
                [
                    (jump_to_menu, "mnu_captivity_start_castle_defeat"),
                    (finish_mission, 0),
                ],
            ),
            (
                1,
                0,
                0,
                [],
                [
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_position, pos0, ":player_agent"),
                    (try_for_agents, ":agent_no"),
                      (neq, ":agent_no", ":player_agent"),
                      (agent_is_alive, ":agent_no"),
                      (agent_get_team, ":agent_team", ":agent_no"),
                      (eq, ":agent_team", 1),
                      (agent_get_position, pos1, ":agent_no"),
                      (get_distance_between_positions, ":dist", pos0, pos1),
                      (try_begin),
                        (le, ":dist", 800),
                        (agent_clear_scripted_mode, ":agent_no"),
                      (else_try),
                        (agent_set_scripted_destination, ":agent_no", pos0, 0),
                      (try_end),
                    (try_end),
                ],
            ),
            (
                5,
                1,
                ti_once,
                [
                    (num_active_teams_le, 1),
                    (neg | main_hero_fallen),
                    (store_mission_timer_a, ":cur_time"),
                    (ge, ":cur_time", 5),
                ],
                [
                    (assign, "$auto_menu", -1),
                    (jump_to_menu, "mnu_sneak_into_town_caught_dispersed_guards"),
                    (finish_mission, 1),
                ],
            ),
            (
                ti_on_leave_area,
                0,
                ti_once,
                [],
                [
                    (assign, "$auto_menu", -1),
                    (jump_to_menu, "mnu_sneak_into_town_caught_ran_away"),
                    (finish_mission, 0),
                ],
            ),
            (
                ti_inventory_key_pressed,
                0,
                0,
                [(display_message, "str_cant_use_inventory_arena")],
                [],
            ),
        ],
    ),
    (
        "ai_training",
        0,
        -1,
        "You start training.",
        [
            (0, 0, 0, aif_start_alarmed, 30, []),
        ],
        [
            (ti_tab_pressed, 0, 0, [], [(finish_mission, 0)]),
            common_battle_order_panel,
            common_battle_order_panel_tick,
        ],
    ),
    (
        "arena_melee_fight",
        mtf_arena_fight,
        -1,
        "You enter a melee fight in the arena.",
        [
            (
                0,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_horse,
                    itm.arena_tunic_red,
                    itm.red_tourney_helmet,
                ],
            ),
            (
                1,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword, itm.arena_tunic_red],
            ),
            (
                2,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.heavy_practice_sword,
                    itm.practice_horse,
                    itm.arena_tunic_red,
                    itm.red_tourney_helmet,
                ],
            ),
            (
                3,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_red,
                    itm.red_tourney_helmet,
                ],
            ),
            (
                4,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_dagger,
                    itm.arena_tunic_red,
                ],
            ),
            (
                5,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_sword, itm.practice_shield, itm.arena_tunic_red],
            ),
            (
                6,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword, itm.practice_horse, itm.arena_tunic_red],
            ),
            (
                7,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_red,
                    itm.red_tourney_helmet,
                ],
            ),
            (
                8,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_dagger,
                    itm.arena_tunic_blue,
                ],
            ),
            (
                9,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_blue,
                    itm.blue_tourney_helmet,
                ],
            ),
            (
                10,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword, itm.arena_tunic_blue],
            ),
            (
                11,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_sword,
                    itm.practice_shield,
                    itm.arena_tunic_blue,
                    itm.blue_tourney_helmet,
                ],
            ),
            (
                12,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_horse,
                    itm.arena_tunic_blue,
                ],
            ),
            (
                13,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_blue,
                    itm.blue_tourney_helmet,
                ],
            ),
            (
                14,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword, itm.arena_tunic_blue],
            ),
            (
                15,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_sword, itm.practice_shield, itm.arena_tunic_blue],
            ),
            (
                16,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_horse,
                    itm.arena_tunic_green,
                    itm.green_tourney_helmet,
                ],
            ),
            (
                17,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.heavy_practice_sword,
                    itm.arena_tunic_green,
                    itm.green_tourney_helmet,
                ],
            ),
            (
                18,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.heavy_practice_sword,
                    itm.practice_horse,
                    itm.arena_tunic_green,
                    itm.green_tourney_helmet,
                ],
            ),
            (
                19,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_green,
                    itm.green_tourney_helmet,
                ],
            ),
            (
                20,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_dagger,
                    itm.arena_tunic_green,
                    itm.green_tourney_helmet,
                ],
            ),
            (
                21,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_sword, itm.practice_shield, itm.arena_tunic_green],
            ),
            (
                22,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword, itm.practice_horse, itm.arena_tunic_green],
            ),
            (
                23,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_green,
                    itm.green_tourney_helmet,
                ],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                25,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.heavy_practice_sword,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                26,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.heavy_practice_sword,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                27,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                28,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_dagger,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                29,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_sword, itm.practice_shield, itm.arena_tunic_yellow],
            ),
            (
                30,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword, itm.practice_horse, itm.arena_tunic_yellow],
            ),
            (
                31,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            # 32
            (
                32,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword],
            ),
            (
                33,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_staff],
            ),
            (
                34,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_sword, itm.practice_shield],
            ),
            (
                35,
                mtef_visitor_source | mtef_team_4,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_staff],
            ),
            (
                36,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_bow, itm.practice_arrows, itm.practice_dagger],
            ),
            (
                37,
                mtef_visitor_source | mtef_team_2,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_sword, itm.practice_shield],
            ),
            (
                38,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword],
            ),
            (
                39,
                mtef_visitor_source | mtef_team_4,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_staff],
            ),
            # 40-49 not used yet
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.heavy_practice_sword,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.heavy_practice_sword,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_dagger,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.practice_sword, itm.practice_shield, itm.arena_tunic_yellow],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.heavy_practice_sword, itm.practice_horse, itm.arena_tunic_yellow],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_lance,
                    itm.practice_shield,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_3,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_bow,
                    itm.practice_arrows,
                    itm.practice_horse,
                    itm.arena_tunic_yellow,
                    itm.gold_tourney_helmet,
                ],
            ),
            (
                50,
                mtef_scene_source,
                af_override_horse | af_override_weapons | af_override_head,
                0,
                1,
                [],
            ),
            (
                51,
                mtef_visitor_source,
                af_override_horse | af_override_weapons | af_override_head,
                0,
                1,
                [],
            ),
            (52, mtef_scene_source, af_override_horse, 0, 1, []),
            # not used yet:
            (53, mtef_scene_source, af_override_horse, 0, 1, []),
            (54, mtef_scene_source, af_override_horse, 0, 1, []),
            (55, mtef_scene_source, af_override_horse, 0, 1, []),
            # used for torunament master scene
            (
                56,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_sword,
                    itm.practice_shield,
                    itm.padded_cloth,
                    itm.segmented_helmet,
                ],
            ),
            (
                57,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [
                    itm.practice_sword,
                    itm.practice_shield,
                    itm.padded_cloth,
                    itm.segmented_helmet,
                ],
            ),
        ],
        tournament_triggers,
    ),
    (
        "duel_with_lord",
        mtf_arena_fight | mtf_commit_casualties,
        -1,
        "You enter a melee fight in the arena.",
        [
            (
                0,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.sword_medieval_a, itm.arena_tunic_blue],
            ),
            (
                16,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [itm.sword_medieval_a, itm.arena_tunic_blue],
            ),
        ],
        [
            common_inventory_not_available,
            (ti_tab_pressed, 0, 0, [(display_message, "str_cannot_leave_now")], []),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_arena,
                    ),
                ],
            ),
            (
                1,
                4,
                ti_once,
                [(this_or_next | main_hero_fallen), (num_active_teams_le, 1)],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (check_quest_active, "qst_duel_for_lady"),
                      (
                          quest_slot_eq,
                          "qst_duel_for_lady",
                          slot_quest_target_troop,
                          "$g_duel_troop",
                      ),
                      (call_script, "script_fail_quest", "qst_duel_for_lady"),
                    (else_try),
                      (check_quest_active, "qst_duel_for_lady"),
                      (
                          quest_slot_eq,
                          "qst_duel_for_lady",
                          slot_quest_target_troop,
                          "$g_duel_troop",
                      ),
                      (call_script, "script_succeed_quest", "qst_duel_for_lady"),
                    (else_try),
                      (main_hero_fallen),
                      (check_quest_active, "qst_duel_courtship_rival"),
                      (
                          quest_slot_eq,
                          "qst_duel_courtship_rival",
                          slot_quest_target_troop,
                          "$g_duel_troop",
                      ),
                      (call_script, "script_fail_quest", "qst_duel_courtship_rival"),
                    (else_try),
                      (check_quest_active, "qst_duel_courtship_rival"),
                      (
                          quest_slot_eq,
                          "qst_duel_courtship_rival",
                          slot_quest_target_troop,
                          "$g_duel_troop",
                      ),
                      (call_script, "script_succeed_quest", "qst_duel_courtship_rival"),
                    (else_try),
                      (main_hero_fallen),
                      (check_quest_active, "qst_duel_avenge_insult"),
                      (
                          quest_slot_eq,
                          "qst_duel_avenge_insult",
                          slot_quest_target_troop,
                          "$g_duel_troop",
                      ),
                      (call_script, "script_fail_quest", "qst_duel_avenge_insult"),
                    (else_try),
                      (check_quest_active, "qst_duel_avenge_insult"),
                      (
                          quest_slot_eq,
                          "qst_duel_avenge_insult",
                          slot_quest_target_troop,
                          "$g_duel_troop",
                      ),
                      (call_script, "script_succeed_quest", "qst_duel_avenge_insult"),
                    (else_try),
                      (main_hero_fallen),
                      (check_quest_active, "qst_denounce_lord"),
                      (
                          quest_slot_eq,
                          "qst_denounce_lord",
                          slot_quest_target_troop,
                          "$g_duel_troop",
                      ),
                      (call_script, "script_fail_quest", "qst_denounce_lord"),
                    (else_try),
                      (check_quest_active, "qst_denounce_lord"),
                      (
                          quest_slot_eq,
                          "qst_denounce_lord",
                          slot_quest_target_troop,
                          "$g_duel_troop",
                      ),
                      (call_script, "script_succeed_quest", "qst_denounce_lord"),
                    (else_try),
                      (
                          quest_get_slot,
                          ":target_troop",
                          "qst_denounce_lord",
                          slot_quest_target_troop,
                      ),
                      (str_store_troop_name, s4, ":target_troop"),
                    (try_end),
                    (finish_mission),
                ],
            ),
        ],
    ),
    (
        "cellar_fistfight",
        mtf_arena_fight,
        -1,
        "You enter a fistfight in the tavern cellar.",
        [
            (
                0,
                mtef_visitor_source | mtef_team_0,
                af_override_all,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                1,
                mtef_visitor_source | mtef_team_1,
                af_override_all,
                aif_start_alarmed,
                1,
                [],
            ),
            (2, mtef_visitor_source, af_override_horse, 0, 1, []),
            (3, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (4, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (5, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (6, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (7, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (8, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (9, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (10, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (11, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (12, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (13, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (14, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
            (15, mtef_visitor_source, af_override_horse | af_override_head, 0, 1, []),
        ],
        [
            common_inventory_not_available,
            (ti_tab_pressed, 0, 0, [(display_message, "str_cannot_leave_now")], []),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_arena,
                    ),
                    (assign, "$spectators", 0),
                    (set_fixed_point_multiplier, 100),
                    (try_for_agents, ":agent"),
                      (agent_get_entry_no, ":entry", ":agent"),
                      (gt, ":entry", 2),
                      (val_add, "$spectators", 1),
                      (call_script, "script_rand", 0, 100),
                      (
                          agent_set_animation_progress,
                          ":agent",
                          reg0,
                      ),  # Desync their standing animation!
                    (try_end),
                ],
            ),
            (
                ti_on_agent_hit,
                0,
                0,
                [
                    (store_trigger_param_1, ":target_agent"),
                    (store_trigger_param_2, ":attacker_agent"),
                    (store_trigger_param_3, ":damage"),
                    (get_player_agent_no, ":player_agent"),
                    (gt, ":damage", 0),  # Only score solid hits
                    (assign, ":kick", 0),
                    (lt, "$fistfight_points_player", 5),
                    (
                        lt,
                        "$fistfight_points_opponent",
                        5,
                    ),  # Don't show or count score when the match is already won
                    (try_begin),
                      (eq, ":player_agent", ":attacker_agent"),
                      (agent_get_animation, ":cur_anim", ":player_agent", 0),
                      (this_or_next | eq, ":cur_anim", "anim_kick_right_leg"),
                      (
                          eq,
                          ":cur_anim",
                          "anim_kick_left_leg",
                      ),  # Check for kicks; they earn you a warning, then disqualification.
                      (assign, ":kick", 1),
                    (else_try),
                      (eq, ":player_agent", ":attacker_agent"),
                      (val_add, "$fistfight_points_player", 1),
                      (str_store_string, s1, "@You scored a point."),
                      (val_add, "$fistfight_bets", "$fistfight_points_opponent"),
                      (val_sub, "$fistfight_bets", "$fistfight_points_player"),
                      (store_attribute_level, ":strength", "trp_player", ca_strength),
                      (
                          store_skill_level,
                          ":power_strike",
                          "skl_power_strike",
                          "trp_player",
                      ),
                    (else_try),
                      (eq, ":player_agent", ":target_agent"),
                      (val_add, "$fistfight_points_opponent", 1),
                      (str_store_string, s1, "@Your opponent scored a point."),
                      (val_add, "$fistfight_bets", "$fistfight_points_opponent"),
                      (val_sub, "$fistfight_bets", "$fistfight_points_player"),
                      (
                          store_attribute_level,
                          ":strength",
                          "$fistfight_opponent",
                          ca_strength,
                      ),
                      (
                          store_skill_level,
                          ":power_strike",
                          "skl_power_strike",
                          "$fistfight_opponent",
                      ),
                    (try_end),
                    (try_begin),
                      (eq, ":kick", 1),
                      (
                          assign,
                          ":damage",
                          0,
                      ),  # Kicking while blocking is a bit of an exploit; this at least prevents kicks from dealing damage.
                      (call_script, "script_rand", 0, "$spectators"),
                      (try_for_agents, ":agent"),
                        (agent_get_entry_no, ":entry", ":agent"),
                        (gt, ":entry", 2),
                        (val_sub, reg0, 1),
                        (eq, reg0, -1),
                        (agent_set_animation, ":agent", "anim_cheer"),
                        (agent_play_sound, ":agent", "snd_man_yell"),  # Boo!
                      (try_end),
                      (val_add, "$fistfight_warnings", 1),
                      (start_mission_conversation, "trp_fight_promoter"),
                    (else_try),
                      (assign, reg1, "$fistfight_points_player"),
                      (assign, reg2, "$fistfight_points_opponent"),
                      (display_message, "@{s1} Current Score is {reg1} : {reg2}"),
                      (call_script, "script_rand", 0, "$spectators"),
                      (try_for_agents, ":agent"),
                        (agent_get_entry_no, ":entry", ":agent"),
                        (gt, ":entry", 2),
                        (val_sub, reg0, 1),
                        (eq, reg0, -1),
                        (agent_set_animation, ":agent", "anim_cheer"),
                        (agent_play_sound, ":agent", "snd_man_victory"),
                      (try_end),
                      (val_add, ":power_strike", 12),
                      (store_mul, ":max_damage", ":strength", 100),
                      (val_mul, ":max_damage", ":power_strike"),
                      (val_div, ":max_damage", 12),  # 13/12 is about the same as 108%
                      (call_script, "script_rand", 0, ":max_damage"),
                      (assign, ":damage", reg0),
                      (call_script, "script_rand", 0, ":max_damage"),
                      (val_add, ":damage", reg0),
                      (call_script, "script_rand", 0, 100),  # Randomized rounding
                      (val_add, ":damage", reg0),
                      (val_div, ":damage", 100),
                    (try_end),
                    (set_trigger_result, ":damage"),
                ],
                [],
            ),
            (
                ti_on_leave_area,
                0,
                0,
                [
                    (assign, "$fistfight_result", -2),
                    (assign, "$fistfight_bets", 0),
                    (assign, "$fistfight_opponent", 0),
                    (finish_mission),
                ],
                [],
            ),
            (
                1,
                0,
                ti_once,
                [
                    (this_or_next | main_hero_fallen),
                    (this_or_next | all_enemies_defeated, 1),
                    (this_or_next | ge, "$fistfight_points_player", 5),
                    (ge, "$fistfight_points_opponent", 5),
                ],
                [
                    (try_for_agents, ":agent"),
                      (agent_get_entry_no, ":entry", ":agent"),
                      (gt, ":entry", 2),
                      (agent_set_animation, ":agent", "anim_cheer"),
                      (agent_play_sound, ":agent", "snd_man_victory"),
                    (try_end),
                ],
            ),
            (
                1,
                4,
                ti_once,
                [
                    (this_or_next | main_hero_fallen),
                    (this_or_next | all_enemies_defeated, 1),
                    (this_or_next | ge, "$fistfight_points_player", 5),
                    (ge, "$fistfight_points_opponent", 5),
                    (eq, "$fistfight_result", 0),
                ],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (assign, "$fistfight_result", -1),
                      (display_message, "@You lost by knockout!"),
                    (else_try),
                      (all_enemies_defeated, 1),
                      (assign, "$fistfight_result", 1),
                      (display_message, "@You won by knockout!"),
                      (try_begin),
                        (gt, "$fistfight_points_opponent", "$fistfight_points_player"),
                        (val_mul, "$fistfight_bets", "$fistfight_points_opponent"),
                        (val_div, "$fistfight_bets", "$fistfight_points_player"),
                      (try_end),
                    (else_try),
                      (ge, "$fistfight_points_player", 5),
                      (assign, "$fistfight_result", 1),
                      (display_message, "@You won by points!"),
                    (else_try),
                      (ge, "$fistfight_points_opponent", 5),
                      (assign, "$fistfight_result", -1),
                      (display_message, "@You lost by points!"),
                    (try_end),
                    (
                        store_attribute_level,
                        ":player_strength",
                        "trp_player",
                        ca_strength,
                    ),
                    (
                        store_attribute_level,
                        ":opponent_strength",
                        "$fistfight_opponent",
                        ca_strength,
                    ),
                    (val_add, "$fistfight_bets", ":opponent_strength"),
                    (val_sub, "$fistfight_bets", ":player_strength"),
                    (val_mul, "$fistfight_bets", 2),
                    (call_script, "script_rand", -10, 10),
                    (val_add, "$fistfight_bets", reg0),
                    (assign, "$fistfight_opponent", 0),
                    (assign, "$fistfight_warnings", 0),
                    (finish_mission),
                ],
            ),
        ],
    ),
    (
        "wedding",
        0,
        -1,
        "Wedding",
        [
            (
                0,
                mtef_visitor_source,
                af_override_everything,
                0,
                1,
                [itm.tabard, itm.ankle_boots],
            ),
            (
                1,
                mtef_visitor_source,
                af_override_everything,
                0,
                1,
                [itm.bride_dress, itm.bride_crown, itm.bride_shoes],
            ),
            (2, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (
                3,
                mtef_visitor_source,
                af_override_everything,
                0,
                1,
                [itm.courtly_outfit, itm.blue_hose],
            ),
            (4, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (5, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (6, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (7, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (8, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (9, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (10, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (11, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (12, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (13, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (14, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (15, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (16, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (17, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (18, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (19, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (20, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (21, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (22, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (23, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (24, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (25, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (26, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (27, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (28, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (29, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (30, mtef_visitor_source, af_castle_lord, 0, 1, []),
            (31, mtef_visitor_source, af_castle_lord, 0, 1, []),
        ],
        [
            (
                ti_tab_pressed,
                0,
                0,
                [],
                [
                    (show_object_details_overlay, 1),
                    (finish_mission, 0),
                ],
            ),
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (show_object_details_overlay, 1),
                    (finish_mission, 0),
                ],
            ),
            (
                ti_after_mission_start,
                0,
                0,
                [],
                [
                    (assign, "$g_wedding_state", 0),
                    (play_track, "track_wedding", 2),
                    (show_object_details_overlay, 0),
                ],
            ),
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (agent_get_troop_id, ":troop_no", ":agent_no"),
                    (troop_get_type, ":gender", ":troop_no"),
                    (set_fixed_point_multiplier, 100),
                    (try_begin),
                      (eq, ":troop_no", "$g_wedding_bishop_troop"),
                    (else_try),
                      (eq, ":troop_no", "$g_wedding_bride_troop"),
                      (agent_set_no_dynamics, ":agent_no", 1),
                      (init_position, pos1),
                      (position_set_z, pos1, -1000),
                      (agent_set_position, ":agent_no", pos1),
                    (else_try),
                      (eq, ":troop_no", "$g_wedding_brides_dad_troop"),
                      (agent_set_no_dynamics, ":agent_no", 1),
                      (init_position, pos1),
                      (position_set_z, pos1, -1000),
                      (agent_set_position, ":agent_no", pos1),
                    (else_try),
                      (eq, ":troop_no", "$g_wedding_groom_troop"),
                      (agent_set_no_dynamics, ":agent_no", 1),
                      (init_position, pos1),
                      (position_move_x, pos1, 175),
                      (position_move_z, pos1, 10),
                      (position_rotate_z, pos1, 180),
                      (agent_set_position, ":agent_no", pos1),
                      (agent_set_animation, ":agent_no", "anim_wedding_groom_wait"),
                    (else_try),
                      (try_begin),
                        (eq, ":gender", 0),  # male
                        (store_random_in_range, ":random_no", 0, 3),
                        (try_begin),
                          (eq, ":random_no", 0),
                          (
                              agent_set_slot,
                              ":agent_no",
                              slot_agent_cur_animation,
                              "anim_wedding_guest_notr",
                          ),
                          (agent_set_animation, ":agent_no", "anim_wedding_guest_notr"),
                        (else_try),
                          (
                              agent_set_slot,
                              ":agent_no",
                              slot_agent_cur_animation,
                              "anim_wedding_guest",
                          ),
                          (agent_set_animation, ":agent_no", "anim_wedding_guest"),
                        (try_end),
                      (else_try),  # female
                        (
                            agent_set_slot,
                            ":agent_no",
                            slot_agent_cur_animation,
                            "anim_wedding_guest_woman",
                        ),
                        (agent_set_animation, ":agent_no", "anim_wedding_guest_woman"),
                      (try_end),
                      (store_random_in_range, ":progress", 0, 100),
                      (agent_set_animation_progress, ":agent_no", ":progress"),
                    (try_end),
                ],
            ),
            (
                0,
                0,
                0,
                [
                    (store_mission_timer_a, ":cur_time"),
                    (set_fixed_point_multiplier, 100),
                    (try_for_agents, ":agent_no"),
                      (agent_get_troop_id, ":troop_no", ":agent_no"),
                      (try_begin),
                        (eq, ":troop_no", "$g_wedding_groom_troop"),
                      (else_try),
                        (eq, ":troop_no", "$g_wedding_bride_troop"),
                      (else_try),
                        (eq, ":troop_no", "$g_wedding_brides_dad_troop"),
                      (else_try),
                        (eq, ":troop_no", "$g_wedding_bishop_troop"),
                      (else_try),
                        (
                            agent_get_slot,
                            ":cur_animation",
                            ":agent_no",
                            slot_agent_cur_animation,
                        ),
                        (agent_set_animation, ":agent_no", ":cur_animation"),
                      (try_end),
                    (try_end),
                    (try_begin),
                      (eq, "$g_wedding_state", 0),
                      (mission_cam_set_mode, 1, 0, 0),
                      (init_position, pos1),
                      (position_rotate_z, pos1, 180),
                      (position_rotate_x, pos1, 5),
                      (position_set_x, pos1, -500),
                      (position_set_y, pos1, 1000),
                      (position_set_z, pos1, 600),
                      (mission_cam_set_position, pos1),
                      (init_position, pos1),
                      (position_rotate_z, pos1, 180),
                      (position_rotate_x, pos1, -15),
                      (position_set_x, pos1, -500),
                      (position_set_y, pos1, 1000),
                      (position_set_z, pos1, 600),
                      (mission_cam_animate_to_position, pos1, 4000, 0),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 1),
                      (ge, ":cur_time", 4),
                      (init_position, pos1),
                      (position_rotate_z, pos1, 90),
                      (position_rotate_x, pos1, -10),
                      (position_set_x, pos1, -580),
                      (position_set_y, pos1, 700),
                      (position_set_z, pos1, 200),
                      (mission_cam_set_position, pos1),
                      (init_position, pos1),
                      (position_rotate_z, pos1, 150),
                      (position_rotate_x, pos1, -10),
                      (position_set_x, pos1, -580),
                      (position_set_y, pos1, 100),
                      (position_set_z, pos1, 200),
                      (mission_cam_animate_to_position, pos1, 6000, 1),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 2),
                      (ge, ":cur_time", 9),
                      (mission_cam_animate_to_screen_color, 0xFF000000, 1000),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 3),
                      (ge, ":cur_time", 10),
                      (init_position, pos1),
                      (position_move_x, pos1, 175),
                      (position_move_z, pos1, 10),
                      (position_rotate_z, pos1, 180),
                      (try_for_agents, ":agent_no"),
                        (agent_get_troop_id, ":agent_troop", ":agent_no"),
                        (try_begin),
                          (eq, ":agent_troop", "$g_wedding_bride_troop"),
                          (agent_set_position, ":agent_no", pos1),
                          (agent_set_animation, ":agent_no", "anim_wedding_bride_stairs"),
                        (else_try),
                          (eq, ":agent_troop", "$g_wedding_brides_dad_troop"),
                          (agent_set_position, ":agent_no", pos1),
                          (agent_set_animation, ":agent_no", "anim_wedding_dad_stairs"),
                        (try_end),
                      (try_end),
                      (init_position, pos1),
                      (position_rotate_z, pos1, -90),
                      (position_set_x, pos1, 300),
                      (position_set_y, pos1, 950),
                      (position_set_z, pos1, 420),
                      (mission_cam_set_position, pos1),
                      (position_set_x, pos1, 175),
                      (position_set_y, pos1, 950),
                      (position_set_z, pos1, 320),
                      (mission_cam_animate_to_position, pos1, 4000, 0),
                      (mission_cam_animate_to_screen_color, 0x00000000, 500),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 4),
                      (ge, ":cur_time", 14),
                      (init_position, pos1),
                      (position_rotate_z, pos1, -60),
                      (position_rotate_x, pos1, 10),
                      (position_set_x, pos1, -400),
                      (position_set_y, pos1, 200),
                      (position_set_z, pos1, 115),
                      (mission_cam_set_position, pos1),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 5),
                      (ge, ":cur_time", 20),
                      (init_position, pos1),
                      (position_move_x, pos1, 175),
                      (position_move_z, pos1, 10),
                      (position_rotate_z, pos1, 180),
                      (try_for_agents, ":agent_no"),
                        (agent_get_troop_id, ":agent_troop", ":agent_no"),
                        (try_begin),
                          (eq, ":agent_troop", "$g_wedding_bride_troop"),
                          (agent_set_position, ":agent_no", pos1),
                          (agent_set_animation, ":agent_no", "anim_wedding_bride_walk"),
                        (else_try),
                          (eq, ":agent_troop", "$g_wedding_brides_dad_troop"),
                          (agent_set_position, ":agent_no", pos1),
                          (agent_set_animation, ":agent_no", "anim_wedding_dad_walk"),
                        (try_end),
                      (try_end),
                      (init_position, pos1),
                      (position_rotate_z, pos1, -140),
                      (position_rotate_x, pos1, -15),
                      (position_set_x, pos1, -625),
                      (position_set_y, pos1, -530),
                      (position_set_z, pos1, 180),
                      (mission_cam_set_position, pos1),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 6),
                      (ge, ":cur_time", 22),
                      (init_position, pos1),
                      (position_rotate_z, pos1, 45),
                      (position_rotate_x, pos1, -10),
                      (position_set_x, pos1, -260),
                      (position_set_y, pos1, 120),
                      (position_set_z, pos1, 275),
                      (mission_cam_set_position, pos1),
                      (position_rotate_z, pos1, 10),
                      (mission_cam_animate_to_position, pos1, 2000, 0),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 7),
                      (ge, ":cur_time", 24),
                      (init_position, pos1),
                      (position_move_x, pos1, 175),
                      (position_move_z, pos1, 10),
                      (position_rotate_z, pos1, 180),
                      (try_for_agents, ":agent_no"),
                        (agent_get_troop_id, ":agent_troop", ":agent_no"),
                        (try_begin),
                          (eq, ":agent_troop", "$g_wedding_bride_troop"),
                          (agent_set_position, ":agent_no", pos1),
                          (agent_set_animation, ":agent_no", "anim_wedding_bride_last"),
                        (else_try),
                          (eq, ":agent_troop", "$g_wedding_brides_dad_troop"),
                          (agent_set_position, ":agent_no", pos1),
                          (agent_set_animation, ":agent_no", "anim_wedding_dad_last"),
                        (else_try),
                          (eq, ":agent_troop", "$g_wedding_groom_troop"),
                          (agent_set_position, ":agent_no", pos1),
                          (agent_set_animation, ":agent_no", "anim_wedding_groom_last"),
                        (try_end),
                      (try_end),
                      (init_position, pos1),
                      (position_rotate_z, pos1, -45),
                      (position_rotate_x, pos1, -10),
                      (position_set_x, pos1, -900),
                      (position_set_y, pos1, -850),
                      (position_set_z, pos1, 230),
                      (mission_cam_set_position, pos1),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 8),
                      (ge, ":cur_time", 31),
                      (init_position, pos1),
                      (position_set_x, pos1, -550),
                      (position_set_y, pos1, -625),
                      (position_set_z, pos1, 1500),
                      (particle_system_burst, "psys_wedding_rose", pos1, 750),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 9),
                      (ge, ":cur_time", 33),
                      (init_position, pos1),
                      (position_rotate_z, pos1, 180),
                      (position_set_x, pos1, -536),
                      (position_set_y, pos1, -415),
                      (position_set_z, pos1, 135),
                      (mission_cam_set_position, pos1),
                      (position_rotate_z, pos1, -8),
                      (position_set_z, pos1, 350),
                      (position_rotate_x, pos1, 35),
                      (mission_cam_animate_to_position_and_aperture, pos1, 10, 9000, 1),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 10),
                      (ge, ":cur_time", 41),
                      (mission_cam_set_screen_color, 0x00FFFFFF),
                      (mission_cam_animate_to_screen_color, 0xFFFFFFFF, 3000),
                      (val_add, "$g_wedding_state", 1),
                    (else_try),
                      (eq, "$g_wedding_state", 11),
                      (ge, ":cur_time", 48),
                      (show_object_details_overlay, 1),
                      (finish_mission, 0),
                    (try_end),
                ],
                [],
            ),
        ],
    ),
    (
        "tutorial_training_ground",
        mtf_arena_fight,
        -1,
        "You enter the training ground.",
        [
            (0, mtef_visitor_source | mtef_team_0, 0, 0, 1, []),
            (1, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (2, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (3, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (4, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (5, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (6, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (7, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (8, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (9, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (10, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (11, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (12, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (13, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (14, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (15, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (16, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (17, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (18, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (19, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (20, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (21, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (22, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (23, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (24, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (25, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (26, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (27, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (28, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (29, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (30, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (31, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (
                32,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_sword],
            ),
            (
                33,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_sword],
            ),
            (
                34,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_sword],
            ),
            (
                35,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_sword],
            ),
            (36, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (37, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (38, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (39, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (40, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (
                41,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_bow, itm.practice_arrows],
            ),
            (
                42,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_bow, itm.practice_arrows],
            ),
            (43, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (44, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (45, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (46, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (47, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (48, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (49, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (50, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (51, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (52, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (53, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (54, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (55, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (56, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (57, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (58, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (59, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (60, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (
                61,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_sword],
            ),
            (
                62,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_sword],
            ),
            (
                63,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_bow, itm.practice_arrows],
            ),
            (
                64,
                mtef_visitor_source | mtef_team_0,
                af_override_weapons,
                aif_start_alarmed,
                1,
                [itm.practice_bow, itm.practice_arrows],
            ),
        ],
        [
            (
                ti_tab_pressed,
                0,
                0,
                [],
                [
                    (try_begin),
                      (lt, "$g_tutorial_training_ground_state", 20),
                      (question_box, "str_do_you_wish_to_leave_tutorial"),
                    (else_try),
                      (finish_mission, 0),
                    (try_end),
                ],
            ),
            (
                ti_question_answered,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":answer"),
                    (eq, ":answer", 0),
                    (finish_mission, 0),
                ],
            ),
            (
                ti_inventory_key_pressed,
                0,
                0,
                [(display_message, "str_cant_use_inventory_tutorial")],
                [],
            ),
            (
                ti_battle_window_opened,
                0,
                0,
                [],
                [
                    (start_presentation, "prsnt_tutorial_show_mouse_movement"),
                ],
            ),
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (agent_ai_set_always_attack_in_melee, ":agent_no", 1),
                    (agent_set_no_death_knock_down_only, ":agent_no", 1),
                    (agent_set_invulnerable_shield, ":agent_no", 1),
                    (agent_get_position, pos1, ":agent_no"),
                    (agent_set_slot, ":agent_no", slot_agent_spawn_entry_point, -1),
                    (get_player_agent_no, ":player_agent"),
                    (try_begin),
                      (eq, ":agent_no", ":player_agent"),
                      (agent_set_team, ":agent_no", 7),
                    (try_end),
                    (try_for_range, ":cur_entry_point", 0, 64),
                      (entry_point_get_position, pos2, ":cur_entry_point"),
                      (get_sq_distance_between_positions, ":dist", pos1, pos2),
                      (lt, ":dist", 100),  # 10 cm
                      (
                          agent_set_slot,
                          ":agent_no",
                          slot_agent_spawn_entry_point,
                          ":cur_entry_point",
                      ),
                    (try_end),
                    (agent_get_troop_id, ":cur_agent_troop", ":agent_no"),
                    (try_begin),
                      (eq, ":cur_agent_troop", "trp_tutorial_archer_1"),
                      (agent_get_position, pos1, ":agent_no"),
                      (agent_set_scripted_destination, ":agent_no", pos1),
                      (
                          scene_prop_get_num_instances,
                          ":num_instances",
                          "spr_archery_target_with_hit_a",
                      ),
                      (assign, ":shortest_dist", 10000000),
                      (assign, ":best_instance", -1),
                      (try_for_range, ":cur_instance", 0, ":num_instances"),
                        (
                            scene_prop_get_instance,
                            ":spr_instance",
                            "spr_archery_target_with_hit_a",
                            ":cur_instance",
                        ),
                        (prop_instance_get_position, pos2, ":spr_instance"),
                        (get_sq_distance_between_positions, ":cur_dist", pos1, pos2),
                        (lt, ":cur_dist", ":shortest_dist"),
                        (assign, ":shortest_dist", ":cur_dist"),
                        (assign, ":best_instance", ":spr_instance"),
                      (try_end),
                      (
                          agent_set_slot,
                          ":agent_no",
                          slot_agent_target_prop_instance,
                          ":best_instance",
                      ),
                    (else_try),
                      (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_rider_1"),
                      (eq, ":cur_agent_troop", "trp_tutorial_rider_2"),
                      (agent_set_slot, ":agent_no", slot_agent_target_entry_point, 48),
                      (agent_set_slot, ":agent_no", slot_agent_target_prop_instance, -1),
                      (entry_point_get_position, pos1, 48),
                      (agent_set_scripted_destination, ":agent_no", pos1),
                    (try_end),
                ],
            ),
            (
                ti_on_agent_knocked_down,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (store_trigger_param_2, ":enemy_agent_no"),
                    (agent_get_troop_id, ":agent_troop", ":agent_no"),
                    (agent_get_troop_id, ":enemy_agent_troop", ":enemy_agent_no"),
                    (try_begin),
                      (ge, "$g_tutorial_training_ground_melee_trainer_attack", 0),
                      # do nothing
                    (else_try),
                      (ge, "$g_tutorial_training_ground_melee_trainer_parry", 0),
                      (try_begin),
                        (eq, ":agent_troop", "trp_player"),
                        (
                            eq,
                            ":enemy_agent_troop",
                            "$g_tutorial_training_ground_melee_trainer_parry",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_state", 0),
                        (agent_set_team, ":agent_no", 0),
                        (agent_set_team, ":enemy_agent_no", 7),
                        (tutorial_message, -1),
                        (assign, "$g_tutorial_mouse_dir", -1),
                        (assign, "$g_tutorial_mouse_click", -1),
                        (
                            assign,
                            "$g_tutorial_training_ground_conversation_state",
                            2,
                        ),  # player knocked down in parry
                        (play_sound, "snd_tutorial_fail"),
                        (
                            start_mission_conversation,
                            "$g_tutorial_training_ground_melee_trainer_parry",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_trainer_parry", -1),
                        (try_begin),
                          (
                              eq,
                              "$g_tutorial_training_ground_melee_trainer_action_state",
                              1,
                          ),  # still in attack ready action
                          (agent_set_attack_action, ":agent_no", 0, 0),  # release
                        (try_end),
                      (else_try),
                        (eq, ":enemy_agent_troop", "trp_player"),
                        (
                            eq,
                            ":agent_troop",
                            "$g_tutorial_training_ground_melee_trainer_parry",
                        ),
                        (agent_set_team, ":agent_no", 7),
                        (agent_set_team, ":enemy_agent_no", 0),
                        (tutorial_message, -1),
                        (assign, "$g_tutorial_mouse_dir", -1),
                        (assign, "$g_tutorial_mouse_click", -1),
                        (
                            assign,
                            "$g_tutorial_training_ground_conversation_state",
                            3,
                        ),  # trainer knocked down in parry
                        (play_sound, "snd_tutorial_fail"),
                        (
                            start_mission_conversation,
                            "$g_tutorial_training_ground_melee_trainer_parry",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_trainer_parry", -1),
                        (try_begin),
                          (
                              eq,
                              "$g_tutorial_training_ground_melee_trainer_action_state",
                              1,
                          ),  # still in attack ready action
                          (agent_set_attack_action, ":agent_no", 0, 0),  # release
                        (try_end),
                      (try_end),
                    (else_try),
                      (ge, "$g_tutorial_training_ground_melee_trainer_chamber", 0),
                      (try_begin),
                        (eq, ":agent_troop", "trp_player"),
                        (
                            eq,
                            ":enemy_agent_troop",
                            "$g_tutorial_training_ground_melee_trainer_chamber",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_state", 0),
                        (agent_set_team, ":agent_no", 0),
                        (agent_set_team, ":enemy_agent_no", 7),
                        (tutorial_message, -1),
                        (assign, "$g_tutorial_mouse_dir", -1),
                        (assign, "$g_tutorial_mouse_click", -1),
                        (
                            assign,
                            "$g_tutorial_training_ground_conversation_state",
                            7,
                        ),  # player knocked down in chamber
                        (play_sound, "snd_tutorial_fail"),
                        (
                            start_mission_conversation,
                            "$g_tutorial_training_ground_melee_trainer_chamber",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_trainer_chamber", -1),
                        (try_begin),
                          (
                              eq,
                              "$g_tutorial_training_ground_melee_trainer_action_state",
                              1,
                          ),  # still in attack ready action
                          (agent_set_attack_action, ":agent_no", 0, 0),  # release
                        (try_end),
                      (else_try),
                        (eq, ":enemy_agent_troop", "trp_player"),
                        (
                            eq,
                            ":agent_troop",
                            "$g_tutorial_training_ground_melee_trainer_chamber",
                        ),
                        (agent_set_team, ":agent_no", 7),
                        (agent_set_team, ":enemy_agent_no", 0),
                        (tutorial_message, -1),
                        (assign, "$g_tutorial_mouse_dir", -1),
                        (assign, "$g_tutorial_mouse_click", -1),
                        (
                            assign,
                            "$g_tutorial_training_ground_conversation_state",
                            8,
                        ),  # trainer knocked down in chamber
                        (play_sound, "snd_tutorial_fail"),
                        (
                            start_mission_conversation,
                            "$g_tutorial_training_ground_melee_trainer_chamber",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_trainer_chamber", -1),
                        (try_begin),
                          (
                              eq,
                              "$g_tutorial_training_ground_melee_trainer_action_state",
                              1,
                          ),  # still in attack ready action
                          (agent_set_attack_action, ":agent_no", 0, 0),  # release
                        (try_end),
                      (try_end),
                    (else_try),
                      (ge, "$g_tutorial_training_ground_melee_trainer_combat", 0),
                      (try_begin),
                        (eq, ":agent_troop", "trp_player"),
                        (
                            eq,
                            ":enemy_agent_troop",
                            "$g_tutorial_training_ground_melee_trainer_combat",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_state", 0),
                        (agent_set_team, ":agent_no", 0),
                        (agent_set_team, ":enemy_agent_no", 7),
                        (tutorial_message, -1),
                        (
                            assign,
                            "$g_tutorial_training_ground_conversation_state",
                            4,
                        ),  # player knocked down in combat
                        (play_sound, "snd_tutorial_fail"),
                        (
                            start_mission_conversation,
                            "$g_tutorial_training_ground_melee_trainer_combat",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_trainer_combat", -1),
                      (else_try),
                        (eq, ":enemy_agent_troop", "trp_player"),
                        (
                            eq,
                            ":agent_troop",
                            "$g_tutorial_training_ground_melee_trainer_combat",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_state", 0),
                        (agent_set_team, ":agent_no", 7),
                        (agent_set_team, ":enemy_agent_no", 0),
                        ##             (assign, "$g_tutorial_training_ground_melee_trainer_combat_completed", 1), #not used
                        (tutorial_message, -1),
                        (
                            assign,
                            "$g_tutorial_training_ground_conversation_state",
                            5,
                        ),  # trainer knocked down in combat
                        (play_sound, "snd_tutorial_2"),
                        (
                            start_mission_conversation,
                            "$g_tutorial_training_ground_melee_trainer_combat",
                        ),
                        (assign, "$g_tutorial_training_ground_melee_trainer_combat", -1),
                      (try_end),
                    (else_try),
                      (agent_is_human, ":agent_no"),
                      (
                          assign,
                          "$g_tutorial_training_ground_melee_last_winner",
                          ":enemy_agent_no",
                      ),
                      (
                          assign,
                          "$g_tutorial_training_ground_melee_last_loser",
                          ":agent_no",
                      ),
                      (assign, "$g_tutorial_training_ground_melee_state", 0),
                      (
                          agent_set_team,
                          "$g_tutorial_training_ground_melee_cur_fighter_1",
                          7,
                      ),
                      (
                          agent_set_team,
                          "$g_tutorial_training_ground_melee_cur_fighter_2",
                          7,
                      ),
                      (
                          agent_force_rethink,
                          "$g_tutorial_training_ground_melee_cur_fighter_1",
                      ),
                      (
                          agent_force_rethink,
                          "$g_tutorial_training_ground_melee_cur_fighter_2",
                      ),
                    (try_end),
                    (agent_set_hit_points, ":agent_no", 100, 0),
                    (agent_set_hit_points, ":enemy_agent_no", 100, 0),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (scene_set_day_time, 13),
                    (team_set_relation, 0, 1, 0),
                    (team_set_relation, 0, 2, 0),
                    (team_set_relation, 0, 3, 0),
                    (team_set_relation, 0, 7, 0),
                    (team_set_relation, 7, 1, 1),
                    (team_set_relation, 7, 2, 1),
                    (team_set_relation, 7, 3, 1),
                    (team_set_relation, 1, 2, -1),
                    (team_set_relation, 1, 3, 1),
                    (team_set_relation, 2, 3, 1),
                    (assign, "$g_position_to_use_for_replacing_scene_items", pos8),
                    (
                        call_script,
                        "script_replace_scene_items_with_spawn_items_before_ms",
                    ),
                    (assign, "$g_tutorial_training_ground_state", 0),
                    (assign, "$g_tutorial_training_ground_conversation_state", 0),
                    (assign, "$g_tutorial_training_ground_melee_paused", 0),
                    (assign, "$g_tutorial_training_ground_melee_state", 0),
                    (assign, "$g_tutorial_training_ground_melee_next_action_time", 0),
                    (assign, "$g_tutorial_training_ground_melee_last_winner", -1),
                    (assign, "$g_tutorial_training_ground_melee_last_loser", -1),
                    (assign, "$g_tutorial_training_ground_melee_cur_fighter_1", -1),
                    (assign, "$g_tutorial_training_ground_melee_cur_fighter_2", -1),
                    (assign, "$g_tutorial_training_ground_melee_trainer_attack", -1),
                    (assign, "$g_tutorial_training_ground_melee_trainer_parry", -1),
                    (assign, "$g_tutorial_training_ground_melee_trainer_combat", -1),
                    (assign, "$g_tutorial_training_ground_melee_trainer_chamber", -1),
                    ##         (assign, "$g_tutorial_training_ground_melee_trainer_attack_completed", 0), #not used
                    ##         (assign, "$g_tutorial_training_ground_melee_trainer_parry_completed", 0), #not used
                    ##         (assign, "$g_tutorial_training_ground_melee_trainer_combat_completed", 0), #not used
                    ##         (assign, "$g_tutorial_training_ground_melee_trainer_chamber_completed", 0), #not used
                    (
                        assign,
                        "$g_tutorial_training_ground_melee_trainer_next_action_time",
                        0,
                    ),
                    (assign, "$g_tutorial_training_ground_archer_trainer_state", 0),
                    (
                        assign,
                        "$g_tutorial_training_ground_archer_trainer_completed_chapters",
                        0,
                    ),
                    (assign, "$g_tutorial_training_ground_horseman_trainer_state", 0),
                    (
                        assign,
                        "$g_tutorial_training_ground_horseman_trainer_completed_chapters",
                        0,
                    ),
                    (assign, "$g_tutorial_training_ground_next_score_time", 0),
                    (assign, "$g_tutorial_mouse_dir", -1),
                    (assign, "$g_tutorial_mouse_click", -1),
                    (assign, "$g_pointer_arrow_height_adder", -1000),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (tutorial_message_set_size, 17, 17),
                    (tutorial_message_set_position, 500, 650),
                    (tutorial_message_set_center_justify, 0),
                    (mission_enable_talk),
                    (
                        call_script,
                        "script_replace_scene_items_with_spawn_items_after_ms",
                    ),
                    (entry_point_get_position, pos1, 59),
                    (set_spawn_position, pos1),
                    (spawn_horse, "itm_practice_horse", 0),
                    (
                        assign,
                        "$g_tutorial_training_ground_intro_message_being_displayed",
                        1,
                    ),
                    (
                        scene_spawned_item_get_instance,
                        ":item_instance",
                        "itm_practice_bow",
                        0,
                    ),
                    (prop_instance_get_position, pos0, ":item_instance"),
                    (position_move_z, pos0, -1000, 1),
                    (prop_instance_set_position, ":item_instance", pos0),
                    (
                        scene_spawned_item_get_instance,
                        ":item_instance",
                        "itm_practice_bow_2",
                        0,
                    ),
                    (prop_instance_get_position, pos0, ":item_instance"),
                    (position_move_z, pos0, -1000, 1),
                    (prop_instance_set_position, ":item_instance", pos0),
                    (
                        scene_spawned_item_get_instance,
                        ":item_instance",
                        "itm_practice_arrows",
                        0,
                    ),
                    (prop_instance_get_position, pos0, ":item_instance"),
                    (position_move_z, pos0, -1000, 1),
                    (prop_instance_set_position, ":item_instance", pos0),
                    (
                        scene_spawned_item_get_instance,
                        ":item_instance",
                        "itm_practice_arrows_2",
                        0,
                    ),
                    (prop_instance_get_position, pos0, ":item_instance"),
                    (position_move_z, pos0, -1000, 1),
                    (prop_instance_set_position, ":item_instance", pos0),
                    (
                        scene_spawned_item_get_instance,
                        ":item_instance",
                        "itm_practice_crossbow",
                        0,
                    ),
                    (prop_instance_get_position, pos0, ":item_instance"),
                    (position_move_z, pos0, -1000, 1),
                    (prop_instance_set_position, ":item_instance", pos0),
                    (
                        scene_spawned_item_get_instance,
                        ":item_instance",
                        "itm_practice_bolts",
                        0,
                    ),
                    (prop_instance_get_position, pos0, ":item_instance"),
                    (position_move_z, pos0, -1000, 1),
                    (prop_instance_set_position, ":item_instance", pos0),
                    (
                        scene_spawned_item_get_instance,
                        ":item_instance",
                        "itm_practice_javelin",
                        0,
                    ),
                    (prop_instance_get_position, pos0, ":item_instance"),
                    (position_move_z, pos0, -1000, 1),
                    (prop_instance_set_position, ":item_instance", pos0),
                    (
                        scene_spawned_item_get_instance,
                        ":item_instance",
                        "itm_arena_lance",
                        0,
                    ),
                    (prop_instance_get_position, pos0, ":item_instance"),
                    (position_move_z, pos0, -1000, 1),
                    (prop_instance_set_position, ":item_instance", pos0),
                ],
            ),
            (
                0,
                1,
                ti_once,
                [],
                [
                    (tutorial_message_set_background, 1),
                    (tutorial_message, "str_tutorial_training_ground_intro_message"),
                ],
            ),
            (
                0,
                0,
                0,
                [
                    (store_mission_timer_a, ":cur_time"),
                    (try_for_agents, ":cur_agent"),
                      (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                      (eq, ":cur_agent_troop", "trp_tutorial_archer_1"),
                      (try_begin),
                        (agent_get_wielded_item, ":cur_wielded_item", ":cur_agent", 0),
                        (neq, ":cur_wielded_item", "itm_practice_bow"),
                        (agent_set_wielded_item, ":cur_agent", "itm_practice_bow"),
                      (else_try),
                        (
                            agent_get_slot,
                            ":look_spr",
                            ":cur_agent",
                            slot_agent_target_prop_instance,
                        ),
                        (prop_instance_get_position, pos1, ":look_spr"),
                        (position_move_z, pos1, 10),
                        (agent_set_look_target_position, ":cur_agent", pos1),
                        (try_begin),
                          (
                              neg | agent_slot_ge,
                              ":cur_agent",
                              slot_agent_next_action_time,
                              ":cur_time",
                          ),
                          (agent_set_attack_action, ":cur_agent", 0),
                          (store_random_in_range, ":next_action_time", 3, 13),
                          (val_add, ":next_action_time", ":cur_time"),
                          (
                              agent_set_slot,
                              ":cur_agent",
                              slot_agent_next_action_time,
                              ":next_action_time",
                          ),
                        (try_end),
                      (try_end),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (set_fixed_point_multiplier, 100),
                    (try_for_agents, ":cur_agent"),
                      (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                      (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_rider_1"),
                      (eq, ":cur_agent_troop", "trp_tutorial_rider_2"),
                      (
                          agent_get_slot,
                          ":target_entry_point",
                          ":cur_agent",
                          slot_agent_target_entry_point,
                      ),
                      (entry_point_get_position, pos1, ":target_entry_point"),
                      (agent_get_position, pos2, ":cur_agent"),
                      (get_sq_distance_between_positions, ":cur_dist", pos1, pos2),
                      (try_begin),
                        (lt, ":cur_dist", 6400),
                        (val_add, ":target_entry_point", 1),
                        (try_begin),
                          (gt, ":target_entry_point", 57),  # last entry point
                          (assign, ":target_entry_point", 48),  # first entry point
                        (try_end),
                        (
                            agent_set_slot,
                            ":cur_agent",
                            slot_agent_target_entry_point,
                            ":target_entry_point",
                        ),
                        (entry_point_get_position, pos1, ":target_entry_point"),
                        (agent_set_scripted_destination, ":cur_agent", pos1),
                      (try_end),
                      (try_begin),
                        (eq, ":cur_agent_troop", "trp_tutorial_rider_2"),
                        (try_begin),
                          (agent_get_wielded_item, ":cur_wielded_item", ":cur_agent", 0),
                          (neq, ":cur_wielded_item", "itm_practice_bow"),
                          (agent_set_wielded_item, ":cur_agent", "itm_practice_bow"),
                        (else_try),
                          (
                              scene_prop_get_num_instances,
                              ":num_instances",
                              "spr_archery_target_with_hit_a",
                          ),
                          (assign, ":shortest_dist", 10000000),
                          (assign, ":best_instance", -1),
                          (try_for_range, ":cur_instance", 0, ":num_instances"),
                            (
                                scene_prop_get_instance,
                                ":spr_instance",
                                "spr_archery_target_with_hit_a",
                                ":cur_instance",
                            ),
                            (
                                neg | agent_slot_eq,
                                ":cur_agent",
                                slot_agent_target_prop_instance,
                                ":spr_instance",
                            ),
                            (prop_instance_get_position, pos1, ":spr_instance"),
                            (
                                position_is_behind_position,
                                pos2,
                                pos1,
                            ),  # target is facing towards us
                            (get_sq_distance_between_positions, ":cur_dist", pos1, pos2),
                            (lt, ":cur_dist", ":shortest_dist"),
                            (assign, ":shortest_dist", ":cur_dist"),
                            (assign, ":best_instance", ":spr_instance"),
                          (try_end),
                          (try_begin),
                            (lt, ":shortest_dist", 40000),  # 20 meters
                            (prop_instance_get_position, pos1, ":best_instance"),
                            (position_move_z, pos1, 10),
                            (init_position, pos3),
                            (position_set_x, pos3, -160),  # 1.6 meters
                            (position_transform_position_to_parent, pos4, pos1, pos3),
                            (copy_position, pos1, pos4),
                            (agent_set_look_target_position, ":cur_agent", pos1),
                            (lt, ":shortest_dist", 22500),  # 15 meters
                            (
                                agent_set_slot,
                                ":cur_agent",
                                slot_agent_target_prop_instance,
                                ":best_instance",
                            ),
                            (agent_set_attack_action, ":cur_agent", 0),
                          (else_try),
                            (
                                agent_get_slot,
                                ":last_instance",
                                ":cur_agent",
                                slot_agent_target_prop_instance,
                            ),
                            (ge, ":last_instance", 0),
                            (prop_instance_get_position, pos1, ":last_instance"),
                            (get_sq_distance_between_positions, ":cur_dist", pos1, pos2),
                            (lt, ":cur_dist", 40000),  # 20 meters
                            (position_move_z, pos1, 10),
                            (init_position, pos3),
                            (position_set_x, pos3, -160),  # 1.6 meters
                            (position_transform_position_to_parent, pos4, pos1, pos3),
                            (copy_position, pos1, pos4),
                            (agent_set_look_target_position, ":cur_agent", pos1),
                          (try_end),
                        (try_end),
                      (else_try),
                        (eq, ":cur_agent_troop", "trp_tutorial_rider_1"),
                        (try_begin),
                          (agent_get_wielded_item, ":cur_wielded_item", ":cur_agent", 0),
                          (neq, ":cur_wielded_item", "itm_practice_sword"),
                          (agent_set_wielded_item, ":cur_agent", "itm_practice_sword"),
                        (else_try),
                          (
                              scene_prop_get_num_instances,
                              ":num_instances",
                              "spr_dummy_a_undestructable",
                          ),
                          (assign, ":shortest_dist", 10000000),
                          (assign, ":best_instance", -1),
                          (try_for_range, ":cur_instance", 0, ":num_instances"),
                            (
                                scene_prop_get_instance,
                                ":spr_instance",
                                "spr_dummy_a_undestructable",
                                ":cur_instance",
                            ),
                            (
                                neg | agent_slot_eq,
                                ":cur_agent",
                                slot_agent_target_prop_instance,
                                ":spr_instance",
                            ),
                            (prop_instance_get_position, pos1, ":spr_instance"),
                            (get_sq_distance_between_positions, ":cur_dist", pos1, pos2),
                            (lt, ":cur_dist", ":shortest_dist"),
                            (assign, ":shortest_dist", ":cur_dist"),
                            (assign, ":best_instance", ":spr_instance"),
                          (try_end),
                          (try_begin),
                            (lt, ":shortest_dist", 10000),  # 10 meters
                            (prop_instance_get_position, pos1, ":best_instance"),
                            (position_transform_position_to_local, pos3, pos2, pos1),
                            (position_get_x, ":local_x", pos3),
                            (position_get_y, ":local_y", pos3),
                            (is_between, ":local_x", -200, 200),
                            (gt, ":local_y", -100),
                            (init_position, pos3),
                            (try_begin),
                              (lt, ":local_x", 0),
                              (position_move_x, pos3, -100),
                              (position_move_z, pos3, 100),
                            (else_try),
                              (position_move_x, pos3, 100),
                              (position_move_z, pos3, 150),
                            (try_end),
                            (position_transform_position_to_parent, pos4, pos2, pos3),
                            (agent_set_look_target_position, ":cur_agent", pos4),
                            (try_begin),
                              (lt, ":local_x", 0),
                              (agent_set_attack_action, ":cur_agent", 2, 1),  # left
                            (else_try),
                              (agent_set_attack_action, ":cur_agent", 1, 1),  # right
                            (try_end),
                            (this_or_next | lt, ":shortest_dist", 900),  # 3 meters
                            (lt, ":local_y", 100),  # 1 meter
                            (agent_set_attack_action, ":cur_agent", 0, 0),  # release
                            (
                                agent_set_slot,
                                ":cur_agent",
                                slot_agent_target_prop_instance,
                                ":best_instance",
                            ),
                          (else_try),
                            (
                                agent_get_slot,
                                ":last_instance",
                                ":cur_agent",
                                slot_agent_target_prop_instance,
                            ),
                            (ge, ":last_instance", 0),
                            (prop_instance_get_position, pos1, ":last_instance"),
                            (get_sq_distance_between_positions, ":cur_dist", pos1, pos2),
                            (lt, ":cur_dist", 10000),  # 10 meters
                            (position_transform_position_to_local, pos3, pos2, pos1),
                            (position_get_x, ":local_x", pos3),
                            (position_get_y, ":local_y", pos3),
                            (is_between, ":local_x", -200, 200),
                            (gt, ":local_y", -100),
                            (init_position, pos3),
                            (try_begin),
                              (lt, ":local_x", 0),
                              (position_move_x, pos3, -100),
                              (position_move_z, pos3, 100),
                            (else_try),
                              (position_move_x, pos3, 100),
                              (position_move_z, pos3, 150),
                            (try_end),
                            (position_transform_position_to_parent, pos4, pos2, pos3),
                            (agent_set_look_target_position, ":cur_agent", pos4),
                          (try_end),
                        (try_end),
                      (try_end),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (store_mission_timer_a, ":cur_time"),
                    (try_for_agents, ":cur_agent"),
                      (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                      (eq, ":cur_agent_troop", "trp_tutorial_archer_1"),
                      (try_begin),
                        (agent_get_wielded_item, ":cur_wielded_item", ":cur_agent", 0),
                        (neq, ":cur_wielded_item", "itm_practice_bow"),
                        (agent_set_wielded_item, ":cur_agent", "itm_practice_bow"),
                      (else_try),
                        (
                            agent_get_slot,
                            ":look_spr",
                            ":cur_agent",
                            slot_agent_target_prop_instance,
                        ),
                        (prop_instance_get_position, pos1, ":look_spr"),
                        (agent_set_look_target_position, ":cur_agent", pos1),
                        (try_begin),
                          (
                              neg | agent_slot_ge,
                              ":cur_agent",
                              slot_agent_next_action_time,
                              ":cur_time",
                          ),
                          (agent_set_attack_action, ":cur_agent", 0),
                          (store_random_in_range, ":next_action_time", 3, 13),
                          (val_add, ":next_action_time", ":cur_time"),
                          (
                              agent_set_slot,
                              ":cur_agent",
                              slot_agent_next_action_time,
                              ":next_action_time",
                          ),
                        (try_end),
                      (try_end),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (call_script, "script_iterate_pointer_arrow"),
                ],
                [],
            ),
            (
                5,
                0,
                0,
                [
                    (try_begin),
                      (store_mission_timer_a, ":cur_time"),
                      (ge, ":cur_time", 30),
                      (
                          eq,
                          "$g_tutorial_training_ground_intro_message_being_displayed",
                          1,
                      ),
                      (
                          assign,
                          "$g_tutorial_training_ground_intro_message_being_displayed",
                          0,
                      ),
                      (tutorial_message, -1),
                    (try_end),
                    (get_player_agent_no, ":player_agent"),
                    (try_for_agents, ":cur_agent"),
                      (agent_is_human, ":cur_agent"),
                      (neq, ":cur_agent", ":player_agent"),
                      (agent_refill_ammo, ":cur_agent"),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_wielded_item, ":wielded_weapon", ":player_agent", 0),
                    (assign, ":refill", 0),
                    (try_begin),
                      (eq, ":wielded_weapon", "itm_practice_bow"),
                      (agent_has_item_equipped, ":player_agent", "itm_practice_arrows"),
                      (agent_get_ammo, ":cur_ammo", ":player_agent", 1),
                      (eq, ":cur_ammo", 0),
                      (assign, ":refill", 1),
                    (else_try),
                      (eq, ":wielded_weapon", "itm_practice_bow_2"),
                      (agent_has_item_equipped, ":player_agent", "itm_practice_arrows_2"),
                      (agent_get_ammo, ":cur_ammo", ":player_agent", 1),
                      (eq, ":cur_ammo", 0),
                      (assign, ":refill", 1),
                    (else_try),
                      (eq, ":wielded_weapon", "itm_practice_crossbow"),
                      (agent_has_item_equipped, ":player_agent", "itm_practice_bolts"),
                      (agent_get_ammo, ":cur_ammo", ":player_agent", 1),
                      (eq, ":cur_ammo", 0),
                      (assign, ":refill", 1),
                    (else_try),
                      (eq, ":wielded_weapon", "itm_practice_javelin"),
                      (agent_get_ammo, ":cur_ammo", ":player_agent", 1),
                      (le, ":cur_ammo", 1),
                      (assign, ":refill", 1),
                    (try_end),
                    (eq, ":refill", 1),
                    (agent_refill_ammo, ":player_agent"),
                    (
                        tutorial_box,
                        "str_tutorial_training_ground_ammo_refill",
                        "@Tutorial",
                    ),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (get_player_agent_no, ":player_agent"),
                    (neq, "$g_tutorial_training_ground_horseman_trainer_state", 0),
                    (mission_disable_talk),
                    (try_begin),
                      (eq, "$g_tutorial_training_ground_horseman_trainer_state", 1),
                      (assign, "$g_tutorial_training_ground_current_score", 0),
                      (val_add, "$g_tutorial_training_ground_horseman_trainer_state", 1),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_horseman_trainer_state", 2),
                      (try_begin),
                        (try_begin),
                          (ge, "$g_tutorial_training_ground_horseman_trainer_item_1", 0),
                          (
                              scene_spawned_item_get_instance,
                              ":item_instance",
                              "$g_tutorial_training_ground_horseman_trainer_item_1",
                              0,
                          ),
                          (prop_instance_get_position, pos0, ":item_instance"),
                          (position_move_z, pos0, 1000, 1),
                          (prop_instance_set_position, ":item_instance", pos0),
                          (
                              scene_prop_get_instance,
                              ":pointer_instance",
                              "spr_pointer_arrow",
                              0,
                          ),
                          (prop_instance_set_position, ":pointer_instance", pos0),
                          (assign, "$g_pointer_arrow_height_adder", 200),
                          (try_begin),
                            (ge, "$g_tutorial_training_ground_horseman_trainer_item_2", 0),
                            (
                                scene_spawned_item_get_instance,
                                ":item_instance",
                                "$g_tutorial_training_ground_horseman_trainer_item_2",
                                0,
                            ),
                            (prop_instance_get_position, pos0, ":item_instance"),
                            (position_move_z, pos0, 1000, 1),
                            (prop_instance_set_position, ":item_instance", pos0),
                          (try_end),
                        (try_end),
                        (val_add, "$g_tutorial_training_ground_horseman_trainer_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_horseman_trainer_state", 3),
                      (try_begin),
                        (ge, "$g_tutorial_training_ground_horseman_trainer_item_1", 0),
                        (try_begin),
                          (
                              str_store_item_name,
                              s0,
                              "$g_tutorial_training_ground_horseman_trainer_item_1",
                          ),
                          (tutorial_message, "str_tutorial_training_ground_horseman_text_1"),
                          (
                              agent_has_item_equipped,
                              ":player_agent",
                              "$g_tutorial_training_ground_horseman_trainer_item_1",
                          ),
                          (val_add, "$g_tutorial_training_ground_horseman_trainer_state", 1),
                          (play_sound, "snd_tutorial_1"),
                        (try_end),
                      (else_try),
                        (val_add, "$g_tutorial_training_ground_horseman_trainer_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_horseman_trainer_state", 4),
                      (try_begin),
                        (ge, "$g_tutorial_training_ground_horseman_trainer_item_2", 0),
                        (try_begin),
                          (
                              str_store_item_name,
                              s0,
                              "$g_tutorial_training_ground_horseman_trainer_item_2",
                          ),
                          (tutorial_message, "str_tutorial_training_ground_horseman_text_1"),
                          (
                              agent_has_item_equipped,
                              ":player_agent",
                              "$g_tutorial_training_ground_horseman_trainer_item_2",
                          ),
                          (val_add, "$g_tutorial_training_ground_horseman_trainer_state", 1),
                          (play_sound, "snd_tutorial_1"),
                        (try_end),
                      (else_try),
                        (val_add, "$g_tutorial_training_ground_horseman_trainer_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_horseman_trainer_state", 5),
                      (try_begin),
                        (agent_get_horse, ":player_horse", ":player_agent"),
                        (lt, ":player_horse", 0),
                        (tutorial_message, "str_tutorial_training_ground_horseman_text_2"),
                        (try_begin),
                          (assign, ":horse_agent_to_mount", -1),
                          (try_for_agents, ":cur_agent"),
                            (agent_get_item_id, ":cur_agent_item", ":cur_agent"),
                            (eq, ":cur_agent_item", "itm_practice_horse"),
                            (assign, ":horse_agent_to_mount", ":cur_agent"),
                          (try_end),
                          (agent_get_position, pos0, ":horse_agent_to_mount"),
                          (
                              scene_prop_get_instance,
                              ":pointer_instance",
                              "spr_pointer_arrow",
                              0,
                          ),
                          (prop_instance_get_position, pos1, ":pointer_instance"),
                          (set_fixed_point_multiplier, 100),
                          (position_get_x, ":x1", pos0),
                          (position_get_x, ":x2", pos1),
                          (position_get_y, ":y1", pos0),
                          (position_get_y, ":y2", pos1),
                          (this_or_next | neq, ":x1", ":x2"),
                          (neq, ":y1", ":y2"),
                          (prop_instance_set_position, ":pointer_instance", pos0),
                          (assign, "$g_pointer_arrow_height_adder", 200),
                        (try_end),
                      (else_try),
                        (val_add, "$g_tutorial_training_ground_horseman_trainer_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_horseman_trainer_state", 6),
                      (try_begin),
                        (
                            eq,
                            "$g_tutorial_training_ground_horseman_trainer_completed_chapters",
                            0,
                        ),
                        (tutorial_message, "str_tutorial_training_ground_horseman_text_3"),
                      (else_try),
                        (
                            eq,
                            "$g_tutorial_training_ground_horseman_trainer_completed_chapters",
                            1,
                        ),
                        (assign, ":prop_to_search_for", "spr_dummy_a_undestructable"),
                        (tutorial_message, "str_tutorial_training_ground_horseman_text_4"),
                      (else_try),
                        (assign, ":prop_to_search_for", "spr_archery_target_with_hit_a"),
                        (tutorial_message, "str_tutorial_training_ground_horseman_text_5"),
                      (try_end),
                      (try_begin),
                        (
                            eq,
                            "$g_tutorial_training_ground_horseman_trainer_completed_chapters",
                            0,
                        ),
                        (
                            store_add,
                            ":cur_entry_point",
                            "$g_tutorial_training_ground_current_score",
                            48,
                        ),
                        (entry_point_get_position, pos0, ":cur_entry_point"),
                        (init_position, pos2),
                        (position_move_y, pos2, -800),
                        (position_transform_position_to_parent, pos3, pos0, pos2),
                        (copy_position, pos0, pos3),
                        (agent_get_position, pos2, ":player_agent"),
                        (try_begin),
                          (get_distance_between_positions, ":cur_dist", pos0, pos2),
                          (lt, ":cur_dist", 500),  # 5 meters
                          (val_add, "$g_tutorial_training_ground_current_score", 1),
                          (ge, "$g_tutorial_training_ground_current_score", 10),
                          (assign, "$g_pointer_arrow_height_adder", -1000),
                          (
                              tutorial_message,
                              "str_tutorial_training_ground_horseman_text_6",
                              0,
                              10,
                          ),
                          (assign, "$g_tutorial_training_ground_horseman_trainer_state", 0),
                          (
                              val_add,
                              "$g_tutorial_training_ground_horseman_trainer_completed_chapters",
                              1,
                          ),
                          (play_sound, "snd_tutorial_2"),
                        (try_end),
                        (try_begin),
                          (
                              scene_prop_get_instance,
                              ":pointer_instance",
                              "spr_pointer_arrow",
                              0,
                          ),
                          (prop_instance_get_position, pos1, ":pointer_instance"),
                          (set_fixed_point_multiplier, 1),
                          (position_get_x, ":x1", pos0),
                          (position_get_x, ":x2", pos1),
                          (position_get_y, ":y1", pos0),
                          (position_get_y, ":y2", pos1),
                          (this_or_next | neq, ":x1", ":x2"),
                          (neq, ":y1", ":y2"),
                          (prop_instance_set_position, ":pointer_instance", pos0),
                          (assign, "$g_pointer_arrow_height_adder", 150),
                          (play_sound, "snd_tutorial_1"),
                        (try_end),
                      (else_try),
                        (scene_prop_get_num_instances, ":end_cond", ":prop_to_search_for"),
                        (try_begin),
                          (lt, "$g_tutorial_training_ground_current_score", 6),
                          (assign, ":next_prop_instance", -1),
                          (
                              store_add,
                              ":var_id_to_search_for",
                              "$g_tutorial_training_ground_current_score",
                              1,
                          ),
                          (try_for_range, ":cur_instance", 0, ":end_cond"),
                            (
                                scene_prop_get_instance,
                                ":prop_instance",
                                ":prop_to_search_for",
                                ":cur_instance",
                            ),
                            (prop_instance_get_variation_id_2, ":var_id_2", ":prop_instance"),
                            (eq, ":var_id_to_search_for", ":var_id_2"),
                            (assign, ":next_prop_instance", ":prop_instance"),
                            (assign, ":end_cond", 0),
                          (try_end),
                          (try_begin),
                            (prop_instance_get_position, pos0, ":next_prop_instance"),
                            (
                                scene_prop_get_instance,
                                ":pointer_instance",
                                "spr_pointer_arrow",
                                0,
                            ),
                            (prop_instance_get_position, pos1, ":pointer_instance"),
                            (set_fixed_point_multiplier, 1),
                            (position_get_x, ":x1", pos0),
                            (position_get_x, ":x2", pos1),
                            (position_get_y, ":y1", pos0),
                            (position_get_y, ":y2", pos1),
                            (this_or_next | neq, ":x1", ":x2"),
                            (neq, ":y1", ":y2"),
                            (prop_instance_set_position, ":pointer_instance", pos0),
                            (assign, "$g_pointer_arrow_height_adder", 200),
                            (play_sound, "snd_tutorial_1"),
                          (try_end),
                        (else_try),
                          (assign, "$g_pointer_arrow_height_adder", -1000),
                          (try_begin),
                            (ge, "$g_tutorial_training_ground_horseman_trainer_item_2", 0),
                            (
                                agent_unequip_item,
                                ":player_agent",
                                "$g_tutorial_training_ground_horseman_trainer_item_2",
                            ),
                          (try_end),
                          (
                              agent_unequip_item,
                              ":player_agent",
                              "$g_tutorial_training_ground_horseman_trainer_item_1",
                          ),
                          (
                              tutorial_message,
                              "str_tutorial_training_ground_horseman_text_6",
                              0,
                              10,
                          ),
                          (assign, "$g_tutorial_training_ground_horseman_trainer_state", 0),
                          (
                              val_add,
                              "$g_tutorial_training_ground_horseman_trainer_completed_chapters",
                              1,
                          ),
                          (play_sound, "snd_tutorial_2"),
                        (try_end),
                      (try_end),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (get_player_agent_no, ":player_agent"),
                    (neq, "$g_tutorial_training_ground_archer_trainer_state", 0),
                    (mission_disable_talk),
                    (try_begin),
                      (eq, "$g_tutorial_training_ground_archer_trainer_state", 1),
                      (try_begin),
                        (assign, "$g_last_destroyed_gourds", 0),
                        (assign, "$g_tutorial_training_ground_current_score", 0),
                        (
                            scene_spawned_item_get_instance,
                            ":item_instance",
                            "$g_tutorial_training_ground_archer_trainer_item_1",
                            0,
                        ),
                        (prop_instance_get_position, pos0, ":item_instance"),
                        (position_move_z, pos0, 1000, 1),
                        (prop_instance_set_position, ":item_instance", pos0),
                        (
                            scene_prop_get_instance,
                            ":pointer_instance",
                            "spr_pointer_arrow",
                            0,
                        ),
                        (prop_instance_set_position, ":pointer_instance", pos0),
                        (assign, "$g_pointer_arrow_height_adder", 100),
                        (try_begin),
                          (ge, "$g_tutorial_training_ground_archer_trainer_item_2", 0),
                          (
                              scene_spawned_item_get_instance,
                              ":item_instance",
                              "$g_tutorial_training_ground_archer_trainer_item_2",
                              0,
                          ),
                          (prop_instance_get_position, pos0, ":item_instance"),
                          (position_move_z, pos0, 1000, 1),
                          (prop_instance_set_position, ":item_instance", pos0),
                        (try_end),
                        (val_add, "$g_tutorial_training_ground_archer_trainer_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_archer_trainer_state", 2),
                      (try_begin),
                        (
                            str_store_item_name,
                            s0,
                            "$g_tutorial_training_ground_archer_trainer_item_1",
                        ),
                        (tutorial_message, "str_tutorial_training_ground_archer_text_1"),
                        (
                            agent_has_item_equipped,
                            ":player_agent",
                            "$g_tutorial_training_ground_archer_trainer_item_1",
                        ),
                        (val_add, "$g_tutorial_training_ground_archer_trainer_state", 1),
                        (play_sound, "snd_tutorial_1"),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_archer_trainer_state", 3),
                      (try_begin),
                        (ge, "$g_tutorial_training_ground_archer_trainer_item_2", 0),
                        (try_begin),
                          (
                              str_store_item_name,
                              s0,
                              "$g_tutorial_training_ground_archer_trainer_item_2",
                          ),
                          (tutorial_message, "str_tutorial_training_ground_archer_text_1"),
                          (
                              agent_has_item_equipped,
                              ":player_agent",
                              "$g_tutorial_training_ground_archer_trainer_item_2",
                          ),
                          (val_add, "$g_tutorial_training_ground_archer_trainer_state", 1),
                          (play_sound, "snd_tutorial_1"),
                        (try_end),
                      (else_try),
                        (val_add, "$g_tutorial_training_ground_archer_trainer_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_archer_trainer_state", 4),
                      (try_begin),
                        (try_for_range, ":cur_instance", 0, 3),
                          (
                              scene_prop_get_instance,
                              ":gourd_instance",
                              "spr_gourd",
                              ":cur_instance",
                          ),
                          (prop_instance_refill_hit_points, ":gourd_instance"),
                          (entry_point_get_position, pos0, 45),
                          (init_position, pos1),
                          (store_sub, ":cur_rotation", ":cur_instance", 1),
                          (val_mul, ":cur_rotation", 5),
                          (position_rotate_z, pos1, ":cur_rotation"),
                          (try_begin),
                            (ge, "$g_tutorial_training_ground_archer_trainer_item_2", 0),
                            (position_move_y, pos1, 1300),  # for bow and crossbow
                          (else_try),
                            (position_move_y, pos1, 800),  # for javelin
                            (val_mul, ":cur_rotation", 2),
                          (try_end),
                          (position_transform_position_to_parent, pos2, pos0, pos1),
                          (position_set_z_to_ground_level, pos2),
                          (
                              scene_prop_get_instance,
                              ":spike_instance",
                              "spr_gourd_spike",
                              ":cur_instance",
                          ),
                          (prop_instance_set_position, ":spike_instance", pos2),
                          (position_move_z, pos2, 150, 1),
                          (prop_instance_set_position, ":gourd_instance", pos2),
                        (try_end),
                        (
                            scene_prop_get_instance,
                            ":pointer_instance",
                            "spr_pointer_arrow",
                            0,
                        ),
                        (scene_prop_get_instance, ":spike_instance", "spr_gourd_spike", 1),
                        (prop_instance_get_position, pos1, ":spike_instance"),
                        (prop_instance_set_position, ":pointer_instance", pos1),
                        (assign, "$g_pointer_arrow_height_adder", 200),
                        (tutorial_message, "str_tutorial_training_ground_archer_text_2"),
                        (val_add, "$g_tutorial_training_ground_archer_trainer_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_archer_trainer_state", 5),
                      (try_begin),
                        (try_begin),
                          (
                              neq,
                              "$g_tutorial_training_ground_current_score",
                              "$g_last_destroyed_gourds",
                          ),
                          (
                              assign,
                              "$g_tutorial_training_ground_current_score",
                              "$g_last_destroyed_gourds",
                          ),
                          (try_begin),
                            (lt, "$g_last_destroyed_gourds", 3),
                            (play_sound, "snd_tutorial_1"),
                          (else_try),
                            (play_sound, "snd_tutorial_2"),
                          (try_end),
                        (try_end),
                        (try_begin),
                          (
                              eq,
                              "$g_tutorial_training_ground_archer_trainer_completed_chapters",
                              0,
                          ),
                          (eq, "$g_last_destroyed_gourds", 0),
                          (entry_point_get_position, pos0, 45),
                          (agent_get_position, pos1, ":player_agent"),
                          (neg | position_is_behind_position, pos1, pos0),
                          (tutorial_message, "str_tutorial_training_ground_archer_text_3"),
                        (else_try),
                          (
                              eq,
                              "$g_tutorial_training_ground_archer_trainer_completed_chapters",
                              0,
                          ),
                          (eq, "$g_last_destroyed_gourds", 1),
                          (tutorial_message, "str_tutorial_training_ground_archer_text_4"),
                        (try_end),
                        (ge, "$g_last_destroyed_gourds", 3),
                        (assign, "$g_pointer_arrow_height_adder", -1000),
                        (val_add, "$g_tutorial_training_ground_archer_trainer_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_archer_trainer_state", 6),
                      (try_begin),
                        (try_begin),
                          (ge, "$g_tutorial_training_ground_archer_trainer_item_2", 0),
                          (
                              agent_unequip_item,
                              ":player_agent",
                              "$g_tutorial_training_ground_archer_trainer_item_2",
                          ),
                        (try_end),
                        (
                            agent_unequip_item,
                            ":player_agent",
                            "$g_tutorial_training_ground_archer_trainer_item_1",
                        ),
                        (
                            tutorial_message,
                            "str_tutorial_training_ground_archer_text_5",
                            0,
                            10,
                        ),
                        (assign, "$g_tutorial_training_ground_archer_trainer_state", 0),
                        (
                            val_add,
                            "$g_tutorial_training_ground_archer_trainer_completed_chapters",
                            1,
                        ),
                      (try_end),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (get_player_agent_no, ":player_agent"),
                    (neq, "$g_tutorial_training_ground_melee_trainer_attack", -1),
                    (mission_disable_talk),
                    (try_for_agents, ":cur_agent"),
                      (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                      (
                          eq,
                          ":cur_agent_troop",
                          "$g_tutorial_training_ground_melee_trainer_attack",
                      ),
                      (assign, ":trainer_agent", ":cur_agent"),
                    (try_end),
                    (try_begin),
                      (eq, "$g_tutorial_training_ground_melee_state", 0),
                      (try_begin),
                        (try_for_agents, ":cur_agent"),
                          (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                          (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                          (agent_set_team, ":cur_agent", 7),
                          (
                              agent_get_slot,
                              ":spawn_point",
                              ":cur_agent",
                              slot_agent_spawn_entry_point,
                          ),
                          (entry_point_get_position, pos1, ":spawn_point"),
                          (agent_set_scripted_destination, ":cur_agent", pos1),
                          (agent_force_rethink, ":cur_agent"),
                        (try_end),
                        (
                            agent_set_wielded_item,
                            ":trainer_agent",
                            "itm_practice_sword",
                        ),  # TODO: change this
                        (
                            store_random_in_range,
                            "$g_tutorial_training_ground_melee_state",
                            1,
                            5,
                        ),  # random attack dir
                        (assign, "$g_tutorial_update_mouse_presentation", 1),
                        (assign, "$g_tutorial_training_ground_next_score_time", 0),
                      (try_end),
                    (else_try),
                      (gt, "$g_tutorial_training_ground_melee_state", 0),
                      (try_begin),
                        (agent_set_team, ":player_agent", 1),
                        (agent_set_team, ":trainer_agent", 2),
                        (agent_get_position, pos1, ":player_agent"),
                        (agent_set_scripted_destination_no_attack, ":trainer_agent", pos1),
                        (agent_get_attack_action, ":attack_action", ":player_agent"),
                        (try_begin),
                          (eq, ":attack_action", 2),  # release
                          (agent_get_action_dir, ":action_dir_attacker", ":player_agent"),
                          (try_begin),
                            (eq, ":action_dir_attacker", 0),  # down
                            (agent_set_defend_action, ":trainer_agent", 0, 1),
                          (else_try),
                            (eq, ":action_dir_attacker", 3),  # up
                            (agent_set_defend_action, ":trainer_agent", 3, 1),
                          (else_try),
                            (eq, ":action_dir_attacker", 1),  # right
                            (agent_set_defend_action, ":trainer_agent", 2, 1),
                          (else_try),
                            (eq, ":action_dir_attacker", 2),  # left
                            (agent_set_defend_action, ":trainer_agent", 1, 1),
                          (try_end),
                        (try_end),
                        (try_begin),
                          (ge, "$g_tutorial_training_ground_current_score", 5),
                          (tutorial_message, -1),
                          (assign, "$g_tutorial_training_ground_melee_state", 0),
                          (agent_set_team, ":player_agent", 0),
                          (agent_set_team, ":trainer_agent", 7),
                          (agent_set_hit_points, ":player_agent", 100, 0),
                          (agent_set_hit_points, ":trainer_agent", 100, 0),
                          ##               (assign, "$g_tutorial_training_ground_melee_trainer_attack_completed", 1), #not used
                          (
                              assign,
                              "$g_tutorial_training_ground_conversation_state",
                              9,
                          ),  # attack complete
                          (
                              start_mission_conversation,
                              "$g_tutorial_training_ground_melee_trainer_attack",
                          ),
                          (assign, "$g_tutorial_training_ground_melee_trainer_attack", -1),
                        (try_end),
                      (try_end),
                    (try_end),
                    (try_begin),
                      (agent_get_attack_action, ":attack_action", ":player_agent"),
                      (eq, ":attack_action", 2),  # release
                      (agent_get_action_dir, ":action_dir_attacker", ":player_agent"),
                      (store_add, ":attack_state", ":action_dir_attacker", 1),
                      (agent_get_wielded_item, ":weapon_item", ":player_agent", 0),
                      (
                          call_script,
                          "script_cf_is_melee_weapon_for_tutorial",
                          ":weapon_item",
                      ),
                      (store_mission_timer_a, ":cur_time"),
                      (gt, ":cur_time", "$g_tutorial_training_ground_next_score_time"),
                      (try_begin),
                        (eq, ":attack_state", "$g_tutorial_training_ground_melee_state"),
                        (val_add, "$g_tutorial_training_ground_current_score", 1),
                        (try_begin),
                          (ge, "$g_tutorial_training_ground_current_score", 5),
                          (assign, "$g_tutorial_training_ground_melee_state", 5),
                          (play_sound, "snd_tutorial_2"),
                        (else_try),
                          (play_sound, "snd_tutorial_1"),
                          (assign, ":end_cond", 100),
                          (try_for_range, ":unused", 0, ":end_cond"),
                            (store_random_in_range, ":random_no", 1, 5),  # random attack dir
                            (neq, ":random_no", "$g_tutorial_training_ground_melee_state"),
                            (assign, "$g_tutorial_training_ground_melee_state", ":random_no"),
                            (assign, ":end_cond", 0),  # break
                          (try_end),
                        (try_end),
                        (assign, "$g_tutorial_update_mouse_presentation", 1),
                      (else_try),
                        (val_add, "$g_tutorial_training_ground_current_score_2", 1),
                        (play_sound, "snd_tutorial_fail"),
                      (try_end),
                      (
                          store_add,
                          "$g_tutorial_training_ground_next_score_time",
                          ":cur_time",
                          1,
                      ),
                    (try_end),
                    (assign, reg0, "$g_tutorial_training_ground_current_score"),
                    (assign, reg1, "$g_tutorial_training_ground_current_score_2"),
                    (str_clear, s0),
                    (assign, "$g_tutorial_mouse_dir", -1),
                    (assign, "$g_tutorial_mouse_click", -1),
                    (try_begin),
                      (neq, "$g_tutorial_training_ground_melee_state", 5),  # finished
                      (store_mission_timer_a, ":cur_time"),
                      (this_or_next | eq, "$g_tutorial_update_mouse_presentation", 0),
                      (gt, ":cur_time", "$g_tutorial_training_ground_next_score_time"),
                      (try_begin),
                        (eq, "$g_tutorial_training_ground_melee_state", 1),  # down
                        (
                            str_store_string,
                            s0,
                            "str_tutorial_training_ground_attack_training_down",
                        ),
                      (else_try),
                        (eq, "$g_tutorial_training_ground_melee_state", 4),  # up
                        (
                            str_store_string,
                            s0,
                            "str_tutorial_training_ground_attack_training_up",
                        ),
                      (else_try),
                        (eq, "$g_tutorial_training_ground_melee_state", 2),  # right
                        (
                            str_store_string,
                            s0,
                            "str_tutorial_training_ground_attack_training_right",
                        ),
                      (else_try),
                        (eq, "$g_tutorial_training_ground_melee_state", 3),  # left
                        (
                            str_store_string,
                            s0,
                            "str_tutorial_training_ground_attack_training_left",
                        ),
                      (try_end),
                      (
                          store_sub,
                          "$g_tutorial_mouse_dir",
                          "$g_tutorial_training_ground_melee_state",
                          1,
                      ),
                      (assign, "$g_tutorial_mouse_click", 0),
                      (try_begin),
                        (eq, "$g_tutorial_update_mouse_presentation", 1),
                        (assign, "$g_tutorial_update_mouse_presentation", 0),
                        (start_presentation, "prsnt_tutorial_show_mouse_movement"),
                      (try_end),
                    (try_end),
                    (try_begin),
                      (agent_get_wielded_item, ":weapon_item", ":player_agent", 0),
                      (
                          call_script,
                          "script_cf_is_melee_weapon_for_tutorial",
                          ":weapon_item",
                      ),
                      (tutorial_message, "str_tutorial_training_ground_attack_training"),
                    (else_try),
                      (tutorial_message, "str_tutorial_training_ground_warning_melee"),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (get_player_agent_no, ":player_agent"),
                    (neq, "$g_tutorial_training_ground_melee_trainer_parry", -1),
                    (mission_disable_talk),
                    (try_for_agents, ":cur_agent"),
                      (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                      (
                          eq,
                          ":cur_agent_troop",
                          "$g_tutorial_training_ground_melee_trainer_parry",
                      ),
                      (assign, ":trainer_agent", ":cur_agent"),
                    (try_end),
                    (try_begin),
                      (eq, "$g_tutorial_training_ground_melee_state", 0),
                      (try_begin),
                        (try_for_agents, ":cur_agent"),
                          (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                          (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                          (agent_set_team, ":cur_agent", 7),
                          (
                              agent_get_slot,
                              ":spawn_point",
                              ":cur_agent",
                              slot_agent_spawn_entry_point,
                          ),
                          (entry_point_get_position, pos1, ":spawn_point"),
                          (agent_set_scripted_destination, ":cur_agent", pos1),
                          (agent_force_rethink, ":cur_agent"),
                        (try_end),
                        (
                            agent_set_wielded_item,
                            ":trainer_agent",
                            "itm_practice_sword",
                        ),  # TODO: change this
                        (val_add, "$g_tutorial_training_ground_melee_state", 1),
                        (
                            store_mission_timer_a,
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (val_add, "$g_tutorial_training_ground_melee_next_action_time", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_melee_state", 1),
                      (try_begin),
                        (store_mission_timer_a, ":cur_time"),
                        (
                            gt,
                            ":cur_time",
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (agent_set_team, ":player_agent", 1),
                        (agent_set_team, ":trainer_agent", 2),
                        (agent_get_position, pos1, ":player_agent"),
                        (agent_set_scripted_destination_no_attack, ":trainer_agent", pos1),
                        (agent_get_position, pos2, ":trainer_agent"),
                        (get_sq_distance_between_positions, ":sq_dist", pos1, pos2),
                        (lt, ":sq_dist", 400),  # 2 meters
                        (try_begin),
                          (eq, "$g_tutorial_training_ground_melee_trainer_action_state", 0),
                          (try_begin),
                            (ge, "$g_tutorial_training_ground_current_score", 5),
                            (assign, "$g_tutorial_mouse_dir", -1),
                            (assign, "$g_tutorial_mouse_click", -1),
                            (tutorial_message, -1),
                            (assign, "$g_tutorial_training_ground_melee_state", 0),
                            (agent_set_team, ":player_agent", 0),
                            (agent_set_team, ":trainer_agent", 7),
                            (agent_set_hit_points, ":player_agent", 100, 0),
                            (agent_set_hit_points, ":trainer_agent", 100, 0),
                            ##                 (assign, "$g_tutorial_training_ground_melee_trainer_parry_completed", 1), #not used
                            (
                                assign,
                                "$g_tutorial_training_ground_conversation_state",
                                1,
                            ),  # parry complete
                            (
                                start_mission_conversation,
                                "$g_tutorial_training_ground_melee_trainer_parry",
                            ),
                            (assign, "$g_tutorial_training_ground_melee_trainer_parry", -1),
                          (else_try),
                            (store_random_in_range, ":random_no", 0, 4),
                            (
                                agent_set_attack_action,
                                ":trainer_agent",
                                ":random_no",
                                1,
                            ),  # ready
                            (
                                val_add,
                                "$g_tutorial_training_ground_melee_trainer_action_state",
                                1,
                            ),
                            (assign, "$g_tutorial_mouse_dir", ":random_no"),
                            (try_begin),
                              (is_between, ":random_no", 1, 3),  # right or left
                              (
                                  store_sub,
                                  "$g_tutorial_mouse_dir",
                                  3,
                                  ":random_no",
                              ),  # revert sides
                            (try_end),
                            (assign, "$g_tutorial_mouse_click", 1),
                            (start_presentation, "prsnt_tutorial_show_mouse_movement"),
                          (try_end),
                        (else_try),
                          (eq, "$g_tutorial_training_ground_melee_trainer_action_state", 1),
                          (agent_get_defend_action, ":defend_action", ":player_agent"),
                          (gt, ":defend_action", 0),  # parrying or blocking
                          (agent_get_action_dir, ":action_dir_defender", ":player_agent"),
                          (agent_get_action_dir, ":action_dir_attacker", ":trainer_agent"),
                          (assign, ":actions_match", 0),
                          (try_begin),
                            (eq, ":action_dir_attacker", 0),  # down
                            (eq, ":action_dir_defender", 0),  # down
                            (assign, ":actions_match", 1),
                          (else_try),
                            (eq, ":action_dir_attacker", 3),  # up
                            (eq, ":action_dir_defender", 3),  # up
                            (assign, ":actions_match", 1),
                          (else_try),
                            (eq, ":action_dir_attacker", 1),  # right
                            (eq, ":action_dir_defender", 2),  # left
                            (assign, ":actions_match", 1),
                          (else_try),
                            (eq, ":action_dir_attacker", 2),  # left
                            (eq, ":action_dir_defender", 1),  # right
                            (assign, ":actions_match", 1),
                          (try_end),
                          (eq, ":actions_match", 1),
                          (assign, "$g_tutorial_mouse_dir", -1),
                          (assign, "$g_tutorial_mouse_click", -1),
                          (agent_set_attack_action, ":trainer_agent", 0, 0),  # release
                          (
                              val_add,
                              "$g_tutorial_training_ground_melee_trainer_action_state",
                              1,
                          ),
                          (
                              store_mission_timer_a,
                              "$g_tutorial_training_ground_melee_trainer_next_action_time",
                          ),
                          (
                              val_add,
                              "$g_tutorial_training_ground_melee_trainer_next_action_time",
                              2,
                          ),
                        (else_try),
                          (eq, "$g_tutorial_training_ground_melee_trainer_action_state", 2),
                          (try_begin),
                            (store_mission_timer_a, ":cur_time"),
                            (
                                gt,
                                ":cur_time",
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                            ),
                            (
                                assign,
                                "$g_tutorial_training_ground_melee_trainer_action_state",
                                0,
                            ),
                          (try_end),
                        (try_end),
                      (try_end),
                    (try_end),
                    (try_begin),
                      (agent_is_in_parried_animation, ":trainer_agent"),
                      (agent_get_wielded_item, ":shield_item", ":player_agent", 1),
                      (eq, ":shield_item", -1),
                      (agent_get_wielded_item, ":weapon_item", ":player_agent", 0),
                      (neq, ":weapon_item", "itm_practice_dagger"),
                      (
                          call_script,
                          "script_cf_is_melee_weapon_for_tutorial",
                          ":weapon_item",
                      ),
                      (store_mission_timer_a, ":cur_time"),
                      (gt, ":cur_time", "$g_tutorial_training_ground_next_score_time"),
                      (val_add, "$g_tutorial_training_ground_current_score", 1),
                      (try_begin),
                        (lt, "$g_tutorial_training_ground_current_score", 5),
                        (play_sound, "snd_tutorial_1"),
                      (else_try),
                        (play_sound, "snd_tutorial_2"),
                      (try_end),
                      (
                          store_add,
                          "$g_tutorial_training_ground_next_score_time",
                          ":cur_time",
                          1,
                      ),
                    (try_end),
                    (assign, reg0, "$g_tutorial_training_ground_current_score"),
                    (try_begin),
                      (agent_get_wielded_item, ":shield_item", ":player_agent", 1),
                      (eq, ":shield_item", -1),
                      (agent_get_wielded_item, ":weapon_item", ":player_agent", 0),
                      (neq, ":weapon_item", "itm_practice_dagger"),
                      (
                          call_script,
                          "script_cf_is_melee_weapon_for_tutorial",
                          ":weapon_item",
                      ),
                      (tutorial_message, "str_tutorial_training_ground_parry_training"),
                    (else_try),
                      (neq, ":shield_item", -1),
                      (tutorial_message, "str_tutorial_training_ground_warning_shield"),
                    (else_try),
                      (
                          tutorial_message,
                          "str_tutorial_training_ground_warning_melee_with_parry",
                      ),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (get_player_agent_no, ":player_agent"),
                    (neq, "$g_tutorial_training_ground_melee_trainer_chamber", -1),
                    (mission_disable_talk),
                    (try_for_agents, ":cur_agent"),
                      (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                      (
                          eq,
                          ":cur_agent_troop",
                          "$g_tutorial_training_ground_melee_trainer_chamber",
                      ),
                      (assign, ":trainer_agent", ":cur_agent"),
                    (try_end),
                    (try_begin),
                      (eq, "$g_tutorial_training_ground_melee_state", 0),
                      (try_begin),
                        (try_for_agents, ":cur_agent"),
                          (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                          (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                          (agent_set_team, ":cur_agent", 7),
                          (
                              agent_get_slot,
                              ":spawn_point",
                              ":cur_agent",
                              slot_agent_spawn_entry_point,
                          ),
                          (entry_point_get_position, pos1, ":spawn_point"),
                          (agent_set_scripted_destination, ":cur_agent", pos1),
                          (agent_force_rethink, ":cur_agent"),
                        (try_end),
                        (
                            agent_set_wielded_item,
                            ":trainer_agent",
                            "itm_practice_sword",
                        ),  # TODO: change this
                        (val_add, "$g_tutorial_training_ground_melee_state", 1),
                        (
                            store_mission_timer_a,
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (val_add, "$g_tutorial_training_ground_melee_next_action_time", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_melee_state", 1),
                      (try_begin),
                        (store_mission_timer_a, ":cur_time"),
                        (
                            gt,
                            ":cur_time",
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (agent_set_team, ":player_agent", 1),
                        (agent_set_team, ":trainer_agent", 2),
                        (agent_get_position, pos1, ":player_agent"),
                        (agent_set_scripted_destination_no_attack, ":trainer_agent", pos1),
                        (agent_get_position, pos2, ":trainer_agent"),
                        (get_sq_distance_between_positions, ":sq_dist", pos1, pos2),
                        (lt, ":sq_dist", 400),  # 2 meters
                        (try_begin),
                          (eq, "$g_tutorial_training_ground_melee_trainer_action_state", 0),
                          (try_begin),
                            (ge, "$g_tutorial_training_ground_current_score", 5),
                            (tutorial_message, -1),
                            (assign, "$g_tutorial_training_ground_melee_state", 0),
                            (agent_set_team, ":player_agent", 0),
                            (agent_set_team, ":trainer_agent", 7),
                            (agent_set_hit_points, ":player_agent", 100, 0),
                            (agent_set_hit_points, ":trainer_agent", 100, 0),
                            (
                                assign,
                                "$g_tutorial_training_ground_conversation_state",
                                6,
                            ),  # chamber complete
                            (
                                start_mission_conversation,
                                "$g_tutorial_training_ground_melee_trainer_chamber",
                            ),
                            (assign, "$g_tutorial_training_ground_melee_trainer_chamber", -1),
                          (else_try),
                            (
                                store_random_in_range,
                                "$g_tutorial_training_ground_melee_trainer_attack_dir",
                                0,
                                4,
                            ),
                            (
                                agent_set_attack_action,
                                ":trainer_agent",
                                "$g_tutorial_training_ground_melee_trainer_attack_dir",
                                1,
                            ),  # ready
                            (
                                val_add,
                                "$g_tutorial_training_ground_melee_trainer_action_state",
                                1,
                            ),
                            (
                                store_mission_timer_a,
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                            ),
                            (
                                val_add,
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                                1,
                            ),
                          (try_end),
                        (else_try),
                          (eq, "$g_tutorial_training_ground_melee_trainer_action_state", 1),
                          (try_begin),
                            (store_mission_timer_a, ":cur_time"),
                            (
                                gt,
                                ":cur_time",
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                            ),
                            (agent_set_attack_action, ":trainer_agent", -1, 0),  # cancel
                            (agent_set_defend_action, ":trainer_agent", 0, 1),  # cancel
                            (
                                val_add,
                                "$g_tutorial_training_ground_melee_trainer_action_state",
                                1,
                            ),
                            (
                                store_mission_timer_a,
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                            ),
                            (
                                val_add,
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                                1,
                            ),
                          (try_end),
                        (else_try),
                          (eq, "$g_tutorial_training_ground_melee_trainer_action_state", 2),
                          (try_begin),
                            (store_mission_timer_a, ":cur_time"),
                            (
                                gt,
                                ":cur_time",
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                            ),
                            (
                                agent_set_attack_action,
                                ":trainer_agent",
                                "$g_tutorial_training_ground_melee_trainer_attack_dir",
                                0,
                            ),
                            (
                                val_add,
                                "$g_tutorial_training_ground_melee_trainer_action_state",
                                1,
                            ),
                            (
                                store_mission_timer_a,
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                            ),
                            (
                                val_add,
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                                2,
                            ),
                          (try_end),
                        (else_try),
                          (eq, "$g_tutorial_training_ground_melee_trainer_action_state", 3),
                          (try_begin),
                            (store_mission_timer_a, ":cur_time"),
                            (
                                gt,
                                ":cur_time",
                                "$g_tutorial_training_ground_melee_trainer_next_action_time",
                            ),
                            (
                                assign,
                                "$g_tutorial_training_ground_melee_trainer_action_state",
                                0,
                            ),
                          (try_end),
                        (try_end),
                      (try_end),
                    (try_end),
                    (try_begin),
                      (agent_is_in_parried_animation, ":trainer_agent"),
                      (agent_get_attack_action, ":attack_action", ":player_agent"),
                      (store_mission_timer_a, ":cur_time"),
                      (gt, ":cur_time", "$g_tutorial_training_ground_next_score_time"),
                      # add first, because player might immediately start attacking after parry
                      (
                          store_add,
                          "$g_tutorial_training_ground_next_score_time",
                          ":cur_time",
                          1,
                      ),
                      (eq, ":attack_action", 1),  # readying_attack
                      (val_add, "$g_tutorial_training_ground_current_score", 1),
                      (try_begin),
                        (lt, "$g_tutorial_training_ground_current_score", 5),
                        (play_sound, "snd_tutorial_1"),
                      (else_try),
                        (play_sound, "snd_tutorial_2"),
                      (try_end),
                    (try_end),
                    (assign, reg0, "$g_tutorial_training_ground_current_score"),
                    (tutorial_message, "str_tutorial_training_ground_chamber_training"),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (get_player_agent_no, ":player_agent"),
                    (neq, "$g_tutorial_training_ground_melee_trainer_combat", -1),
                    (mission_disable_talk),
                    (try_for_agents, ":cur_agent"),
                      (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                      (
                          eq,
                          ":cur_agent_troop",
                          "$g_tutorial_training_ground_melee_trainer_combat",
                      ),
                      (assign, ":trainer_agent", ":cur_agent"),
                    (try_end),
                    (try_begin),
                      (eq, "$g_tutorial_training_ground_melee_state", 0),
                      (try_begin),
                        (try_for_agents, ":cur_agent"),
                          (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                          (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                          (agent_set_team, ":cur_agent", 7),
                          (
                              agent_get_slot,
                              ":spawn_point",
                              ":cur_agent",
                              slot_agent_spawn_entry_point,
                          ),
                          (entry_point_get_position, pos1, ":spawn_point"),
                          (agent_set_scripted_destination, ":cur_agent", pos1),
                          (agent_force_rethink, ":cur_agent"),
                        (try_end),
                        (
                            agent_set_wielded_item,
                            ":trainer_agent",
                            "itm_practice_sword",
                        ),  # TODO: change this
                        (val_add, "$g_tutorial_training_ground_melee_state", 1),
                        (
                            store_mission_timer_a,
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (val_add, "$g_tutorial_training_ground_melee_next_action_time", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_melee_state", 1),
                      (try_begin),
                        (store_mission_timer_a, ":cur_time"),
                        (
                            gt,
                            ":cur_time",
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (agent_set_team, ":player_agent", 1),
                        (agent_set_team, ":trainer_agent", 2),
                        (agent_clear_scripted_mode, ":trainer_agent"),
                        (agent_force_rethink, ":trainer_agent"),
                      (try_end),
                    (try_end),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (eq, "$g_tutorial_training_ground_melee_trainer_attack", -1),
                    (eq, "$g_tutorial_training_ground_melee_trainer_parry", -1),
                    (eq, "$g_tutorial_training_ground_melee_trainer_combat", -1),
                    (eq, "$g_tutorial_training_ground_melee_trainer_chamber", -1),
                    (eq, "$g_tutorial_training_ground_archer_trainer_state", 0),
                    (eq, "$g_tutorial_training_ground_horseman_trainer_state", 0),
                    (mission_enable_talk),
                ],
                [],
            ),
            (
                0,
                0,
                0,
                [
                    (eq, "$g_tutorial_training_ground_melee_trainer_attack", -1),
                    (eq, "$g_tutorial_training_ground_melee_trainer_parry", -1),
                    (eq, "$g_tutorial_training_ground_melee_trainer_combat", -1),
                    (eq, "$g_tutorial_training_ground_melee_trainer_chamber", -1),
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_position, pos1, ":player_agent"),
                    (assign, ":shortest_dist", 10000000),
                    (try_for_agents, ":cur_agent"),
                      (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                      (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                      (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                      (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                      (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                      (agent_get_position, pos2, ":cur_agent"),
                      (get_sq_distance_between_positions, ":cur_dist", pos1, pos2),
                      (lt, ":cur_dist", ":shortest_dist"),
                      (assign, ":shortest_dist", ":cur_dist"),
                    (try_end),
                    (try_begin),
                      (le, ":shortest_dist", 1600),  # 4 meters
                      (assign, "$g_tutorial_training_ground_melee_paused", 1),
                      (try_for_agents, ":cur_agent"),
                        (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                        (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                        (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                        (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                        (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                        (agent_set_team, ":cur_agent", 7),
                        (agent_get_position, pos2, ":cur_agent"),
                        (agent_set_scripted_destination, ":cur_agent", pos2),
                        (try_begin),
                          (
                              neq,
                              ":cur_agent",
                              "$g_tutorial_training_ground_melee_cur_fighter_1",
                          ),
                          (
                              neq,
                              ":cur_agent",
                              "$g_tutorial_training_ground_melee_cur_fighter_2",
                          ),
                          (agent_set_wielded_item, ":cur_agent", -1),
                        (try_end),
                        (agent_force_rethink, ":cur_agent"),
                        (agent_set_look_target_agent, ":cur_agent", ":player_agent"),
                      (try_end),
                    (else_try),
                      (gt, "$g_tutorial_training_ground_melee_paused", 0),
                      (assign, "$g_tutorial_training_ground_melee_paused", 0),
                      (assign, "$g_tutorial_training_ground_melee_state", 0),
                    (try_end),
                    (try_begin),
                      (eq, "$g_tutorial_training_ground_melee_paused", 0),
                      (eq, "$g_tutorial_training_ground_melee_state", 0),
                      (try_begin),
                        (assign, "$g_tutorial_training_ground_melee_cur_fighter_1", -1),
                        (assign, "$g_tutorial_training_ground_melee_cur_fighter_2", -1),
                        (try_for_range, ":unused", 0, 2),
                          (try_begin),
                            (ge, "$g_tutorial_training_ground_melee_last_winner", 0),
                            (
                                assign,
                                "$g_tutorial_training_ground_melee_cur_fighter_1",
                                "$g_tutorial_training_ground_melee_last_winner",
                            ),
                            (assign, "$g_tutorial_training_ground_melee_last_winner", -1),
                          (try_end),
                          (
                              this_or_next | eq,
                              "$g_tutorial_training_ground_melee_cur_fighter_1",
                              -1,
                          ),
                          (eq, "$g_tutorial_training_ground_melee_cur_fighter_2", -1),
                          (assign, ":num_candidates", 0),
                          (try_for_agents, ":cur_agent"),
                            (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                            (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                            (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                            (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                            (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                            (
                                neq,
                                ":cur_agent",
                                "$g_tutorial_training_ground_melee_cur_fighter_1",
                            ),
                            (
                                neq,
                                ":cur_agent",
                                "$g_tutorial_training_ground_melee_cur_fighter_2",
                            ),
                            (neq, ":cur_agent", "$g_tutorial_training_ground_melee_last_loser"),
                            (val_add, ":num_candidates", 1),
                          (try_end),
                          (store_random_in_range, ":random_candidate", 0, ":num_candidates"),
                          (try_for_agents, ":cur_agent"),
                            (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                            (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                            (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                            (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                            (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                            (
                                neq,
                                ":cur_agent",
                                "$g_tutorial_training_ground_melee_cur_fighter_1",
                            ),
                            (
                                neq,
                                ":cur_agent",
                                "$g_tutorial_training_ground_melee_cur_fighter_2",
                            ),
                            (neq, ":cur_agent", "$g_tutorial_training_ground_melee_last_loser"),
                            (val_sub, ":random_candidate", 1),
                            (lt, ":random_candidate", 0),
                            (try_begin),
                              (eq, "$g_tutorial_training_ground_melee_cur_fighter_1", -1),
                              (
                                  assign,
                                  "$g_tutorial_training_ground_melee_cur_fighter_1",
                                  ":cur_agent",
                              ),
                            (else_try),
                              (
                                  assign,
                                  "$g_tutorial_training_ground_melee_cur_fighter_2",
                                  ":cur_agent",
                              ),
                            (try_end),
                          (try_end),
                        (try_end),
                        (try_for_agents, ":cur_agent"),
                          (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                          (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                          (
                              neq,
                              ":cur_agent",
                              "$g_tutorial_training_ground_melee_cur_fighter_1",
                          ),
                          (
                              neq,
                              ":cur_agent",
                              "$g_tutorial_training_ground_melee_cur_fighter_2",
                          ),
                          (agent_set_wielded_item, ":cur_agent", -1),
                        (try_end),
                        (
                            val_add,
                            "$g_tutorial_training_ground_melee_state",
                            1,
                        ),  # fighters are chosen
                        (
                            store_mission_timer_a,
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (val_add, "$g_tutorial_training_ground_melee_next_action_time", 3),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_melee_state", 1),
                      (try_begin),
                        (store_mission_timer_a, ":cur_time"),
                        (
                            gt,
                            ":cur_time",
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (try_for_agents, ":cur_agent"),
                          (agent_is_human, ":cur_agent"),
                          (agent_get_troop_id, ":cur_agent_troop", ":cur_agent"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_1"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_2"),
                          (this_or_next | eq, ":cur_agent_troop", "trp_tutorial_fighter_3"),
                          (eq, ":cur_agent_troop", "trp_tutorial_fighter_4"),
                          (try_begin),
                            (
                                eq,
                                ":cur_agent",
                                "$g_tutorial_training_ground_melee_cur_fighter_1",
                            ),
                            (entry_point_get_position, pos1, 30),
                            (agent_set_scripted_destination, ":cur_agent", pos1),
                          (else_try),
                            (
                                eq,
                                ":cur_agent",
                                "$g_tutorial_training_ground_melee_cur_fighter_2",
                            ),
                            (entry_point_get_position, pos1, 31),
                            (agent_set_scripted_destination, ":cur_agent", pos1),
                          (else_try),
                            (
                                agent_get_slot,
                                ":spawn_point",
                                ":cur_agent",
                                slot_agent_spawn_entry_point,
                            ),
                            (entry_point_get_position, pos1, ":spawn_point"),
                            (agent_set_scripted_destination, ":cur_agent", pos1),
                          (try_end),
                        (try_end),
                        (val_add, "$g_tutorial_training_ground_melee_state", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_melee_state", 2),
                      (try_begin),
                        (
                            agent_set_look_target_agent,
                            "$g_tutorial_training_ground_melee_cur_fighter_1",
                            "$g_tutorial_training_ground_melee_cur_fighter_2",
                        ),
                        (
                            agent_set_look_target_agent,
                            "$g_tutorial_training_ground_melee_cur_fighter_2",
                            "$g_tutorial_training_ground_melee_cur_fighter_1",
                        ),
                        (
                            agent_get_position,
                            pos1,
                            "$g_tutorial_training_ground_melee_cur_fighter_1",
                        ),
                        (entry_point_get_position, pos2, 30),
                        (get_sq_distance_between_positions, ":sq_dist_1", pos1, pos2),
                        (lt, ":sq_dist_1", 400),  # 2 meters
                        (
                            agent_get_position,
                            pos1,
                            "$g_tutorial_training_ground_melee_cur_fighter_2",
                        ),
                        (entry_point_get_position, pos2, 31),
                        (get_sq_distance_between_positions, ":sq_dist_2", pos1, pos2),
                        (lt, ":sq_dist_2", 400),  # 2 meters
                        (val_add, "$g_tutorial_training_ground_melee_state", 1),
                        (
                            store_mission_timer_a,
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (val_add, "$g_tutorial_training_ground_melee_next_action_time", 1),
                      (try_end),
                    (else_try),
                      (eq, "$g_tutorial_training_ground_melee_state", 3),
                      (try_begin),
                        (
                            agent_set_look_target_agent,
                            "$g_tutorial_training_ground_melee_cur_fighter_1",
                            "$g_tutorial_training_ground_melee_cur_fighter_2",
                        ),
                        (
                            agent_set_look_target_agent,
                            "$g_tutorial_training_ground_melee_cur_fighter_2",
                            "$g_tutorial_training_ground_melee_cur_fighter_1",
                        ),
                        (store_mission_timer_a, ":cur_time"),
                        (
                            gt,
                            ":cur_time",
                            "$g_tutorial_training_ground_melee_next_action_time",
                        ),
                        (
                            agent_clear_scripted_mode,
                            "$g_tutorial_training_ground_melee_cur_fighter_1",
                        ),
                        (
                            agent_clear_scripted_mode,
                            "$g_tutorial_training_ground_melee_cur_fighter_2",
                        ),
                        (
                            agent_set_team,
                            "$g_tutorial_training_ground_melee_cur_fighter_1",
                            1,
                        ),
                        (
                            agent_set_team,
                            "$g_tutorial_training_ground_melee_cur_fighter_2",
                            2,
                        ),
                        (
                            agent_force_rethink,
                            "$g_tutorial_training_ground_melee_cur_fighter_1",
                        ),
                        (
                            agent_force_rethink,
                            "$g_tutorial_training_ground_melee_cur_fighter_2",
                        ),
                        (val_add, "$g_tutorial_training_ground_melee_state", 1),
                      (try_end),
                    (try_end),
                ],
                [],
            ),
        ],
    ),
    (
        "quick_battle_battle",
        mtf_battle_mode,
        -1,
        "You lead your men to battle.",
        [
            (0, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (1, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (2, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (3, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (4, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (5, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (6, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (7, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (8, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (9, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (10, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (11, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (12, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (13, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (14, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (15, mtef_visitor_source | mtef_team_0, 0, aif_start_alarmed, 1, []),
            (16, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (17, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (18, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (19, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (20, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (21, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (22, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (23, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (24, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (25, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (26, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (27, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (28, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (29, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (30, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
            (31, mtef_visitor_source | mtef_team_1, 0, aif_start_alarmed, 1, []),
        ],
        [
            common_custom_battle_tab_press,
            common_custom_battle_question_answered,
            common_inventory_not_available,
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (scene_set_day_time, 15),
                ],
            ),
            common_battle_init_banner,
            (
                0,
                0,
                ti_once,
                [],
                [
                    (assign, "$g_battle_result", 0),
                    (call_script, "script_combat_music_set_situation_with_culture"),
                ],
            ),
            # simple_battle_morale_check,
            common_battle_morale_check,
            common_music_situation_update,
            custom_battle_check_victory_condition,
            common_battle_victory_display,
            custom_battle_check_defeat_condition,
        ],
    ),
    (
        "quick_battle_siege",
        mtf_battle_mode,
        -1,
        "You lead your men to battle.",
        [
            (
                0,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                1,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                2,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                3,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                4,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                5,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                6,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                7,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                8,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                9,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                10,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                11,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                12,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                13,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                14,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                15,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                16,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                17,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                18,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                19,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                20,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                21,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                22,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                23,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                24,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                25,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                26,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                27,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                28,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                29,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                30,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                31,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                32,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                33,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                34,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                35,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                36,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                37,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                38,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                39,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                40,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                41,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                42,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                43,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                44,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                45,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                46,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                47,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            common_battle_mission_start,
            common_battle_init_banner,
            (
                0,
                0,
                ti_once,
                [
                    (assign, "$defender_team", 0),
                    (assign, "$attacker_team", 1),
                    (assign, "$defender_team_2", 2),
                    (assign, "$attacker_team_2", 3),
                ],
                [],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (scene_set_day_time, 15),
                ],
            ),
            common_custom_battle_tab_press,
            common_custom_battle_question_answered,
            common_inventory_not_available,
            common_custom_siege_init,
            common_music_situation_update,
            custom_battle_check_victory_condition,
            common_battle_victory_display,
            custom_battle_check_defeat_condition,
            common_siege_attacker_do_not_stall,
            common_siege_refill_ammo,
            common_siege_init_ai_and_belfry,
            common_siege_move_belfry,
            common_siege_rotate_belfry,
            common_siege_assign_men_to_belfry,
            common_siege_ai_trigger_init_2,
        ],
    ),
    (
        "bandit_lair",
        mtf_battle_mode | mtf_synch_inventory,
        charge,
        "Ambushing a bandit lair",
        [
            (
                0,
                mtef_team_0 | mtef_use_exact_number,
                af_override_horse,
                aif_start_alarmed,
                7,
                [],
            ),
            (
                1,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                2,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                3,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                4,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                5,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                6,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                7,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                8,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                9,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                10,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
        ],
        [
            common_battle_init_banner,
            common_inventory_not_available,
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (assign, "$relative_of_merchant_is_found", 0),
                    (try_begin),
                      (agent_is_human, ":agent_no"),
                      (agent_is_alive, ":agent_no"),
                      (agent_get_team, ":agent_team", ":agent_no"),
                      (eq, ":agent_team", 1),
                      (agent_get_position, pos4, ":agent_no"),
                      (agent_set_scripted_destination, ":agent_no", pos4, 1),
                    (try_end),
                    (try_begin),
                      (agent_get_troop_id, ":troop_no", ":agent_no"),
                      (eq, ":troop_no", "trp_relative_of_merchant"),
                      (agent_set_team, ":agent_no", 7),
                      (team_set_relation, 0, 7, 0),
                    (try_end),
                ],
            ),
            (
                0,
                0,
                0,
                [
                    (party_get_template_id, ":template", "$g_encountered_party"),
                    (eq, ":template", "pt_looter_lair"),
                    (check_quest_active, "qst_save_relative_of_merchant"),
                    (eq, "$relative_of_merchant_is_found", 0),
                ],
                [
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_position, pos0, ":player_agent"),
                    (try_for_agents, ":agent_no"),
                      (agent_get_troop_id, ":troop_no", ":agent_no"),
                      (eq, ":troop_no", "trp_relative_of_merchant"),
                      (agent_set_scripted_destination, ":agent_no", pos0),
                      (agent_get_position, pos1, ":agent_no"),
                      (get_distance_between_positions, ":dist", pos0, pos1),
                      (le, ":dist", 200),
                      (start_mission_conversation, "trp_relative_of_merchant"),
                    (try_end),
                ],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (display_message, "str_cannot_leave_now"),
                ],
                [],
            ),
            (
                1,
                0,
                ti_once,
                [],
                [
                    (assign, "$defender_reinforcement_stage", 0),
                    (assign, "$bandits_spawned_extra", 0),
                ],
            ),
            (
                1,
                0,
                0,
                [],
                [
                    (try_for_agents, ":bandit_id"),
                      (agent_is_alive, ":bandit_id"),
                      (agent_get_team, ":agent_team_1", ":bandit_id"),
                      (eq, ":agent_team_1", 1),
                      (agent_is_in_special_mode, ":bandit_id"),
                      (agent_is_human, ":bandit_id"),
                      (agent_get_position, pos0, ":bandit_id"),
                      (try_for_agents, ":player_team_agent_id"),
                        (agent_is_alive, ":player_team_agent_id"),
                        (agent_get_team, ":agent_team_2", ":player_team_agent_id"),
                        (eq, ":agent_team_2", 0),
                        (agent_is_human, ":player_team_agent_id"),
                        (store_agent_hit_points, ":bandit_hit_points", ":bandit_id"),
                        (assign, ":continue", 0),
                        (try_begin),
                          (lt, ":bandit_hit_points", 100),
                          (try_for_agents, ":bandit_2_id"),
                            (agent_is_alive, ":bandit_2_id"),
                            (agent_get_team, ":bandit_2_team", ":bandit_2_id"),
                            (eq, ":bandit_2_team", 1),
                            (neq, ":bandit_id", ":bandit_2_id"),
                            (agent_is_in_special_mode, ":bandit_2_id"),
                            (agent_is_human, ":bandit_2_id"),
                            (agent_get_position, pos1, ":bandit_id"),
                            (agent_get_position, pos2, ":bandit_2_id"),
                            (get_distance_between_positions, ":distance", pos1, pos2),
                            (le, ":distance", 1000),
                            (agent_clear_scripted_mode, ":bandit_2_id"),
                          (try_end),
                          (assign, ":continue", 1),
                        (else_try),
                          (agent_get_position, pos1, ":bandit_id"),
                          (agent_get_position, pos2, ":player_team_agent_id"),
                          (get_distance_between_positions, ":distance", pos1, pos2),
                          (le, ":distance", 4000),
                          (try_for_agents, ":bandit_2_id"),
                            (agent_is_alive, ":bandit_2_id"),
                            (agent_get_team, ":bandit_2_team", ":bandit_2_id"),
                            (eq, ":bandit_2_team", 1),
                            (neq, ":bandit_id", ":bandit_2_id"),
                            (agent_is_in_special_mode, ":bandit_2_id"),
                            (agent_is_human, ":bandit_2_id"),
                            (agent_get_position, pos1, ":bandit_id"),
                            (agent_get_position, pos2, ":bandit_2_id"),
                            (get_distance_between_positions, ":distance", pos1, pos2),
                            (le, ":distance", 1000),
                            (agent_clear_scripted_mode, ":bandit_2_id"),
                          (try_end),
                          (assign, ":continue", 1),
                        (try_end),
                        (eq, ":continue", 1),
                        (agent_clear_scripted_mode, ":bandit_id"),
                      (try_end),
                    (try_end),
                ],
            ),
            (
                30,
                0,
                0,
                [
                    (le, "$defender_reinforcement_stage", 1),
                ],
                [
                    (store_character_level, ":player_level", "trp_player"),
                    (
                        store_add,
                        ":number_of_bandits_will_be_spawned_at_each_period",
                        5,
                        ":player_level",
                    ),
                    (val_div, ":number_of_bandits_will_be_spawned_at_each_period", 3),
                    (
                        lt,
                        "$bandits_spawned_extra",
                        ":number_of_bandits_will_be_spawned_at_each_period",
                    ),
                    (val_add, "$bandits_spawned_extra", 1),
                    (party_get_template_id, ":template", "$g_encountered_party"),
                    (store_random_in_range, ":random_value", 0, 2),
                    (try_begin),
                      (eq, ":template", "pt_sea_raider_lair"),
                      (eq, ":random_value", 0),
                      (assign, ":bandit_troop", "trp_sea_raider"),
                    (else_try),
                      (eq, ":template", "pt_forest_bandit_lair"),
                      (eq, ":random_value", 0),
                      (assign, ":bandit_troop", "trp_forest_bandit"),
                    (else_try),
                      (eq, ":template", "pt_desert_bandit_lair"),
                      (eq, ":random_value", 0),
                      (assign, ":bandit_troop", "trp_desert_bandit"),
                    (else_try),
                      (eq, ":template", "pt_mountain_bandit_lair"),
                      (eq, ":random_value", 0),
                      (assign, ":bandit_troop", "trp_mountain_bandit"),
                    (else_try),
                      (eq, ":template", "pt_taiga_bandit_lair"),
                      (eq, ":random_value", 0),
                      (assign, ":bandit_troop", "trp_taiga_bandit"),
                    (else_try),
                      (eq, ":template", "pt_steppe_bandit_lair"),
                      (eq, ":random_value", 0),
                      (assign, ":bandit_troop", "trp_steppe_bandit"),
                    (else_try),
                      (this_or_next | eq, ":template", "pt_looter_lair"),
                      (neq, ":random_value", 0),
                      (assign, ":bandit_troop", "trp_looter"),
                    (try_end),
                    (store_current_scene, ":cur_scene"),
                    (modify_visitors_at_site, ":cur_scene"),
                    (store_random_in_range, ":random_entry_point", 2, 11),
                    (
                        add_visitors_to_current_scene,
                        ":random_entry_point",
                        ":bandit_troop",
                        1,
                    ),
                ],
            ),
            (
                ti_on_agent_killed_or_wounded,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":dead_agent_no"),
                    # (store_trigger_param_2, ":killer_agent_no"),
                    (store_trigger_param_3, ":is_wounded"),
                    (try_begin),
                      (ge, ":dead_agent_no", 0),
                      (agent_is_human, ":dead_agent_no"),
                      (agent_get_troop_id, ":dead_agent_troop_id", ":dead_agent_no"),
                      (str_store_troop_name, s6, ":dead_agent_troop_id"),
                      (try_begin),
                        (neg | agent_is_ally, ":dead_agent_no"),
                        (
                            party_add_members,
                            "p_total_enemy_casualties",
                            ":dead_agent_troop_id",
                            1,
                        ),  # addition_to_p_total_enemy_casualties
                        (try_begin),
                          (eq, ":is_wounded", 1),
                          (
                              party_wound_members,
                              "p_total_enemy_casualties",
                              ":dead_agent_troop_id",
                              1,
                          ),
                        (try_end),
                      (try_end),
                      (
                          party_add_members,
                          "p_temp_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),  # addition_to_p_total_enemy_casualties
                      (eq, ":is_wounded", 1),
                      (
                          party_wound_members,
                          "p_temp_casualties",
                          ":dead_agent_troop_id",
                          1,
                      ),
                    (try_end),
                    (assign, ":number_of_enemies", 0),
                    (try_for_agents, ":cur_agent"),
                      (agent_is_non_player, ":cur_agent"),
                      (agent_is_human, ":cur_agent"),
                      (agent_is_alive, ":cur_agent"),
                      (neg | agent_is_ally, ":cur_agent"),
                      (val_add, ":number_of_enemies", 1),
                    (try_end),
                    (try_begin),
                      (le, ":number_of_enemies", 2),
                      (le, "$defender_reinforcement_stage", 1),
                      (val_add, "$defender_reinforcement_stage", 1),
                      (store_character_level, ":player_level", "trp_player"),
                      (
                          store_add,
                          ":number_of_bandits_will_be_spawned_at_each_period",
                          5,
                          ":player_level",
                      ),
                      (val_div, ":number_of_bandits_will_be_spawned_at_each_period", 3),
                      (try_begin),
                        (ge, "$defender_reinforcement_stage", 2),
                        (
                            val_sub,
                            ":number_of_bandits_will_be_spawned_at_each_period",
                            "$bandits_spawned_extra",
                        ),
                      (try_end),
                      (party_get_template_id, ":template", "$g_encountered_party"),
                      (store_random_in_range, ":random_value", 0, 2),
                      (try_begin),
                        (eq, ":template", "pt_sea_raider_lair"),
                        (eq, ":random_value", 0),
                        (assign, ":bandit_troop", "trp_sea_raider"),
                      (else_try),
                        (eq, ":template", "pt_forest_bandit_lair"),
                        (eq, ":random_value", 0),
                        (assign, ":bandit_troop", "trp_forest_bandit"),
                      (else_try),
                        (eq, ":template", "pt_desert_bandit_lair"),
                        (eq, ":random_value", 0),
                        (assign, ":bandit_troop", "trp_desert_bandit"),
                      (else_try),
                        (eq, ":template", "pt_mountain_bandit_lair"),
                        (eq, ":random_value", 0),
                        (assign, ":bandit_troop", "trp_mountain_bandit"),
                      (else_try),
                        (eq, ":template", "pt_taiga_bandit_lair"),
                        (eq, ":random_value", 0),
                        (assign, ":bandit_troop", "trp_taiga_bandit"),
                      (else_try),
                        (eq, ":template", "pt_steppe_bandit_lair"),
                        (eq, ":random_value", 0),
                        (assign, ":bandit_troop", "trp_steppe_bandit"),
                      (else_try),
                        (this_or_next | eq, ":template", "pt_looter_lair"),
                        (neq, ":random_value", 0),
                        (assign, ":bandit_troop", "trp_looter"),
                      (try_end),
                      (store_current_scene, ":cur_scene"),
                      (modify_visitors_at_site, ":cur_scene"),
                      (
                          try_for_range,
                          ":unused",
                          0,
                          ":number_of_bandits_will_be_spawned_at_each_period",
                      ),
                        (store_random_in_range, ":random_entry_point", 2, 11),
                        (
                            add_visitors_to_current_scene,
                            ":random_entry_point",
                            ":bandit_troop",
                            1,
                        ),
                      (try_end),
                    (try_end),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_ambushed,
                    ),
                    (set_party_battle_mode),
                ],
            ),
            (
                2,
                0,
                ti_once,
                [
                    (neg | main_hero_fallen),
                    (num_active_teams_le, 1),
                ],
                [
                    (party_get_template_id, ":template", "$g_encountered_party"),
                    (try_begin),
                      (eq, ":template", "pt_looter_lair"),
                      (check_quest_active, "qst_save_relative_of_merchant"),
                      (get_player_agent_no, ":player_agent"),
                      (agent_get_position, pos0, ":player_agent"),
                      (assign, ":minimum_distance", 100000),
                      (try_for_range, ":entry_no", 1, 10),
                        (entry_point_get_position, pos1, ":entry_no"),
                        (get_distance_between_positions, ":dist", pos0, pos1),
                        (le, ":dist", ":minimum_distance"),
                        (ge, ":dist", 1000),
                        (assign, ":nearest_entry_point", ":entry_no"),
                        (assign, ":minimum_distance", ":dist"),
                      (try_end),
                      (
                          add_visitors_to_current_scene,
                          ":nearest_entry_point",
                          "trp_relative_of_merchant",
                          1,
                          0,
                      ),
                    (try_end),
                ],
            ),
            common_battle_order_panel,
            common_battle_order_panel_tick,
            (
                1,
                4,
                ti_once,
                [
                    (assign, ":continue", 0),
                    (party_get_template_id, ":template", "$g_encountered_party"),
                    (try_begin),
                      (eq, ":template", "pt_looter_lair"),
                      (check_quest_active, "qst_save_relative_of_merchant"),
                      (this_or_next | main_hero_fallen),
                      (eq, "$relative_of_merchant_is_found", 1),
                      (assign, ":continue", 1),
                    (else_try),
                      (this_or_next | neq | eq, ":template", "pt_looter_lair"),
                      (neg | check_quest_active, "qst_save_relative_of_merchant"),
                      (store_mission_timer_a, ":cur_time"),
                      (ge, ":cur_time", 5),
                      (this_or_next | main_hero_fallen),
                      (num_active_teams_le, 1),
                      (assign, ":continue", 1),
                    (try_end),
                    (eq, ":continue", 1),
                ],
                [
                    (try_begin),
                      (main_hero_fallen),
                    (else_try),
                      (party_set_slot, "$g_encountered_party", slot_party_ai_substate, 2),
                    (try_end),
                    (finish_mission),
                ],
            ),
        ],
    ),
    (
        "alley_fight",
        mtf_battle_mode,
        charge,
        "Alley fight",
        [
            (
                0,
                mtef_team_0 | mtef_use_exact_number,
                af_override_horse,
                aif_start_alarmed,
                7,
                [],
            ),
            (
                1,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                2,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
            (
                3,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                20,
                [],
            ),
        ],
        [
            common_battle_init_banner,
            common_inventory_not_available,
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (get_player_agent_no, ":player_agent"),
                    (neq, ":agent_no", ":player_agent"),
                    (assign, "$g_main_attacker_agent", ":agent_no"),
                    (agent_ai_set_aggressiveness, ":agent_no", 199),
                    (try_begin),
                      (agent_get_troop_id, ":troop_no", ":agent_no"),
                      (
                          is_between,
                          ":troop_no",
                          startup_merchants_begin,
                          startup_merchants_end,
                      ),
                      (agent_set_team, ":agent_no", 7),
                      (team_set_relation, 0, 7, 0),
                    (try_end),
                ],
            ),
            (
                0,
                0,
                0,
                [
                    (eq, "$talked_with_merchant", 0),
                ],
                [
                    (get_player_agent_no, ":player_agent"),
                    (agent_get_position, pos0, ":player_agent"),
                    (try_for_agents, ":agent_no"),
                      (agent_get_troop_id, ":troop_no", ":agent_no"),
                      (
                          is_between,
                          ":troop_no",
                          startup_merchants_begin,
                          startup_merchants_end,
                      ),
                      (agent_set_scripted_destination, ":agent_no", pos0),
                      (agent_get_position, pos1, ":agent_no"),
                      (get_distance_between_positions, ":dist", pos0, pos1),
                      (le, ":dist", 200),
                      (assign, "$talk_context", tc_back_alley),
                      (start_mission_conversation, ":troop_no"),
                    (try_end),
                ],
            ),
            (
                1,
                0,
                0,
                [],
                [
                    (get_player_agent_no, ":player_agent"),
                    (ge, "$g_main_attacker_agent", 0),
                    (ge, ":player_agent", 0),
                    (agent_is_active, "$g_main_attacker_agent"),
                    (agent_is_active, ":player_agent"),
                    (agent_get_position, pos0, ":player_agent"),
                    (agent_get_position, pos1, "$g_main_attacker_agent"),
                    (get_distance_between_positions, ":dist", pos0, pos1),
                    (ge, ":dist", 5),
                    (agent_set_scripted_destination, "$g_main_attacker_agent", pos0),
                ],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [],
                [
                    (display_message, "str_cannot_leave_now"),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [],
                [
                    (
                        call_script,
                        "script_music_set_situation_with_culture",
                        mtf_sit_ambushed,
                    ),
                    (set_party_battle_mode),
                ],
            ),
            (
                0,
                0,
                ti_once,
                [
                    (neg | main_hero_fallen),
                    (num_active_teams_le, 1),
                ],
                [
                    (
                        party_get_slot,
                        ":starting_town_faction",
                        "$g_starting_town",
                        slot_center_original_faction,
                    ),
                    (try_begin),
                      (
                          store_sub,
                          ":troop_of_merchant",
                          ":starting_town_faction",
                          "fac_kingdom_1",
                      ),
                      (val_add, ":troop_of_merchant", startup_merchants_begin),
                      (
                          is_between,
                          ":troop_of_merchant",
                          startup_merchants_begin,
                          startup_merchants_end,
                      ),
                    (else_try),
                      (assign, ":troop_of_merchant", startup_merchants_default),
                    (try_end),
                    (add_visitors_to_current_scene, 3, ":troop_of_merchant", 1, 0),
                ],
            ),
            (
                1,
                0,
                ti_once,
                [
                    (eq, "$talked_with_merchant", 1),
                ],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (assign, "$g_killed_first_bandit", 0),
                    (else_try),
                      (assign, "$g_killed_first_bandit", 1),
                    (try_end),
                    (finish_mission),
                    (assign, "$g_main_attacker_agent", 0),
                    (assign, "$talked_with_merchant", 1),
                    (assign, "$current_startup_quest_phase", 1),
                    (change_screen_return),
                    (set_trigger_result, 1),
                    (get_player_agent_no, ":player_agent"),
                    (store_agent_hit_points, ":hit_points", ":player_agent"),
                    (try_begin),
                      (lt, ":hit_points", 90),
                      (agent_set_hit_points, ":player_agent", 90),
                    (try_end),
                ],
            ),
            (
                1,
                3,
                ti_once,
                [
                    (main_hero_fallen),
                ],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (assign, "$g_killed_first_bandit", 0),
                    (else_try),
                      (assign, "$g_killed_first_bandit", 1),
                    (try_end),
                    (finish_mission),
                    (assign, "$g_main_attacker_agent", 0),
                    (assign, "$talked_with_merchant", 1),
                    (assign, "$current_startup_quest_phase", 1),
                    (change_screen_return),
                    (set_trigger_result, 1),
                    (get_player_agent_no, ":player_agent"),
                    (store_agent_hit_points, ":hit_points", ":player_agent"),
                    (try_begin),
                      (lt, ":hit_points", 90),
                      (agent_set_hit_points, ":player_agent", 90),
                    (try_end),
                ],
            ),
        ],
    ),
    (
        "meeting_merchant",
        0,
        -1,
        "Meeting with the merchant",
        [
            (0, mtef_team_0, af_override_horse, 0, 1, []),
            (1, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (2, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (3, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (4, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (5, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (6, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (7, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (8, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (9, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
        ],
        [
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (try_begin),
                      (agent_get_troop_id, ":troop_no", ":agent_no"),
                      (
                          is_between,
                          ":troop_no",
                          startup_merchants_begin,
                          startup_merchants_end,
                      ),
                      (agent_set_team, ":agent_no", 7),
                      (team_set_relation, 0, 7, 0),
                    (try_end),
                ],
            ),
            (
                1,
                0,
                ti_once,
                [],
                [
                    (assign, "$dialog_with_merchant_ended", 0),
                    (store_current_scene, ":cur_scene"),
                    (scene_set_slot, ":cur_scene", slot_scene_visited, 1),
                    (try_begin),
                      (eq, "$sneaked_into_town", 1),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          mtf_sit_town_infiltrate,
                      ),
                    (else_try),
                      (eq, "$talk_context", tc_tavern_talk),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          mtf_sit_tavern,
                      ),
                    (else_try),
                      (
                          call_script,
                          "script_music_set_situation_with_culture",
                          mtf_sit_town,
                      ),
                    (try_end),
                ],
            ),
            (
                1,
                0,
                0,
                [
                    (assign, ":continue", 0),
                    (try_begin),
                      (ge, "$dialog_with_merchant_ended", 6),
                      (assign, ":continue", 1),
                    (else_try),
                      (ge, "$dialog_with_merchant_ended", 1),
                      (neg | conversation_screen_is_active),
                      (try_begin),
                        (eq, "$dialog_with_merchant_ended", 1),
                        (check_quest_active, "qst_collect_men"),
                        (tutorial_box, "str_start_up_first_quest", "@Tutorial"),
                      (try_end),
                      (val_add, "$dialog_with_merchant_ended", 1),
                      (assign, ":continue", 0),
                    (try_end),
                    (try_begin),
                      (conversation_screen_is_active),
                      (tutorial_message, -1),
                      (assign, ":continue", 0),
                    (try_end),
                    (eq, ":continue", 1),
                ],
                [
                    (tutorial_message_set_size, 17, 17),
                    (tutorial_message_set_position, 500, 650),
                    (tutorial_message_set_center_justify, 0),
                    (tutorial_message_set_background, 1),
                    (tutorial_message, "str_press_tab_to_exit_from_town"),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    # (call_script, "script_change_banners_and_chest"),
                ],
            ),
            (
                ti_inventory_key_pressed,
                0,
                0,
                [
                    (set_trigger_result, 1),
                ],
                [],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (try_begin),
                      (gt, "$dialog_with_merchant_ended", 0),
                      (assign, ":max_dist", 0),
                      (party_get_position, pos1, "$current_town"),
                      (try_for_range, ":unused", 0, 10),
                        (map_get_random_position_around_position, pos0, pos1, 2),
                        (get_distance_between_positions, ":dist", pos0, pos1),
                        (ge, ":dist", ":max_dist"),
                        (assign, ":max_dist", ":dist"),
                        (copy_position, pos2, pos0),
                      (try_end),
                      (party_set_position, "p_main_party", pos2),
                      (finish_mission),
                      (assign, "$current_startup_quest_phase", 2),
                      (tutorial_message, -1),
                      (tutorial_message_set_background, 0),
                      (change_screen_map),
                      (try_begin),
                        (check_quest_finished, "qst_save_town_from_bandits"),
                        (assign, "$g_do_one_more_meeting_with_merchant", 1),
                      (else_try),
                        # will do this at first spawning in the map
                        (set_spawn_radius, 50),
                        (try_for_range, ":unused", 0, 20),
                          (spawn_around_party, "p_main_party", "pt_looters"),
                        (try_end),
                      (try_end),
                      (set_trigger_result, 1),
                    (else_try),
                      (display_message, "str_cannot_leave_now"),
                    (try_end),
                ],
                [],
            ),
        ],
    ),
    (
        "town_fight",
        0,
        -1,
        "Town Fight",
        [
            (0, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (1, mtef_scene_source | mtef_team_0, af_override_horse, 0, 1, []),
            (2, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (3, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (4, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (5, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (6, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (7, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (8, mtef_visitor_source | mtef_team_0, af_override_horse, 0, 1, []),
            (9, mtef_visitor_source, af_override_horse, 0, 1, []),
            (10, mtef_visitor_source, af_override_horse, 0, 1, []),
            (11, mtef_visitor_source | mtef_team_1, af_override_horse, 0, 1, []),
            (12, mtef_visitor_source | mtef_team_1, af_override_horse, 0, 1, []),
            (13, mtef_visitor_source | mtef_team_1, af_override_horse, 0, 1, []),
            (14, mtef_visitor_source, af_override_horse, 0, 1, []),
            (15, mtef_visitor_source, af_override_horse, 0, 1, []),
            (16, mtef_visitor_source, af_override_horse, 0, 1, []),
            (17, mtef_visitor_source, af_override_horse, 0, 1, []),
            (18, mtef_visitor_source, af_override_horse, 0, 1, []),
            (19, mtef_visitor_source, af_override_horse, 0, 1, []),
            (20, mtef_visitor_source, af_override_horse, 0, 1, []),
            (21, mtef_visitor_source | mtef_team_1, af_override_horse, 0, 1, []),
            (22, mtef_visitor_source | mtef_team_1, af_override_horse, 0, 1, []),
            (
                23,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # guard
            (
                24,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # guard
            (
                25,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # guard
            (
                26,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # guard
            (
                27,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # guard
            (
                28,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # guard
            (29, mtef_visitor_source, af_override_horse, 0, 1, []),
            (30, mtef_visitor_source, af_override_horse, 0, 1, []),
            (31, mtef_visitor_source, af_override_horse, 0, 1, []),
            (
                32,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # town walker point
            (
                33,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # town walker point
            (
                34,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # town walker point
            (
                35,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # town walker point
            (
                36,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # town walker point
            (
                37,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # town walker point
            (
                38,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # town walker point
            (
                39,
                mtef_visitor_source | mtef_team_0,
                af_override_horse,
                0,
                1,
                [],
            ),  # town walker point
            (
                40,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),  # in towns, can be used for guard reinforcements
            (
                41,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),  # in towns, can be used for guard reinforcements
            (
                42,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),  # in towns, can be used for guard reinforcements
            (
                43,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),  # in towns, can be used for guard reinforcements
            (
                44,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                45,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                46,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
            (
                47,
                mtef_visitor_source | mtef_team_1,
                af_override_horse,
                aif_start_alarmed,
                1,
                [],
            ),
        ],
        [
            common_battle_init_banner,
            (
                ti_on_agent_spawn,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":agent_no"),
                    (agent_set_team, ":agent_no", 0),
                ],
            ),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [
                    (mission_disable_talk),
                    (assign, "$g_main_attacker_agent", 0),
                    (set_party_battle_mode),
                    (assign, "$number_of_bandits_killed_by_player", 0),
                    (assign, "$number_of_civilian_loses", 0),
                    (set_fixed_point_multiplier, 100),
                ],
            ),
            (
                1,
                0,
                ti_once,
                [
                    (call_script, "script_init_town_walker_agents"),
                ],
                [],
            ),
            (
                ti_on_agent_killed_or_wounded,
                0,
                0,
                [],
                [
                    (store_trigger_param_1, ":dead_agent_no"),
                    (store_trigger_param_2, ":killer_agent_no"),
                    # (store_trigger_param_3, ":is_wounded"),
                    (try_begin),
                      (agent_get_team, ":dead_agent_team_no", ":dead_agent_no"),
                      (eq, ":dead_agent_team_no", 1),
                      (get_player_agent_no, ":player_agent"),
                      (eq, ":player_agent", ":killer_agent_no"),
                      (val_add, "$number_of_bandits_killed_by_player", 1),
                    (else_try),
                      (eq, ":dead_agent_team_no", 0),
                      (val_add, "$number_of_civilian_loses", 1),
                    (try_end),
                ],
            ),
            (
                1,
                0,
                0,
                [
                    (lt, "$merchant_sign_count", 8),
                    (val_add, "$merchant_sign_count", 1),
                    (try_begin),
                      (eq, "$merchant_sign_count", 2),
                      (get_player_agent_no, ":player_agent"),
                      (try_for_agents, ":agent_no"),
                        (agent_get_troop_id, ":agent_troop_id", ":agent_no"),
                        (
                            is_between,
                            ":agent_troop_id",
                            startup_merchants_begin,
                            startup_merchants_end,
                        ),
                        (assign, "$g_city_merchant_troop_id", ":agent_troop_id"),
                        (assign, "$g_city_merchant_agent_id", ":agent_no"),
                        (agent_get_position, pos0, ":player_agent"),
                        (agent_get_position, pos1, ":agent_no"),
                        (assign, ":max_dif", -1000),
                        (try_for_range, ":target_entry_point", 0, 64),
                          # (neg|entry_point_is_auto_generated, ":target_entry_point"),
                          (entry_point_get_position, pos6, ":target_entry_point"),
                          (get_distance_between_positions, ":dist_to_player", pos0, pos6),
                          (get_distance_between_positions, ":dist_to_merchant", pos1, pos6),
                          (store_sub, ":dif", ":dist_to_merchant", ":dist_to_player"),
                          (ge, ":dist_to_merchant", 15),
                          (ge, ":dif", ":max_dif"),
                          (copy_position, pos2, pos6),
                          (assign, ":max_dif", ":dif"),
                        (try_end),
                        (agent_set_scripted_destination, ":agent_no", pos2, 0),
                        (agent_set_speed_limit, ":agent_no", 10),
                      (try_end),
                    (else_try),
                      (eq, "$merchant_sign_count", 5),
                      (get_player_agent_no, ":player_agent"),
                      (agent_get_position, pos0, ":player_agent"),
                      (
                          agent_set_scripted_destination,
                          "$g_city_merchant_agent_id",
                          pos0,
                          0,
                      ),
                      (agent_set_speed_limit, "$g_city_merchant_agent_id", 10),
                    (else_try),
                      (eq, "$merchant_sign_count", 7),
                      (agent_clear_scripted_mode, "$g_city_merchant_agent_id"),
                      (assign, "$talk_context", tc_town_talk),
                      (start_mission_conversation, "$g_city_merchant_troop_id"),
                    (try_end),
                ],
                [],
            ),
            (
                1,
                0,
                0,
                [],
                [
                    (ge, "$merchant_sign_count", 8),
                    (get_player_agent_no, ":player_agent"),
                    (try_for_agents, ":agent_no"),
                      (neq, ":agent_no", ":player_agent"),
                      (agent_is_alive, ":agent_no"),
                      (agent_get_team, ":agent_team", ":agent_no"),
                      (eq, ":agent_team", 0),
                      (agent_get_position, pos0, ":agent_no"),
                      (assign, ":minimum_distance", 10000),
                      (try_for_agents, ":bandit_no"),
                        (agent_is_alive, ":bandit_no"),
                        (agent_get_team, ":bandit_team", ":bandit_no"),
                        (eq, ":bandit_team", 1),
                        (agent_get_position, pos1, ":bandit_no"),
                        (get_distance_between_positions, ":dist", pos0, pos1),
                        (le, ":dist", ":minimum_distance"),
                        (assign, ":minimum_distance", ":dist"),
                        (copy_position, pos2, pos1),
                      (try_end),
                      (assign, reg1, ":dist"),
                      (try_begin),
                        (le, ":minimum_distance", 500),
                        (agent_clear_scripted_mode, ":agent_no"),
                      (else_try),
                        (lt, ":minimum_distance", 10000),
                        (agent_set_scripted_destination, ":agent_no", pos2, 0),
                      (try_end),
                    (try_end),
                ],
            ),
            (
                3,
                0,
                0,
                [
                    (lt, "$merchant_sign_count", 8),
                    (call_script, "script_tick_town_walkers"),
                ],
                [],
            ),
            (2, 0, 0, [(call_script, "script_center_ambiance_sounds")], []),
            (
                ti_before_mission_start,
                0,
                0,
                [],
                [(call_script, "script_change_banners_and_chest")],
            ),
            (
                1,
                4,
                ti_once,
                [
                    (this_or_next | main_hero_fallen),
                    (num_active_teams_le, 1),
                    (ge, "$merchant_sign_count", 8),
                ],
                [
                    (try_begin),
                      (main_hero_fallen),
                      (assign, "$g_killed_first_bandit", 0),
                    (else_try),
                      (assign, "$g_killed_first_bandit", 1),
                    (try_end),
                    (assign, "$current_startup_quest_phase", 4),
                    (mission_enable_talk),
                    (finish_mission),
                    (unlock_achievement, ACHIEVEMENT_GET_UP_STAND_UP),
                    (change_screen_return),
                    (set_trigger_result, 1),
                ],
            ),
            (
                ti_inventory_key_pressed,
                0,
                0,
                [
                    (try_begin),
                      (eq, "$g_mt_mode", tcm_default),
                      (set_trigger_result, 1),
                    (else_try),
                      (eq, "$g_mt_mode", tcm_disguised),
                      (display_message, "str_cant_use_inventory_disguised"),
                    (else_try),
                      (display_message, "str_cant_use_inventory_now"),
                    (try_end),
                ],
                [],
            ),
            (
                ti_tab_pressed,
                0,
                0,
                [
                    (display_message, "str_cannot_leave_now"),
                ],
                [],
            ),
        ],
    ),
]
